
app02_ADC_UART.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003f08  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000038c  080040a8  080040a8  000050a8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004434  08004434  00006328  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08004434  08004434  00005434  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800443c  0800443c  00006328  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800443c  0800443c  0000543c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004440  08004440  00005440  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000328  20000000  08004444  00006000  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  9 .bss          00000560  20000328  0800476c  00006328  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000888  0800476c  00006888  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00006328  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001d83  00000000  00000000  00006358  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000084e  00000000  00000000  000080db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000300  00000000  00000000  00008930  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000225  00000000  00000000  00008c30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00015839  00000000  00000000  00008e55  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000036bc  00000000  00000000  0001e68e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00084aaa  00000000  00000000  00021d4a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000a67f4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001be8  00000000  00000000  000a6838  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006a  00000000  00000000  000a8420  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000328 	.word	0x20000328
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004088 	.word	0x08004088

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000032c 	.word	0x2000032c
 80001dc:	08004088 	.word	0x08004088

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2f>:
 8000bb8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bbc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bc0:	bf24      	itt	cs
 8000bc2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bc6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bca:	d90d      	bls.n	8000be8 <__aeabi_d2f+0x30>
 8000bcc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000bd0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bd4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bd8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000bdc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000be0:	bf08      	it	eq
 8000be2:	f020 0001 	biceq.w	r0, r0, #1
 8000be6:	4770      	bx	lr
 8000be8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000bec:	d121      	bne.n	8000c32 <__aeabi_d2f+0x7a>
 8000bee:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000bf2:	bfbc      	itt	lt
 8000bf4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000bf8:	4770      	bxlt	lr
 8000bfa:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bfe:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c02:	f1c2 0218 	rsb	r2, r2, #24
 8000c06:	f1c2 0c20 	rsb	ip, r2, #32
 8000c0a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c0e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c12:	bf18      	it	ne
 8000c14:	f040 0001 	orrne.w	r0, r0, #1
 8000c18:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c1c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c20:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c24:	ea40 000c 	orr.w	r0, r0, ip
 8000c28:	fa23 f302 	lsr.w	r3, r3, r2
 8000c2c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c30:	e7cc      	b.n	8000bcc <__aeabi_d2f+0x14>
 8000c32:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c36:	d107      	bne.n	8000c48 <__aeabi_d2f+0x90>
 8000c38:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c3c:	bf1e      	ittt	ne
 8000c3e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c42:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c46:	4770      	bxne	lr
 8000c48:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c4c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c50:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c54:	4770      	bx	lr
 8000c56:	bf00      	nop

08000c58 <main>:
void delay(unsigned int t);
void ADC_Init();
float ADC_Measure();
float temp_measure();

int main() {
 8000c58:	b580      	push	{r7, lr}
 8000c5a:	b082      	sub	sp, #8
 8000c5c:	af00      	add	r7, sp, #0
	DMA2_Init();
 8000c5e:	f000 f95d 	bl	8000f1c <DMA2_Init>
	UART1_Init();
 8000c62:	f000 f9b9 	bl	8000fd8 <UART1_Init>
	TIMER1_Init();
 8000c66:	f000 f8e3 	bl	8000e30 <TIMER1_Init>
	ADC_Init();
 8000c6a:	f000 f81d 	bl	8000ca8 <ADC_Init>
	while (1) {
		if (firmware_updated == 1) {
 8000c6e:	4b0c      	ldr	r3, [pc, #48]	@ (8000ca0 <main+0x48>)
 8000c70:	681b      	ldr	r3, [r3, #0]
 8000c72:	2b01      	cmp	r3, #1
 8000c74:	d102      	bne.n	8000c7c <main+0x24>
			__asm("cpsid i");
 8000c76:	b672      	cpsid	i
			update();
 8000c78:	f003 fa12 	bl	80040a0 <__update_veneer>
		}
		float temp = temp_measure();
 8000c7c:	f000 f8b0 	bl	8000de0 <temp_measure>
 8000c80:	ed87 0a01 	vstr	s0, [r7, #4]
		UART_Write_String("Room temperature is: %.2f\n", temp);
 8000c84:	6878      	ldr	r0, [r7, #4]
 8000c86:	f7ff fc67 	bl	8000558 <__aeabi_f2d>
 8000c8a:	4602      	mov	r2, r0
 8000c8c:	460b      	mov	r3, r1
 8000c8e:	4805      	ldr	r0, [pc, #20]	@ (8000ca4 <main+0x4c>)
 8000c90:	f000 fa30 	bl	80010f4 <UART_Write_String>
		delay(1000);
 8000c94:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000c98:	f000 f928 	bl	8000eec <delay>
	while (1) {
 8000c9c:	e7e7      	b.n	8000c6e <main+0x16>
 8000c9e:	bf00      	nop
 8000ca0:	20000344 	.word	0x20000344
 8000ca4:	080040a8 	.word	0x080040a8

08000ca8 <ADC_Init>:
	}
	return 0;
}

void ADC_Init() {
 8000ca8:	b480      	push	{r7}
 8000caa:	b087      	sub	sp, #28
 8000cac:	af00      	add	r7, sp, #0
	uint32_t* ADC_EN = (uint32_t*)(RCC_BASE + RCC_APB2ENR);
 8000cae:	4b20      	ldr	r3, [pc, #128]	@ (8000d30 <ADC_Init+0x88>)
 8000cb0:	617b      	str	r3, [r7, #20]
	*ADC_EN |= (0b01 << 8);
 8000cb2:	697b      	ldr	r3, [r7, #20]
 8000cb4:	681b      	ldr	r3, [r3, #0]
 8000cb6:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8000cba:	697b      	ldr	r3, [r7, #20]
 8000cbc:	601a      	str	r2, [r3, #0]
	uint32_t* ADC1_SMPR1 = (uint32_t*)(ADC1_BASE + ADC_SMPR1);
 8000cbe:	4b1d      	ldr	r3, [pc, #116]	@ (8000d34 <ADC_Init+0x8c>)
 8000cc0:	613b      	str	r3, [r7, #16]
	*ADC1_SMPR1 &= ~(0b111 << 18);
 8000cc2:	693b      	ldr	r3, [r7, #16]
 8000cc4:	681b      	ldr	r3, [r3, #0]
 8000cc6:	f423 12e0 	bic.w	r2, r3, #1835008	@ 0x1c0000
 8000cca:	693b      	ldr	r3, [r7, #16]
 8000ccc:	601a      	str	r2, [r3, #0]
	*ADC1_SMPR1 |= (0b111 << 18);
 8000cce:	693b      	ldr	r3, [r7, #16]
 8000cd0:	681b      	ldr	r3, [r3, #0]
 8000cd2:	f443 12e0 	orr.w	r2, r3, #1835008	@ 0x1c0000
 8000cd6:	693b      	ldr	r3, [r7, #16]
 8000cd8:	601a      	str	r2, [r3, #0]
	uint32_t* ADC1_JSQR = (uint32_t*)(ADC1_BASE + ADC_JSQR);
 8000cda:	4b17      	ldr	r3, [pc, #92]	@ (8000d38 <ADC_Init+0x90>)
 8000cdc:	60fb      	str	r3, [r7, #12]
	*ADC1_JSQR &= ~(0x1F << 15);
 8000cde:	68fb      	ldr	r3, [r7, #12]
 8000ce0:	681b      	ldr	r3, [r3, #0]
 8000ce2:	f423 2278 	bic.w	r2, r3, #1015808	@ 0xf8000
 8000ce6:	68fb      	ldr	r3, [r7, #12]
 8000ce8:	601a      	str	r2, [r3, #0]
	*ADC1_JSQR |= (16 << 15);
 8000cea:	68fb      	ldr	r3, [r7, #12]
 8000cec:	681b      	ldr	r3, [r3, #0]
 8000cee:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 8000cf2:	68fb      	ldr	r3, [r7, #12]
 8000cf4:	601a      	str	r2, [r3, #0]
	*ADC1_JSQR &= ~(0b11 << 20);
 8000cf6:	68fb      	ldr	r3, [r7, #12]
 8000cf8:	681b      	ldr	r3, [r3, #0]
 8000cfa:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8000cfe:	68fb      	ldr	r3, [r7, #12]
 8000d00:	601a      	str	r2, [r3, #0]
	uint32_t* ADC1_CCR = (uint32_t*)(ADC1_BASE + ADC_CCR);
 8000d02:	4b0e      	ldr	r3, [pc, #56]	@ (8000d3c <ADC_Init+0x94>)
 8000d04:	60bb      	str	r3, [r7, #8]
	*ADC1_CCR |= (0b01 << 23);
 8000d06:	68bb      	ldr	r3, [r7, #8]
 8000d08:	681b      	ldr	r3, [r3, #0]
 8000d0a:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 8000d0e:	68bb      	ldr	r3, [r7, #8]
 8000d10:	601a      	str	r2, [r3, #0]
	uint32_t* ADC1_CR2 = (uint32_t*)(ADC1_BASE + ADC_CR2);
 8000d12:	4b0b      	ldr	r3, [pc, #44]	@ (8000d40 <ADC_Init+0x98>)
 8000d14:	607b      	str	r3, [r7, #4]
	*ADC1_CR2 |= (0b01 << 0);
 8000d16:	687b      	ldr	r3, [r7, #4]
 8000d18:	681b      	ldr	r3, [r3, #0]
 8000d1a:	f043 0201 	orr.w	r2, r3, #1
 8000d1e:	687b      	ldr	r3, [r7, #4]
 8000d20:	601a      	str	r2, [r3, #0]
}
 8000d22:	bf00      	nop
 8000d24:	371c      	adds	r7, #28
 8000d26:	46bd      	mov	sp, r7
 8000d28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d2c:	4770      	bx	lr
 8000d2e:	bf00      	nop
 8000d30:	40023844 	.word	0x40023844
 8000d34:	4001200c 	.word	0x4001200c
 8000d38:	40012038 	.word	0x40012038
 8000d3c:	40012304 	.word	0x40012304
 8000d40:	40012008 	.word	0x40012008
 8000d44:	00000000 	.word	0x00000000

08000d48 <ADC_Measure>:

float ADC_Measure() {
 8000d48:	b580      	push	{r7, lr}
 8000d4a:	b084      	sub	sp, #16
 8000d4c:	af00      	add	r7, sp, #0
	uint32_t* ADC1_CR2 = (uint32_t*)(ADC1_BASE + ADC_CR2);
 8000d4e:	4b20      	ldr	r3, [pc, #128]	@ (8000dd0 <ADC_Measure+0x88>)
 8000d50:	60fb      	str	r3, [r7, #12]
	*ADC1_CR2 |= (0b01 << 22);
 8000d52:	68fb      	ldr	r3, [r7, #12]
 8000d54:	681b      	ldr	r3, [r3, #0]
 8000d56:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8000d5a:	68fb      	ldr	r3, [r7, #12]
 8000d5c:	601a      	str	r2, [r3, #0]
	uint32_t* ADC1_SR = (uint32_t*)(ADC1_BASE + ADC_SR);
 8000d5e:	4b1d      	ldr	r3, [pc, #116]	@ (8000dd4 <ADC_Measure+0x8c>)
 8000d60:	60bb      	str	r3, [r7, #8]
	while (((*ADC1_SR >> 2) & 1) == 0);
 8000d62:	bf00      	nop
 8000d64:	68bb      	ldr	r3, [r7, #8]
 8000d66:	681b      	ldr	r3, [r3, #0]
 8000d68:	089b      	lsrs	r3, r3, #2
 8000d6a:	f003 0301 	and.w	r3, r3, #1
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	d0f8      	beq.n	8000d64 <ADC_Measure+0x1c>
	*ADC1_SR &= ~(0b01 << 2);
 8000d72:	68bb      	ldr	r3, [r7, #8]
 8000d74:	681b      	ldr	r3, [r3, #0]
 8000d76:	f023 0204 	bic.w	r2, r3, #4
 8000d7a:	68bb      	ldr	r3, [r7, #8]
 8000d7c:	601a      	str	r2, [r3, #0]
	uint32_t* ADC1_JDR1 = (uint32_t*)(ADC1_BASE + ADC_JDR1);
 8000d7e:	4b16      	ldr	r3, [pc, #88]	@ (8000dd8 <ADC_Measure+0x90>)
 8000d80:	607b      	str	r3, [r7, #4]
	return (*ADC1_JDR1) / 4095.0 * 3.0;
 8000d82:	687b      	ldr	r3, [r7, #4]
 8000d84:	681b      	ldr	r3, [r3, #0]
 8000d86:	4618      	mov	r0, r3
 8000d88:	f7ff fbc4 	bl	8000514 <__aeabi_ui2d>
 8000d8c:	a30e      	add	r3, pc, #56	@ (adr r3, 8000dc8 <ADC_Measure+0x80>)
 8000d8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000d92:	f7ff fd63 	bl	800085c <__aeabi_ddiv>
 8000d96:	4602      	mov	r2, r0
 8000d98:	460b      	mov	r3, r1
 8000d9a:	4610      	mov	r0, r2
 8000d9c:	4619      	mov	r1, r3
 8000d9e:	f04f 0200 	mov.w	r2, #0
 8000da2:	4b0e      	ldr	r3, [pc, #56]	@ (8000ddc <ADC_Measure+0x94>)
 8000da4:	f7ff fc30 	bl	8000608 <__aeabi_dmul>
 8000da8:	4602      	mov	r2, r0
 8000daa:	460b      	mov	r3, r1
 8000dac:	4610      	mov	r0, r2
 8000dae:	4619      	mov	r1, r3
 8000db0:	f7ff ff02 	bl	8000bb8 <__aeabi_d2f>
 8000db4:	4603      	mov	r3, r0
 8000db6:	ee07 3a90 	vmov	s15, r3
}
 8000dba:	eeb0 0a67 	vmov.f32	s0, s15
 8000dbe:	3710      	adds	r7, #16
 8000dc0:	46bd      	mov	sp, r7
 8000dc2:	bd80      	pop	{r7, pc}
 8000dc4:	f3af 8000 	nop.w
 8000dc8:	00000000 	.word	0x00000000
 8000dcc:	40affe00 	.word	0x40affe00
 8000dd0:	40012008 	.word	0x40012008
 8000dd4:	40012000 	.word	0x40012000
 8000dd8:	4001203c 	.word	0x4001203c
 8000ddc:	40080000 	.word	0x40080000

08000de0 <temp_measure>:

float temp_measure() {
 8000de0:	b580      	push	{r7, lr}
 8000de2:	b084      	sub	sp, #16
 8000de4:	af00      	add	r7, sp, #0
	float vsense = ADC_Measure();
 8000de6:	f7ff ffaf 	bl	8000d48 <ADC_Measure>
 8000dea:	ed87 0a03 	vstr	s0, [r7, #12]
	float v25 = 0.76;
 8000dee:	4b0e      	ldr	r3, [pc, #56]	@ (8000e28 <temp_measure+0x48>)
 8000df0:	60bb      	str	r3, [r7, #8]
	float avg_slope = 2.5/1000;
 8000df2:	4b0e      	ldr	r3, [pc, #56]	@ (8000e2c <temp_measure+0x4c>)
 8000df4:	607b      	str	r3, [r7, #4]
	float recorded_temp = ((vsense - v25)/avg_slope) + 25;
 8000df6:	ed97 7a03 	vldr	s14, [r7, #12]
 8000dfa:	edd7 7a02 	vldr	s15, [r7, #8]
 8000dfe:	ee77 6a67 	vsub.f32	s13, s14, s15
 8000e02:	ed97 7a01 	vldr	s14, [r7, #4]
 8000e06:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000e0a:	eeb3 7a09 	vmov.f32	s14, #57	@ 0x41c80000  25.0
 8000e0e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8000e12:	edc7 7a00 	vstr	s15, [r7]
	return recorded_temp;
 8000e16:	683b      	ldr	r3, [r7, #0]
 8000e18:	ee07 3a90 	vmov	s15, r3
}
 8000e1c:	eeb0 0a67 	vmov.f32	s0, s15
 8000e20:	3710      	adds	r7, #16
 8000e22:	46bd      	mov	sp, r7
 8000e24:	bd80      	pop	{r7, pc}
 8000e26:	bf00      	nop
 8000e28:	3f428f5c 	.word	0x3f428f5c
 8000e2c:	3b23d70a 	.word	0x3b23d70a

08000e30 <TIMER1_Init>:

void TIMER1_Init() {
 8000e30:	b480      	push	{r7}
 8000e32:	b087      	sub	sp, #28
 8000e34:	af00      	add	r7, sp, #0
	uint32_t* TIMER1_EN = (uint32_t*)(RCC_BASE + RCC_APB2ENR);
 8000e36:	4b19      	ldr	r3, [pc, #100]	@ (8000e9c <TIMER1_Init+0x6c>)
 8000e38:	617b      	str	r3, [r7, #20]
	*TIMER1_EN |= (0b01 << 0);
 8000e3a:	697b      	ldr	r3, [r7, #20]
 8000e3c:	681b      	ldr	r3, [r3, #0]
 8000e3e:	f043 0201 	orr.w	r2, r3, #1
 8000e42:	697b      	ldr	r3, [r7, #20]
 8000e44:	601a      	str	r2, [r3, #0]
	uint16_t* TIMER1_CR1 = (uint16_t*)(TIMER1_BASE + TIM_CR1);
 8000e46:	4b16      	ldr	r3, [pc, #88]	@ (8000ea0 <TIMER1_Init+0x70>)
 8000e48:	613b      	str	r3, [r7, #16]
	*TIMER1_CR1 |= (0b01 << 0);
 8000e4a:	693b      	ldr	r3, [r7, #16]
 8000e4c:	881b      	ldrh	r3, [r3, #0]
 8000e4e:	f043 0301 	orr.w	r3, r3, #1
 8000e52:	b29a      	uxth	r2, r3
 8000e54:	693b      	ldr	r3, [r7, #16]
 8000e56:	801a      	strh	r2, [r3, #0]
	uint16_t* TIMER1_PSC = (uint16_t*)(TIMER1_BASE + TIM_PSC);
 8000e58:	4b12      	ldr	r3, [pc, #72]	@ (8000ea4 <TIMER1_Init+0x74>)
 8000e5a:	60fb      	str	r3, [r7, #12]
	*TIMER1_PSC = 16000 - 1;
 8000e5c:	68fb      	ldr	r3, [r7, #12]
 8000e5e:	f643 627f 	movw	r2, #15999	@ 0x3e7f
 8000e62:	801a      	strh	r2, [r3, #0]
	uint16_t* TIMER1_ARR = (uint16_t*)(TIMER1_BASE + TIM_ARR);
 8000e64:	4b10      	ldr	r3, [pc, #64]	@ (8000ea8 <TIMER1_Init+0x78>)
 8000e66:	60bb      	str	r3, [r7, #8]
	*TIMER1_ARR = 1;
 8000e68:	68bb      	ldr	r3, [r7, #8]
 8000e6a:	2201      	movs	r2, #1
 8000e6c:	801a      	strh	r2, [r3, #0]
	uint16_t* TIMER1_DIER = (uint16_t*)(TIMER1_BASE + TIM_DIER);
 8000e6e:	4b0f      	ldr	r3, [pc, #60]	@ (8000eac <TIMER1_Init+0x7c>)
 8000e70:	607b      	str	r3, [r7, #4]
	*TIMER1_DIER |= (0b01 << 0);
 8000e72:	687b      	ldr	r3, [r7, #4]
 8000e74:	881b      	ldrh	r3, [r3, #0]
 8000e76:	f043 0301 	orr.w	r3, r3, #1
 8000e7a:	b29a      	uxth	r2, r3
 8000e7c:	687b      	ldr	r3, [r7, #4]
 8000e7e:	801a      	strh	r2, [r3, #0]
	uint32_t* NVIC_ISER0 = (uint32_t*)0xE000E100;
 8000e80:	4b0b      	ldr	r3, [pc, #44]	@ (8000eb0 <TIMER1_Init+0x80>)
 8000e82:	603b      	str	r3, [r7, #0]
	*NVIC_ISER0 |= (0b01 << 25);
 8000e84:	683b      	ldr	r3, [r7, #0]
 8000e86:	681b      	ldr	r3, [r3, #0]
 8000e88:	f043 7200 	orr.w	r2, r3, #33554432	@ 0x2000000
 8000e8c:	683b      	ldr	r3, [r7, #0]
 8000e8e:	601a      	str	r2, [r3, #0]
}
 8000e90:	bf00      	nop
 8000e92:	371c      	adds	r7, #28
 8000e94:	46bd      	mov	sp, r7
 8000e96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e9a:	4770      	bx	lr
 8000e9c:	40023844 	.word	0x40023844
 8000ea0:	40010000 	.word	0x40010000
 8000ea4:	40010028 	.word	0x40010028
 8000ea8:	4001002c 	.word	0x4001002c
 8000eac:	4001000c 	.word	0x4001000c
 8000eb0:	e000e100 	.word	0xe000e100

08000eb4 <TIM1_UP_TIM10_IRQHandler>:

void TIM1_UP_TIM10_IRQHandler() {
 8000eb4:	b480      	push	{r7}
 8000eb6:	b083      	sub	sp, #12
 8000eb8:	af00      	add	r7, sp, #0
	counter++;
 8000eba:	4b0a      	ldr	r3, [pc, #40]	@ (8000ee4 <TIM1_UP_TIM10_IRQHandler+0x30>)
 8000ebc:	681b      	ldr	r3, [r3, #0]
 8000ebe:	3301      	adds	r3, #1
 8000ec0:	4a08      	ldr	r2, [pc, #32]	@ (8000ee4 <TIM1_UP_TIM10_IRQHandler+0x30>)
 8000ec2:	6013      	str	r3, [r2, #0]
	uint16_t* TIMER1_SR = (uint16_t*)(TIMER1_BASE + TIM_SR);
 8000ec4:	4b08      	ldr	r3, [pc, #32]	@ (8000ee8 <TIM1_UP_TIM10_IRQHandler+0x34>)
 8000ec6:	607b      	str	r3, [r7, #4]
	*TIMER1_SR &= ~(0b01 << 0);
 8000ec8:	687b      	ldr	r3, [r7, #4]
 8000eca:	881b      	ldrh	r3, [r3, #0]
 8000ecc:	f023 0301 	bic.w	r3, r3, #1
 8000ed0:	b29a      	uxth	r2, r3
 8000ed2:	687b      	ldr	r3, [r7, #4]
 8000ed4:	801a      	strh	r2, [r3, #0]
}
 8000ed6:	bf00      	nop
 8000ed8:	370c      	adds	r7, #12
 8000eda:	46bd      	mov	sp, r7
 8000edc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ee0:	4770      	bx	lr
 8000ee2:	bf00      	nop
 8000ee4:	20000348 	.word	0x20000348
 8000ee8:	40010010 	.word	0x40010010

08000eec <delay>:

void delay(unsigned int t) {
 8000eec:	b480      	push	{r7}
 8000eee:	b083      	sub	sp, #12
 8000ef0:	af00      	add	r7, sp, #0
 8000ef2:	6078      	str	r0, [r7, #4]
	counter = 0;
 8000ef4:	4b08      	ldr	r3, [pc, #32]	@ (8000f18 <delay+0x2c>)
 8000ef6:	2200      	movs	r2, #0
 8000ef8:	601a      	str	r2, [r3, #0]
	while (t >= counter);
 8000efa:	bf00      	nop
 8000efc:	4b06      	ldr	r3, [pc, #24]	@ (8000f18 <delay+0x2c>)
 8000efe:	681b      	ldr	r3, [r3, #0]
 8000f00:	461a      	mov	r2, r3
 8000f02:	687b      	ldr	r3, [r7, #4]
 8000f04:	4293      	cmp	r3, r2
 8000f06:	d2f9      	bcs.n	8000efc <delay+0x10>
}
 8000f08:	bf00      	nop
 8000f0a:	bf00      	nop
 8000f0c:	370c      	adds	r7, #12
 8000f0e:	46bd      	mov	sp, r7
 8000f10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f14:	4770      	bx	lr
 8000f16:	bf00      	nop
 8000f18:	20000348 	.word	0x20000348

08000f1c <DMA2_Init>:

void DMA2_Init() {
 8000f1c:	b480      	push	{r7}
 8000f1e:	b087      	sub	sp, #28
 8000f20:	af00      	add	r7, sp, #0
	uint32_t* DMA2_EN = (uint32_t*)(RCC_BASE + RCC_AHB1ENR);
 8000f22:	4b1a      	ldr	r3, [pc, #104]	@ (8000f8c <DMA2_Init+0x70>)
 8000f24:	617b      	str	r3, [r7, #20]
	*DMA2_EN |= (0b01 << 22);
 8000f26:	697b      	ldr	r3, [r7, #20]
 8000f28:	681b      	ldr	r3, [r3, #0]
 8000f2a:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8000f2e:	697b      	ldr	r3, [r7, #20]
 8000f30:	601a      	str	r2, [r3, #0]
	uint32_t* DMA2_SM0AR = (uint32_t*)(DMA2_BASE + DMA_SM0AR);
 8000f32:	4b17      	ldr	r3, [pc, #92]	@ (8000f90 <DMA2_Init+0x74>)
 8000f34:	613b      	str	r3, [r7, #16]
	*DMA2_SM0AR = rxbuff;
 8000f36:	4a17      	ldr	r2, [pc, #92]	@ (8000f94 <DMA2_Init+0x78>)
 8000f38:	693b      	ldr	r3, [r7, #16]
 8000f3a:	601a      	str	r2, [r3, #0]
	uint32_t* DMA2_SPAR = (uint32_t*)(DMA2_BASE + DMA_SPAR);
 8000f3c:	4b16      	ldr	r3, [pc, #88]	@ (8000f98 <DMA2_Init+0x7c>)
 8000f3e:	60fb      	str	r3, [r7, #12]
	*DMA2_SPAR = 0x40011004;
 8000f40:	68fb      	ldr	r3, [r7, #12]
 8000f42:	4a16      	ldr	r2, [pc, #88]	@ (8000f9c <DMA2_Init+0x80>)
 8000f44:	601a      	str	r2, [r3, #0]
	uint32_t* DMA2_SNDTR = (uint32_t*)(DMA2_BASE + DMA_SNDTR);
 8000f46:	4b16      	ldr	r3, [pc, #88]	@ (8000fa0 <DMA2_Init+0x84>)
 8000f48:	60bb      	str	r3, [r7, #8]
	*DMA2_SNDTR = sizeof(rxbuff);
 8000f4a:	68bb      	ldr	r3, [r7, #8]
 8000f4c:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8000f50:	601a      	str	r2, [r3, #0]
	uint32_t* DMA2_SCR = (uint32_t*)(DMA2_BASE + DMA_SCR);
 8000f52:	4b14      	ldr	r3, [pc, #80]	@ (8000fa4 <DMA2_Init+0x88>)
 8000f54:	607b      	str	r3, [r7, #4]
	*DMA2_SCR &= ~(0b111 << 25);
 8000f56:	687b      	ldr	r3, [r7, #4]
 8000f58:	681b      	ldr	r3, [r3, #0]
 8000f5a:	f023 6260 	bic.w	r2, r3, #234881024	@ 0xe000000
 8000f5e:	687b      	ldr	r3, [r7, #4]
 8000f60:	601a      	str	r2, [r3, #0]
	*DMA2_SCR |= (0b100 << 25);
 8000f62:	687b      	ldr	r3, [r7, #4]
 8000f64:	681b      	ldr	r3, [r3, #0]
 8000f66:	f043 6200 	orr.w	r2, r3, #134217728	@ 0x8000000
 8000f6a:	687b      	ldr	r3, [r7, #4]
 8000f6c:	601a      	str	r2, [r3, #0]
	*DMA2_SCR |= (0b01 << 0) | (0b01 << 10) | (0b01 << 8) | (0b01 << 4);
 8000f6e:	687b      	ldr	r3, [r7, #4]
 8000f70:	681b      	ldr	r3, [r3, #0]
 8000f72:	f443 63a2 	orr.w	r3, r3, #1296	@ 0x510
 8000f76:	f043 0301 	orr.w	r3, r3, #1
 8000f7a:	687a      	ldr	r2, [r7, #4]
 8000f7c:	6013      	str	r3, [r2, #0]
}
 8000f7e:	bf00      	nop
 8000f80:	371c      	adds	r7, #28
 8000f82:	46bd      	mov	sp, r7
 8000f84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f88:	4770      	bx	lr
 8000f8a:	bf00      	nop
 8000f8c:	40023830 	.word	0x40023830
 8000f90:	4002644c 	.word	0x4002644c
 8000f94:	2000034c 	.word	0x2000034c
 8000f98:	40026448 	.word	0x40026448
 8000f9c:	40011004 	.word	0x40011004
 8000fa0:	40026444 	.word	0x40026444
 8000fa4:	40026440 	.word	0x40026440

08000fa8 <DMA2_Stream2_IRQHandler>:

void DMA2_Stream2_IRQHandler() {
 8000fa8:	b480      	push	{r7}
 8000faa:	b083      	sub	sp, #12
 8000fac:	af00      	add	r7, sp, #0
	uint32_t* DMA2_LIFCR = (uint32_t*)(DMA2_BASE + DMA_LIFCR);
 8000fae:	4b08      	ldr	r3, [pc, #32]	@ (8000fd0 <DMA2_Stream2_IRQHandler+0x28>)
 8000fb0:	607b      	str	r3, [r7, #4]
	*DMA2_LIFCR |= (0b01 << 21);
 8000fb2:	687b      	ldr	r3, [r7, #4]
 8000fb4:	681b      	ldr	r3, [r3, #0]
 8000fb6:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8000fba:	687b      	ldr	r3, [r7, #4]
 8000fbc:	601a      	str	r2, [r3, #0]
	firmware_updated = 1;
 8000fbe:	4b05      	ldr	r3, [pc, #20]	@ (8000fd4 <DMA2_Stream2_IRQHandler+0x2c>)
 8000fc0:	2201      	movs	r2, #1
 8000fc2:	601a      	str	r2, [r3, #0]
}
 8000fc4:	bf00      	nop
 8000fc6:	370c      	adds	r7, #12
 8000fc8:	46bd      	mov	sp, r7
 8000fca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fce:	4770      	bx	lr
 8000fd0:	40026408 	.word	0x40026408
 8000fd4:	20000344 	.word	0x20000344

08000fd8 <UART1_Init>:

void UART1_Init() {
 8000fd8:	b480      	push	{r7}
 8000fda:	b089      	sub	sp, #36	@ 0x24
 8000fdc:	af00      	add	r7, sp, #0
	uint32_t* GPIOB_EN = (uint32_t*)(RCC_BASE + RCC_AHB1ENR);
 8000fde:	4b29      	ldr	r3, [pc, #164]	@ (8001084 <UART1_Init+0xac>)
 8000fe0:	61fb      	str	r3, [r7, #28]
	*GPIOB_EN |= (0b01 << 1);
 8000fe2:	69fb      	ldr	r3, [r7, #28]
 8000fe4:	681b      	ldr	r3, [r3, #0]
 8000fe6:	f043 0202 	orr.w	r2, r3, #2
 8000fea:	69fb      	ldr	r3, [r7, #28]
 8000fec:	601a      	str	r2, [r3, #0]
	uint32_t* UART1_EN = (uint32_t*)(RCC_BASE + RCC_APB2ENR);
 8000fee:	4b26      	ldr	r3, [pc, #152]	@ (8001088 <UART1_Init+0xb0>)
 8000ff0:	61bb      	str	r3, [r7, #24]
	*UART1_EN |= (0b01 << 4);
 8000ff2:	69bb      	ldr	r3, [r7, #24]
 8000ff4:	681b      	ldr	r3, [r3, #0]
 8000ff6:	f043 0210 	orr.w	r2, r3, #16
 8000ffa:	69bb      	ldr	r3, [r7, #24]
 8000ffc:	601a      	str	r2, [r3, #0]

	uint32_t* GPIOB_MODER = (uint32_t*)(GPIOB_BASE + GPIO_MODER);
 8000ffe:	4b23      	ldr	r3, [pc, #140]	@ (800108c <UART1_Init+0xb4>)
 8001000:	617b      	str	r3, [r7, #20]
	*GPIOB_MODER &= ~(0x0F << 12);
 8001002:	697b      	ldr	r3, [r7, #20]
 8001004:	681b      	ldr	r3, [r3, #0]
 8001006:	f423 4270 	bic.w	r2, r3, #61440	@ 0xf000
 800100a:	697b      	ldr	r3, [r7, #20]
 800100c:	601a      	str	r2, [r3, #0]
	*GPIOB_MODER |= (0x0A << 12);
 800100e:	697b      	ldr	r3, [r7, #20]
 8001010:	681b      	ldr	r3, [r3, #0]
 8001012:	f443 4220 	orr.w	r2, r3, #40960	@ 0xa000
 8001016:	697b      	ldr	r3, [r7, #20]
 8001018:	601a      	str	r2, [r3, #0]
	uint32_t* GPIOB_AFRL = (uint32_t*)(GPIOB_BASE + GPIO_AFRL);
 800101a:	4b1d      	ldr	r3, [pc, #116]	@ (8001090 <UART1_Init+0xb8>)
 800101c:	613b      	str	r3, [r7, #16]
	*GPIOB_AFRL &= ~(0xFF << 24);
 800101e:	693b      	ldr	r3, [r7, #16]
 8001020:	681b      	ldr	r3, [r3, #0]
 8001022:	f023 427f 	bic.w	r2, r3, #4278190080	@ 0xff000000
 8001026:	693b      	ldr	r3, [r7, #16]
 8001028:	601a      	str	r2, [r3, #0]
	*GPIOB_AFRL |= (0x77 << 24);
 800102a:	693b      	ldr	r3, [r7, #16]
 800102c:	681b      	ldr	r3, [r3, #0]
 800102e:	f043 42ee 	orr.w	r2, r3, #1996488704	@ 0x77000000
 8001032:	693b      	ldr	r3, [r7, #16]
 8001034:	601a      	str	r2, [r3, #0]

	uint32_t* UART1_BRR = (uint32_t*)(UART1_BASE + UART_BRR);
 8001036:	4b17      	ldr	r3, [pc, #92]	@ (8001094 <UART1_Init+0xbc>)
 8001038:	60fb      	str	r3, [r7, #12]
	*UART1_BRR = (104 << 4) | (3 << 0);
 800103a:	68fb      	ldr	r3, [r7, #12]
 800103c:	f240 6283 	movw	r2, #1667	@ 0x683
 8001040:	601a      	str	r2, [r3, #0]
	uint32_t* UART1_CR1 = (uint32_t*)(UART1_BASE + UART_CR1);
 8001042:	4b15      	ldr	r3, [pc, #84]	@ (8001098 <UART1_Init+0xc0>)
 8001044:	60bb      	str	r3, [r7, #8]
	*UART1_CR1 |= (0b01 << 13) | (0b01 << 12) | (0b01 << 10) | (0b01 << 3) | (0b01 << 2);
 8001046:	68bb      	ldr	r3, [r7, #8]
 8001048:	681b      	ldr	r3, [r3, #0]
 800104a:	f443 5350 	orr.w	r3, r3, #13312	@ 0x3400
 800104e:	f043 030c 	orr.w	r3, r3, #12
 8001052:	68ba      	ldr	r2, [r7, #8]
 8001054:	6013      	str	r3, [r2, #0]
#if 0
	*UART1_CR1 |= (0b01 << 5);
	uint32_t* NVIC_ISER1 = (uint32_t*)0xE000E104;
	*NVIC_ISER1 |= (0b01 << 5);
#else
	uint32_t* UART1_CR3 = (uint32_t*)(UART1_BASE + UART_CR3);
 8001056:	4b11      	ldr	r3, [pc, #68]	@ (800109c <UART1_Init+0xc4>)
 8001058:	607b      	str	r3, [r7, #4]
	*UART1_CR3 |= (0b01 << 6);
 800105a:	687b      	ldr	r3, [r7, #4]
 800105c:	681b      	ldr	r3, [r3, #0]
 800105e:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8001062:	687b      	ldr	r3, [r7, #4]
 8001064:	601a      	str	r2, [r3, #0]
	uint32_t* NVIC_ISER1 = (uint32_t*)0xE000E104;
 8001066:	4b0e      	ldr	r3, [pc, #56]	@ (80010a0 <UART1_Init+0xc8>)
 8001068:	603b      	str	r3, [r7, #0]
	*NVIC_ISER1 |= (0b01 << 26);
 800106a:	683b      	ldr	r3, [r7, #0]
 800106c:	681b      	ldr	r3, [r3, #0]
 800106e:	f043 6280 	orr.w	r2, r3, #67108864	@ 0x4000000
 8001072:	683b      	ldr	r3, [r7, #0]
 8001074:	601a      	str	r2, [r3, #0]
#endif
}
 8001076:	bf00      	nop
 8001078:	3724      	adds	r7, #36	@ 0x24
 800107a:	46bd      	mov	sp, r7
 800107c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001080:	4770      	bx	lr
 8001082:	bf00      	nop
 8001084:	40023830 	.word	0x40023830
 8001088:	40023844 	.word	0x40023844
 800108c:	40020400 	.word	0x40020400
 8001090:	40020420 	.word	0x40020420
 8001094:	40011008 	.word	0x40011008
 8001098:	4001100c 	.word	0x4001100c
 800109c:	40011014 	.word	0x40011014
 80010a0:	e000e104 	.word	0xe000e104

080010a4 <UART_Write>:

void UART_Write(uint8_t data) {
 80010a4:	b480      	push	{r7}
 80010a6:	b085      	sub	sp, #20
 80010a8:	af00      	add	r7, sp, #0
 80010aa:	4603      	mov	r3, r0
 80010ac:	71fb      	strb	r3, [r7, #7]
	uint32_t* UART1_DR = (uint32_t*)(UART1_BASE + UART_DR);
 80010ae:	4b0f      	ldr	r3, [pc, #60]	@ (80010ec <UART_Write+0x48>)
 80010b0:	60fb      	str	r3, [r7, #12]
	uint32_t* UART1_SR = (uint32_t*)(UART1_BASE + UART_SR);
 80010b2:	4b0f      	ldr	r3, [pc, #60]	@ (80010f0 <UART_Write+0x4c>)
 80010b4:	60bb      	str	r3, [r7, #8]
	while (((*UART1_SR >> 6) & 1) == 0);
 80010b6:	bf00      	nop
 80010b8:	68bb      	ldr	r3, [r7, #8]
 80010ba:	681b      	ldr	r3, [r3, #0]
 80010bc:	099b      	lsrs	r3, r3, #6
 80010be:	f003 0301 	and.w	r3, r3, #1
 80010c2:	2b00      	cmp	r3, #0
 80010c4:	d0f8      	beq.n	80010b8 <UART_Write+0x14>
	*UART1_DR = data;
 80010c6:	79fa      	ldrb	r2, [r7, #7]
 80010c8:	68fb      	ldr	r3, [r7, #12]
 80010ca:	601a      	str	r2, [r3, #0]
	while (((*UART1_SR >> 7) & 1) == 0);
 80010cc:	bf00      	nop
 80010ce:	68bb      	ldr	r3, [r7, #8]
 80010d0:	681b      	ldr	r3, [r3, #0]
 80010d2:	09db      	lsrs	r3, r3, #7
 80010d4:	f003 0301 	and.w	r3, r3, #1
 80010d8:	2b00      	cmp	r3, #0
 80010da:	d0f8      	beq.n	80010ce <UART_Write+0x2a>
}
 80010dc:	bf00      	nop
 80010de:	bf00      	nop
 80010e0:	3714      	adds	r7, #20
 80010e2:	46bd      	mov	sp, r7
 80010e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e8:	4770      	bx	lr
 80010ea:	bf00      	nop
 80010ec:	40011004 	.word	0x40011004
 80010f0:	40011000 	.word	0x40011000

080010f4 <UART_Write_String>:

void UART_Write_String(char* s, ...) {
 80010f4:	b40f      	push	{r0, r1, r2, r3}
 80010f6:	b580      	push	{r7, lr}
 80010f8:	b0a4      	sub	sp, #144	@ 0x90
 80010fa:	af00      	add	r7, sp, #0
	va_list arg;
	va_start(arg, s);
 80010fc:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 8001100:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
	char rxbuff[128] = {0};
 8001104:	1d3b      	adds	r3, r7, #4
 8001106:	2280      	movs	r2, #128	@ 0x80
 8001108:	2100      	movs	r1, #0
 800110a:	4618      	mov	r0, r3
 800110c:	f000 feee 	bl	8001eec <memset>
	vsprintf(rxbuff, s, arg);
 8001110:	1d3b      	adds	r3, r7, #4
 8001112:	f8d7 2084 	ldr.w	r2, [r7, #132]	@ 0x84
 8001116:	f8d7 1098 	ldr.w	r1, [r7, #152]	@ 0x98
 800111a:	4618      	mov	r0, r3
 800111c:	f000 fedc 	bl	8001ed8 <vsiprintf>
	va_end(arg);
	unsigned int l = strlen(rxbuff);
 8001120:	1d3b      	adds	r3, r7, #4
 8001122:	4618      	mov	r0, r3
 8001124:	f7ff f8ac 	bl	8000280 <strlen>
 8001128:	f8c7 0088 	str.w	r0, [r7, #136]	@ 0x88
	for (int i = 0; i < l; i++) {
 800112c:	2300      	movs	r3, #0
 800112e:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8001132:	e00c      	b.n	800114e <UART_Write_String+0x5a>
		UART_Write(rxbuff[i]);
 8001134:	1d3a      	adds	r2, r7, #4
 8001136:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800113a:	4413      	add	r3, r2
 800113c:	781b      	ldrb	r3, [r3, #0]
 800113e:	4618      	mov	r0, r3
 8001140:	f7ff ffb0 	bl	80010a4 <UART_Write>
	for (int i = 0; i < l; i++) {
 8001144:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8001148:	3301      	adds	r3, #1
 800114a:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800114e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8001152:	f8d7 2088 	ldr.w	r2, [r7, #136]	@ 0x88
 8001156:	429a      	cmp	r2, r3
 8001158:	d8ec      	bhi.n	8001134 <UART_Write_String+0x40>
	}
}
 800115a:	bf00      	nop
 800115c:	bf00      	nop
 800115e:	3790      	adds	r7, #144	@ 0x90
 8001160:	46bd      	mov	sp, r7
 8001162:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8001166:	b004      	add	sp, #16
 8001168:	4770      	bx	lr

0800116a <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800116a:	b480      	push	{r7}
 800116c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800116e:	bf00      	nop
 8001170:	e7fd      	b.n	800116e <NMI_Handler+0x4>

08001172 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001172:	b480      	push	{r7}
 8001174:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001176:	bf00      	nop
 8001178:	e7fd      	b.n	8001176 <HardFault_Handler+0x4>

0800117a <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800117a:	b480      	push	{r7}
 800117c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800117e:	bf00      	nop
 8001180:	e7fd      	b.n	800117e <MemManage_Handler+0x4>

08001182 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001182:	b480      	push	{r7}
 8001184:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001186:	bf00      	nop
 8001188:	e7fd      	b.n	8001186 <BusFault_Handler+0x4>

0800118a <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800118a:	b480      	push	{r7}
 800118c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800118e:	bf00      	nop
 8001190:	e7fd      	b.n	800118e <UsageFault_Handler+0x4>

08001192 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001192:	b480      	push	{r7}
 8001194:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001196:	bf00      	nop
 8001198:	46bd      	mov	sp, r7
 800119a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800119e:	4770      	bx	lr

080011a0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80011a0:	b480      	push	{r7}
 80011a2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80011a4:	bf00      	nop
 80011a6:	46bd      	mov	sp, r7
 80011a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011ac:	4770      	bx	lr

080011ae <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80011ae:	b480      	push	{r7}
 80011b0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80011b2:	bf00      	nop
 80011b4:	46bd      	mov	sp, r7
 80011b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011ba:	4770      	bx	lr

080011bc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80011bc:	b580      	push	{r7, lr}
 80011be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80011c0:	f000 f904 	bl	80013cc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80011c4:	bf00      	nop
 80011c6:	bd80      	pop	{r7, pc}

080011c8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80011c8:	b480      	push	{r7}
 80011ca:	af00      	add	r7, sp, #0
  return 1;
 80011cc:	2301      	movs	r3, #1
}
 80011ce:	4618      	mov	r0, r3
 80011d0:	46bd      	mov	sp, r7
 80011d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011d6:	4770      	bx	lr

080011d8 <_kill>:

int _kill(int pid, int sig)
{
 80011d8:	b580      	push	{r7, lr}
 80011da:	b082      	sub	sp, #8
 80011dc:	af00      	add	r7, sp, #0
 80011de:	6078      	str	r0, [r7, #4]
 80011e0:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80011e2:	f000 fed5 	bl	8001f90 <__errno>
 80011e6:	4603      	mov	r3, r0
 80011e8:	2216      	movs	r2, #22
 80011ea:	601a      	str	r2, [r3, #0]
  return -1;
 80011ec:	f04f 33ff 	mov.w	r3, #4294967295
}
 80011f0:	4618      	mov	r0, r3
 80011f2:	3708      	adds	r7, #8
 80011f4:	46bd      	mov	sp, r7
 80011f6:	bd80      	pop	{r7, pc}

080011f8 <_exit>:

void _exit (int status)
{
 80011f8:	b580      	push	{r7, lr}
 80011fa:	b082      	sub	sp, #8
 80011fc:	af00      	add	r7, sp, #0
 80011fe:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001200:	f04f 31ff 	mov.w	r1, #4294967295
 8001204:	6878      	ldr	r0, [r7, #4]
 8001206:	f7ff ffe7 	bl	80011d8 <_kill>
  while (1) {}    /* Make sure we hang here */
 800120a:	bf00      	nop
 800120c:	e7fd      	b.n	800120a <_exit+0x12>

0800120e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800120e:	b580      	push	{r7, lr}
 8001210:	b086      	sub	sp, #24
 8001212:	af00      	add	r7, sp, #0
 8001214:	60f8      	str	r0, [r7, #12]
 8001216:	60b9      	str	r1, [r7, #8]
 8001218:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800121a:	2300      	movs	r3, #0
 800121c:	617b      	str	r3, [r7, #20]
 800121e:	e00a      	b.n	8001236 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001220:	f3af 8000 	nop.w
 8001224:	4601      	mov	r1, r0
 8001226:	68bb      	ldr	r3, [r7, #8]
 8001228:	1c5a      	adds	r2, r3, #1
 800122a:	60ba      	str	r2, [r7, #8]
 800122c:	b2ca      	uxtb	r2, r1
 800122e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001230:	697b      	ldr	r3, [r7, #20]
 8001232:	3301      	adds	r3, #1
 8001234:	617b      	str	r3, [r7, #20]
 8001236:	697a      	ldr	r2, [r7, #20]
 8001238:	687b      	ldr	r3, [r7, #4]
 800123a:	429a      	cmp	r2, r3
 800123c:	dbf0      	blt.n	8001220 <_read+0x12>
  }

  return len;
 800123e:	687b      	ldr	r3, [r7, #4]
}
 8001240:	4618      	mov	r0, r3
 8001242:	3718      	adds	r7, #24
 8001244:	46bd      	mov	sp, r7
 8001246:	bd80      	pop	{r7, pc}

08001248 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001248:	b580      	push	{r7, lr}
 800124a:	b086      	sub	sp, #24
 800124c:	af00      	add	r7, sp, #0
 800124e:	60f8      	str	r0, [r7, #12]
 8001250:	60b9      	str	r1, [r7, #8]
 8001252:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001254:	2300      	movs	r3, #0
 8001256:	617b      	str	r3, [r7, #20]
 8001258:	e009      	b.n	800126e <_write+0x26>
  {
    __io_putchar(*ptr++);
 800125a:	68bb      	ldr	r3, [r7, #8]
 800125c:	1c5a      	adds	r2, r3, #1
 800125e:	60ba      	str	r2, [r7, #8]
 8001260:	781b      	ldrb	r3, [r3, #0]
 8001262:	4618      	mov	r0, r3
 8001264:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001268:	697b      	ldr	r3, [r7, #20]
 800126a:	3301      	adds	r3, #1
 800126c:	617b      	str	r3, [r7, #20]
 800126e:	697a      	ldr	r2, [r7, #20]
 8001270:	687b      	ldr	r3, [r7, #4]
 8001272:	429a      	cmp	r2, r3
 8001274:	dbf1      	blt.n	800125a <_write+0x12>
  }
  return len;
 8001276:	687b      	ldr	r3, [r7, #4]
}
 8001278:	4618      	mov	r0, r3
 800127a:	3718      	adds	r7, #24
 800127c:	46bd      	mov	sp, r7
 800127e:	bd80      	pop	{r7, pc}

08001280 <_close>:

int _close(int file)
{
 8001280:	b480      	push	{r7}
 8001282:	b083      	sub	sp, #12
 8001284:	af00      	add	r7, sp, #0
 8001286:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001288:	f04f 33ff 	mov.w	r3, #4294967295
}
 800128c:	4618      	mov	r0, r3
 800128e:	370c      	adds	r7, #12
 8001290:	46bd      	mov	sp, r7
 8001292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001296:	4770      	bx	lr

08001298 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001298:	b480      	push	{r7}
 800129a:	b083      	sub	sp, #12
 800129c:	af00      	add	r7, sp, #0
 800129e:	6078      	str	r0, [r7, #4]
 80012a0:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80012a2:	683b      	ldr	r3, [r7, #0]
 80012a4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80012a8:	605a      	str	r2, [r3, #4]
  return 0;
 80012aa:	2300      	movs	r3, #0
}
 80012ac:	4618      	mov	r0, r3
 80012ae:	370c      	adds	r7, #12
 80012b0:	46bd      	mov	sp, r7
 80012b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012b6:	4770      	bx	lr

080012b8 <_isatty>:

int _isatty(int file)
{
 80012b8:	b480      	push	{r7}
 80012ba:	b083      	sub	sp, #12
 80012bc:	af00      	add	r7, sp, #0
 80012be:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80012c0:	2301      	movs	r3, #1
}
 80012c2:	4618      	mov	r0, r3
 80012c4:	370c      	adds	r7, #12
 80012c6:	46bd      	mov	sp, r7
 80012c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012cc:	4770      	bx	lr

080012ce <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80012ce:	b480      	push	{r7}
 80012d0:	b085      	sub	sp, #20
 80012d2:	af00      	add	r7, sp, #0
 80012d4:	60f8      	str	r0, [r7, #12]
 80012d6:	60b9      	str	r1, [r7, #8]
 80012d8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80012da:	2300      	movs	r3, #0
}
 80012dc:	4618      	mov	r0, r3
 80012de:	3714      	adds	r7, #20
 80012e0:	46bd      	mov	sp, r7
 80012e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012e6:	4770      	bx	lr

080012e8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80012e8:	b580      	push	{r7, lr}
 80012ea:	b086      	sub	sp, #24
 80012ec:	af00      	add	r7, sp, #0
 80012ee:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80012f0:	4a14      	ldr	r2, [pc, #80]	@ (8001344 <_sbrk+0x5c>)
 80012f2:	4b15      	ldr	r3, [pc, #84]	@ (8001348 <_sbrk+0x60>)
 80012f4:	1ad3      	subs	r3, r2, r3
 80012f6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80012f8:	697b      	ldr	r3, [r7, #20]
 80012fa:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80012fc:	4b13      	ldr	r3, [pc, #76]	@ (800134c <_sbrk+0x64>)
 80012fe:	681b      	ldr	r3, [r3, #0]
 8001300:	2b00      	cmp	r3, #0
 8001302:	d102      	bne.n	800130a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001304:	4b11      	ldr	r3, [pc, #68]	@ (800134c <_sbrk+0x64>)
 8001306:	4a12      	ldr	r2, [pc, #72]	@ (8001350 <_sbrk+0x68>)
 8001308:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800130a:	4b10      	ldr	r3, [pc, #64]	@ (800134c <_sbrk+0x64>)
 800130c:	681a      	ldr	r2, [r3, #0]
 800130e:	687b      	ldr	r3, [r7, #4]
 8001310:	4413      	add	r3, r2
 8001312:	693a      	ldr	r2, [r7, #16]
 8001314:	429a      	cmp	r2, r3
 8001316:	d207      	bcs.n	8001328 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001318:	f000 fe3a 	bl	8001f90 <__errno>
 800131c:	4603      	mov	r3, r0
 800131e:	220c      	movs	r2, #12
 8001320:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001322:	f04f 33ff 	mov.w	r3, #4294967295
 8001326:	e009      	b.n	800133c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001328:	4b08      	ldr	r3, [pc, #32]	@ (800134c <_sbrk+0x64>)
 800132a:	681b      	ldr	r3, [r3, #0]
 800132c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800132e:	4b07      	ldr	r3, [pc, #28]	@ (800134c <_sbrk+0x64>)
 8001330:	681a      	ldr	r2, [r3, #0]
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	4413      	add	r3, r2
 8001336:	4a05      	ldr	r2, [pc, #20]	@ (800134c <_sbrk+0x64>)
 8001338:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800133a:	68fb      	ldr	r3, [r7, #12]
}
 800133c:	4618      	mov	r0, r3
 800133e:	3718      	adds	r7, #24
 8001340:	46bd      	mov	sp, r7
 8001342:	bd80      	pop	{r7, pc}
 8001344:	20020000 	.word	0x20020000
 8001348:	00000400 	.word	0x00000400
 800134c:	20000734 	.word	0x20000734
 8001350:	20000888 	.word	0x20000888

08001354 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001354:	b480      	push	{r7}
 8001356:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001358:	4b06      	ldr	r3, [pc, #24]	@ (8001374 <SystemInit+0x20>)
 800135a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800135e:	4a05      	ldr	r2, [pc, #20]	@ (8001374 <SystemInit+0x20>)
 8001360:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001364:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001368:	bf00      	nop
 800136a:	46bd      	mov	sp, r7
 800136c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001370:	4770      	bx	lr
 8001372:	bf00      	nop
 8001374:	e000ed00 	.word	0xe000ed00

08001378 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8001378:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80013b0 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 800137c:	f7ff ffea 	bl	8001354 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001380:	480c      	ldr	r0, [pc, #48]	@ (80013b4 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001382:	490d      	ldr	r1, [pc, #52]	@ (80013b8 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001384:	4a0d      	ldr	r2, [pc, #52]	@ (80013bc <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001386:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001388:	e002      	b.n	8001390 <LoopCopyDataInit>

0800138a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800138a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800138c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800138e:	3304      	adds	r3, #4

08001390 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001390:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001392:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001394:	d3f9      	bcc.n	800138a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001396:	4a0a      	ldr	r2, [pc, #40]	@ (80013c0 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001398:	4c0a      	ldr	r4, [pc, #40]	@ (80013c4 <LoopFillZerobss+0x22>)
  movs r3, #0
 800139a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800139c:	e001      	b.n	80013a2 <LoopFillZerobss>

0800139e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800139e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80013a0:	3204      	adds	r2, #4

080013a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80013a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80013a4:	d3fb      	bcc.n	800139e <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 80013a6:	f000 fdf9 	bl	8001f9c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80013aa:	f7ff fc55 	bl	8000c58 <main>
  bx  lr    
 80013ae:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 80013b0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80013b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80013b8:	20000328 	.word	0x20000328
  ldr r2, =_sidata
 80013bc:	08004444 	.word	0x08004444
  ldr r2, =_sbss
 80013c0:	20000328 	.word	0x20000328
  ldr r4, =_ebss
 80013c4:	20000888 	.word	0x20000888

080013c8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80013c8:	e7fe      	b.n	80013c8 <ADC_IRQHandler>
	...

080013cc <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80013cc:	b480      	push	{r7}
 80013ce:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80013d0:	4b06      	ldr	r3, [pc, #24]	@ (80013ec <HAL_IncTick+0x20>)
 80013d2:	781b      	ldrb	r3, [r3, #0]
 80013d4:	461a      	mov	r2, r3
 80013d6:	4b06      	ldr	r3, [pc, #24]	@ (80013f0 <HAL_IncTick+0x24>)
 80013d8:	681b      	ldr	r3, [r3, #0]
 80013da:	4413      	add	r3, r2
 80013dc:	4a04      	ldr	r2, [pc, #16]	@ (80013f0 <HAL_IncTick+0x24>)
 80013de:	6013      	str	r3, [r2, #0]
}
 80013e0:	bf00      	nop
 80013e2:	46bd      	mov	sp, r7
 80013e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013e8:	4770      	bx	lr
 80013ea:	bf00      	nop
 80013ec:	20000000 	.word	0x20000000
 80013f0:	20000738 	.word	0x20000738

080013f4 <__cvt>:
 80013f4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80013f8:	ec57 6b10 	vmov	r6, r7, d0
 80013fc:	2f00      	cmp	r7, #0
 80013fe:	460c      	mov	r4, r1
 8001400:	4619      	mov	r1, r3
 8001402:	463b      	mov	r3, r7
 8001404:	bfbb      	ittet	lt
 8001406:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 800140a:	461f      	movlt	r7, r3
 800140c:	2300      	movge	r3, #0
 800140e:	232d      	movlt	r3, #45	@ 0x2d
 8001410:	700b      	strb	r3, [r1, #0]
 8001412:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001414:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8001418:	4691      	mov	r9, r2
 800141a:	f023 0820 	bic.w	r8, r3, #32
 800141e:	bfbc      	itt	lt
 8001420:	4632      	movlt	r2, r6
 8001422:	4616      	movlt	r6, r2
 8001424:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001428:	d005      	beq.n	8001436 <__cvt+0x42>
 800142a:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 800142e:	d100      	bne.n	8001432 <__cvt+0x3e>
 8001430:	3401      	adds	r4, #1
 8001432:	2102      	movs	r1, #2
 8001434:	e000      	b.n	8001438 <__cvt+0x44>
 8001436:	2103      	movs	r1, #3
 8001438:	ab03      	add	r3, sp, #12
 800143a:	9301      	str	r3, [sp, #4]
 800143c:	ab02      	add	r3, sp, #8
 800143e:	9300      	str	r3, [sp, #0]
 8001440:	ec47 6b10 	vmov	d0, r6, r7
 8001444:	4653      	mov	r3, sl
 8001446:	4622      	mov	r2, r4
 8001448:	f000 fe5a 	bl	8002100 <_dtoa_r>
 800144c:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001450:	4605      	mov	r5, r0
 8001452:	d119      	bne.n	8001488 <__cvt+0x94>
 8001454:	f019 0f01 	tst.w	r9, #1
 8001458:	d00e      	beq.n	8001478 <__cvt+0x84>
 800145a:	eb00 0904 	add.w	r9, r0, r4
 800145e:	2200      	movs	r2, #0
 8001460:	2300      	movs	r3, #0
 8001462:	4630      	mov	r0, r6
 8001464:	4639      	mov	r1, r7
 8001466:	f7ff fb37 	bl	8000ad8 <__aeabi_dcmpeq>
 800146a:	b108      	cbz	r0, 8001470 <__cvt+0x7c>
 800146c:	f8cd 900c 	str.w	r9, [sp, #12]
 8001470:	2230      	movs	r2, #48	@ 0x30
 8001472:	9b03      	ldr	r3, [sp, #12]
 8001474:	454b      	cmp	r3, r9
 8001476:	d31e      	bcc.n	80014b6 <__cvt+0xc2>
 8001478:	9b03      	ldr	r3, [sp, #12]
 800147a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800147c:	1b5b      	subs	r3, r3, r5
 800147e:	4628      	mov	r0, r5
 8001480:	6013      	str	r3, [r2, #0]
 8001482:	b004      	add	sp, #16
 8001484:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001488:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800148c:	eb00 0904 	add.w	r9, r0, r4
 8001490:	d1e5      	bne.n	800145e <__cvt+0x6a>
 8001492:	7803      	ldrb	r3, [r0, #0]
 8001494:	2b30      	cmp	r3, #48	@ 0x30
 8001496:	d10a      	bne.n	80014ae <__cvt+0xba>
 8001498:	2200      	movs	r2, #0
 800149a:	2300      	movs	r3, #0
 800149c:	4630      	mov	r0, r6
 800149e:	4639      	mov	r1, r7
 80014a0:	f7ff fb1a 	bl	8000ad8 <__aeabi_dcmpeq>
 80014a4:	b918      	cbnz	r0, 80014ae <__cvt+0xba>
 80014a6:	f1c4 0401 	rsb	r4, r4, #1
 80014aa:	f8ca 4000 	str.w	r4, [sl]
 80014ae:	f8da 3000 	ldr.w	r3, [sl]
 80014b2:	4499      	add	r9, r3
 80014b4:	e7d3      	b.n	800145e <__cvt+0x6a>
 80014b6:	1c59      	adds	r1, r3, #1
 80014b8:	9103      	str	r1, [sp, #12]
 80014ba:	701a      	strb	r2, [r3, #0]
 80014bc:	e7d9      	b.n	8001472 <__cvt+0x7e>

080014be <__exponent>:
 80014be:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80014c0:	2900      	cmp	r1, #0
 80014c2:	bfba      	itte	lt
 80014c4:	4249      	neglt	r1, r1
 80014c6:	232d      	movlt	r3, #45	@ 0x2d
 80014c8:	232b      	movge	r3, #43	@ 0x2b
 80014ca:	2909      	cmp	r1, #9
 80014cc:	7002      	strb	r2, [r0, #0]
 80014ce:	7043      	strb	r3, [r0, #1]
 80014d0:	dd29      	ble.n	8001526 <__exponent+0x68>
 80014d2:	f10d 0307 	add.w	r3, sp, #7
 80014d6:	461d      	mov	r5, r3
 80014d8:	270a      	movs	r7, #10
 80014da:	461a      	mov	r2, r3
 80014dc:	fbb1 f6f7 	udiv	r6, r1, r7
 80014e0:	fb07 1416 	mls	r4, r7, r6, r1
 80014e4:	3430      	adds	r4, #48	@ 0x30
 80014e6:	f802 4c01 	strb.w	r4, [r2, #-1]
 80014ea:	460c      	mov	r4, r1
 80014ec:	2c63      	cmp	r4, #99	@ 0x63
 80014ee:	f103 33ff 	add.w	r3, r3, #4294967295
 80014f2:	4631      	mov	r1, r6
 80014f4:	dcf1      	bgt.n	80014da <__exponent+0x1c>
 80014f6:	3130      	adds	r1, #48	@ 0x30
 80014f8:	1e94      	subs	r4, r2, #2
 80014fa:	f803 1c01 	strb.w	r1, [r3, #-1]
 80014fe:	1c41      	adds	r1, r0, #1
 8001500:	4623      	mov	r3, r4
 8001502:	42ab      	cmp	r3, r5
 8001504:	d30a      	bcc.n	800151c <__exponent+0x5e>
 8001506:	f10d 0309 	add.w	r3, sp, #9
 800150a:	1a9b      	subs	r3, r3, r2
 800150c:	42ac      	cmp	r4, r5
 800150e:	bf88      	it	hi
 8001510:	2300      	movhi	r3, #0
 8001512:	3302      	adds	r3, #2
 8001514:	4403      	add	r3, r0
 8001516:	1a18      	subs	r0, r3, r0
 8001518:	b003      	add	sp, #12
 800151a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800151c:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001520:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001524:	e7ed      	b.n	8001502 <__exponent+0x44>
 8001526:	2330      	movs	r3, #48	@ 0x30
 8001528:	3130      	adds	r1, #48	@ 0x30
 800152a:	7083      	strb	r3, [r0, #2]
 800152c:	70c1      	strb	r1, [r0, #3]
 800152e:	1d03      	adds	r3, r0, #4
 8001530:	e7f1      	b.n	8001516 <__exponent+0x58>
	...

08001534 <_printf_float>:
 8001534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001538:	b08d      	sub	sp, #52	@ 0x34
 800153a:	460c      	mov	r4, r1
 800153c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001540:	4616      	mov	r6, r2
 8001542:	461f      	mov	r7, r3
 8001544:	4605      	mov	r5, r0
 8001546:	f000 fcd9 	bl	8001efc <_localeconv_r>
 800154a:	6803      	ldr	r3, [r0, #0]
 800154c:	9304      	str	r3, [sp, #16]
 800154e:	4618      	mov	r0, r3
 8001550:	f7fe fe96 	bl	8000280 <strlen>
 8001554:	2300      	movs	r3, #0
 8001556:	930a      	str	r3, [sp, #40]	@ 0x28
 8001558:	f8d8 3000 	ldr.w	r3, [r8]
 800155c:	9005      	str	r0, [sp, #20]
 800155e:	3307      	adds	r3, #7
 8001560:	f023 0307 	bic.w	r3, r3, #7
 8001564:	f103 0208 	add.w	r2, r3, #8
 8001568:	f894 a018 	ldrb.w	sl, [r4, #24]
 800156c:	f8d4 b000 	ldr.w	fp, [r4]
 8001570:	f8c8 2000 	str.w	r2, [r8]
 8001574:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001578:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 800157c:	9307      	str	r3, [sp, #28]
 800157e:	f8cd 8018 	str.w	r8, [sp, #24]
 8001582:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001586:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800158a:	4b9c      	ldr	r3, [pc, #624]	@ (80017fc <_printf_float+0x2c8>)
 800158c:	f04f 32ff 	mov.w	r2, #4294967295
 8001590:	f7ff fad4 	bl	8000b3c <__aeabi_dcmpun>
 8001594:	bb70      	cbnz	r0, 80015f4 <_printf_float+0xc0>
 8001596:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800159a:	4b98      	ldr	r3, [pc, #608]	@ (80017fc <_printf_float+0x2c8>)
 800159c:	f04f 32ff 	mov.w	r2, #4294967295
 80015a0:	f7ff faae 	bl	8000b00 <__aeabi_dcmple>
 80015a4:	bb30      	cbnz	r0, 80015f4 <_printf_float+0xc0>
 80015a6:	2200      	movs	r2, #0
 80015a8:	2300      	movs	r3, #0
 80015aa:	4640      	mov	r0, r8
 80015ac:	4649      	mov	r1, r9
 80015ae:	f7ff fa9d 	bl	8000aec <__aeabi_dcmplt>
 80015b2:	b110      	cbz	r0, 80015ba <_printf_float+0x86>
 80015b4:	232d      	movs	r3, #45	@ 0x2d
 80015b6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80015ba:	4a91      	ldr	r2, [pc, #580]	@ (8001800 <_printf_float+0x2cc>)
 80015bc:	4b91      	ldr	r3, [pc, #580]	@ (8001804 <_printf_float+0x2d0>)
 80015be:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 80015c2:	bf8c      	ite	hi
 80015c4:	4690      	movhi	r8, r2
 80015c6:	4698      	movls	r8, r3
 80015c8:	2303      	movs	r3, #3
 80015ca:	6123      	str	r3, [r4, #16]
 80015cc:	f02b 0304 	bic.w	r3, fp, #4
 80015d0:	6023      	str	r3, [r4, #0]
 80015d2:	f04f 0900 	mov.w	r9, #0
 80015d6:	9700      	str	r7, [sp, #0]
 80015d8:	4633      	mov	r3, r6
 80015da:	aa0b      	add	r2, sp, #44	@ 0x2c
 80015dc:	4621      	mov	r1, r4
 80015de:	4628      	mov	r0, r5
 80015e0:	f000 f9d2 	bl	8001988 <_printf_common>
 80015e4:	3001      	adds	r0, #1
 80015e6:	f040 808d 	bne.w	8001704 <_printf_float+0x1d0>
 80015ea:	f04f 30ff 	mov.w	r0, #4294967295
 80015ee:	b00d      	add	sp, #52	@ 0x34
 80015f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80015f4:	4642      	mov	r2, r8
 80015f6:	464b      	mov	r3, r9
 80015f8:	4640      	mov	r0, r8
 80015fa:	4649      	mov	r1, r9
 80015fc:	f7ff fa9e 	bl	8000b3c <__aeabi_dcmpun>
 8001600:	b140      	cbz	r0, 8001614 <_printf_float+0xe0>
 8001602:	464b      	mov	r3, r9
 8001604:	2b00      	cmp	r3, #0
 8001606:	bfbc      	itt	lt
 8001608:	232d      	movlt	r3, #45	@ 0x2d
 800160a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800160e:	4a7e      	ldr	r2, [pc, #504]	@ (8001808 <_printf_float+0x2d4>)
 8001610:	4b7e      	ldr	r3, [pc, #504]	@ (800180c <_printf_float+0x2d8>)
 8001612:	e7d4      	b.n	80015be <_printf_float+0x8a>
 8001614:	6863      	ldr	r3, [r4, #4]
 8001616:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 800161a:	9206      	str	r2, [sp, #24]
 800161c:	1c5a      	adds	r2, r3, #1
 800161e:	d13b      	bne.n	8001698 <_printf_float+0x164>
 8001620:	2306      	movs	r3, #6
 8001622:	6063      	str	r3, [r4, #4]
 8001624:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8001628:	2300      	movs	r3, #0
 800162a:	6022      	str	r2, [r4, #0]
 800162c:	9303      	str	r3, [sp, #12]
 800162e:	ab0a      	add	r3, sp, #40	@ 0x28
 8001630:	e9cd a301 	strd	sl, r3, [sp, #4]
 8001634:	ab09      	add	r3, sp, #36	@ 0x24
 8001636:	9300      	str	r3, [sp, #0]
 8001638:	6861      	ldr	r1, [r4, #4]
 800163a:	ec49 8b10 	vmov	d0, r8, r9
 800163e:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8001642:	4628      	mov	r0, r5
 8001644:	f7ff fed6 	bl	80013f4 <__cvt>
 8001648:	9b06      	ldr	r3, [sp, #24]
 800164a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800164c:	2b47      	cmp	r3, #71	@ 0x47
 800164e:	4680      	mov	r8, r0
 8001650:	d129      	bne.n	80016a6 <_printf_float+0x172>
 8001652:	1cc8      	adds	r0, r1, #3
 8001654:	db02      	blt.n	800165c <_printf_float+0x128>
 8001656:	6863      	ldr	r3, [r4, #4]
 8001658:	4299      	cmp	r1, r3
 800165a:	dd41      	ble.n	80016e0 <_printf_float+0x1ac>
 800165c:	f1aa 0a02 	sub.w	sl, sl, #2
 8001660:	fa5f fa8a 	uxtb.w	sl, sl
 8001664:	3901      	subs	r1, #1
 8001666:	4652      	mov	r2, sl
 8001668:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800166c:	9109      	str	r1, [sp, #36]	@ 0x24
 800166e:	f7ff ff26 	bl	80014be <__exponent>
 8001672:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001674:	1813      	adds	r3, r2, r0
 8001676:	2a01      	cmp	r2, #1
 8001678:	4681      	mov	r9, r0
 800167a:	6123      	str	r3, [r4, #16]
 800167c:	dc02      	bgt.n	8001684 <_printf_float+0x150>
 800167e:	6822      	ldr	r2, [r4, #0]
 8001680:	07d2      	lsls	r2, r2, #31
 8001682:	d501      	bpl.n	8001688 <_printf_float+0x154>
 8001684:	3301      	adds	r3, #1
 8001686:	6123      	str	r3, [r4, #16]
 8001688:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 800168c:	2b00      	cmp	r3, #0
 800168e:	d0a2      	beq.n	80015d6 <_printf_float+0xa2>
 8001690:	232d      	movs	r3, #45	@ 0x2d
 8001692:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001696:	e79e      	b.n	80015d6 <_printf_float+0xa2>
 8001698:	9a06      	ldr	r2, [sp, #24]
 800169a:	2a47      	cmp	r2, #71	@ 0x47
 800169c:	d1c2      	bne.n	8001624 <_printf_float+0xf0>
 800169e:	2b00      	cmp	r3, #0
 80016a0:	d1c0      	bne.n	8001624 <_printf_float+0xf0>
 80016a2:	2301      	movs	r3, #1
 80016a4:	e7bd      	b.n	8001622 <_printf_float+0xee>
 80016a6:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80016aa:	d9db      	bls.n	8001664 <_printf_float+0x130>
 80016ac:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 80016b0:	d118      	bne.n	80016e4 <_printf_float+0x1b0>
 80016b2:	2900      	cmp	r1, #0
 80016b4:	6863      	ldr	r3, [r4, #4]
 80016b6:	dd0b      	ble.n	80016d0 <_printf_float+0x19c>
 80016b8:	6121      	str	r1, [r4, #16]
 80016ba:	b913      	cbnz	r3, 80016c2 <_printf_float+0x18e>
 80016bc:	6822      	ldr	r2, [r4, #0]
 80016be:	07d0      	lsls	r0, r2, #31
 80016c0:	d502      	bpl.n	80016c8 <_printf_float+0x194>
 80016c2:	3301      	adds	r3, #1
 80016c4:	440b      	add	r3, r1
 80016c6:	6123      	str	r3, [r4, #16]
 80016c8:	65a1      	str	r1, [r4, #88]	@ 0x58
 80016ca:	f04f 0900 	mov.w	r9, #0
 80016ce:	e7db      	b.n	8001688 <_printf_float+0x154>
 80016d0:	b913      	cbnz	r3, 80016d8 <_printf_float+0x1a4>
 80016d2:	6822      	ldr	r2, [r4, #0]
 80016d4:	07d2      	lsls	r2, r2, #31
 80016d6:	d501      	bpl.n	80016dc <_printf_float+0x1a8>
 80016d8:	3302      	adds	r3, #2
 80016da:	e7f4      	b.n	80016c6 <_printf_float+0x192>
 80016dc:	2301      	movs	r3, #1
 80016de:	e7f2      	b.n	80016c6 <_printf_float+0x192>
 80016e0:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 80016e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80016e6:	4299      	cmp	r1, r3
 80016e8:	db05      	blt.n	80016f6 <_printf_float+0x1c2>
 80016ea:	6823      	ldr	r3, [r4, #0]
 80016ec:	6121      	str	r1, [r4, #16]
 80016ee:	07d8      	lsls	r0, r3, #31
 80016f0:	d5ea      	bpl.n	80016c8 <_printf_float+0x194>
 80016f2:	1c4b      	adds	r3, r1, #1
 80016f4:	e7e7      	b.n	80016c6 <_printf_float+0x192>
 80016f6:	2900      	cmp	r1, #0
 80016f8:	bfd4      	ite	le
 80016fa:	f1c1 0202 	rsble	r2, r1, #2
 80016fe:	2201      	movgt	r2, #1
 8001700:	4413      	add	r3, r2
 8001702:	e7e0      	b.n	80016c6 <_printf_float+0x192>
 8001704:	6823      	ldr	r3, [r4, #0]
 8001706:	055a      	lsls	r2, r3, #21
 8001708:	d407      	bmi.n	800171a <_printf_float+0x1e6>
 800170a:	6923      	ldr	r3, [r4, #16]
 800170c:	4642      	mov	r2, r8
 800170e:	4631      	mov	r1, r6
 8001710:	4628      	mov	r0, r5
 8001712:	47b8      	blx	r7
 8001714:	3001      	adds	r0, #1
 8001716:	d12b      	bne.n	8001770 <_printf_float+0x23c>
 8001718:	e767      	b.n	80015ea <_printf_float+0xb6>
 800171a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800171e:	f240 80dd 	bls.w	80018dc <_printf_float+0x3a8>
 8001722:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001726:	2200      	movs	r2, #0
 8001728:	2300      	movs	r3, #0
 800172a:	f7ff f9d5 	bl	8000ad8 <__aeabi_dcmpeq>
 800172e:	2800      	cmp	r0, #0
 8001730:	d033      	beq.n	800179a <_printf_float+0x266>
 8001732:	4a37      	ldr	r2, [pc, #220]	@ (8001810 <_printf_float+0x2dc>)
 8001734:	2301      	movs	r3, #1
 8001736:	4631      	mov	r1, r6
 8001738:	4628      	mov	r0, r5
 800173a:	47b8      	blx	r7
 800173c:	3001      	adds	r0, #1
 800173e:	f43f af54 	beq.w	80015ea <_printf_float+0xb6>
 8001742:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8001746:	4543      	cmp	r3, r8
 8001748:	db02      	blt.n	8001750 <_printf_float+0x21c>
 800174a:	6823      	ldr	r3, [r4, #0]
 800174c:	07d8      	lsls	r0, r3, #31
 800174e:	d50f      	bpl.n	8001770 <_printf_float+0x23c>
 8001750:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001754:	4631      	mov	r1, r6
 8001756:	4628      	mov	r0, r5
 8001758:	47b8      	blx	r7
 800175a:	3001      	adds	r0, #1
 800175c:	f43f af45 	beq.w	80015ea <_printf_float+0xb6>
 8001760:	f04f 0900 	mov.w	r9, #0
 8001764:	f108 38ff 	add.w	r8, r8, #4294967295
 8001768:	f104 0a1a 	add.w	sl, r4, #26
 800176c:	45c8      	cmp	r8, r9
 800176e:	dc09      	bgt.n	8001784 <_printf_float+0x250>
 8001770:	6823      	ldr	r3, [r4, #0]
 8001772:	079b      	lsls	r3, r3, #30
 8001774:	f100 8103 	bmi.w	800197e <_printf_float+0x44a>
 8001778:	68e0      	ldr	r0, [r4, #12]
 800177a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800177c:	4298      	cmp	r0, r3
 800177e:	bfb8      	it	lt
 8001780:	4618      	movlt	r0, r3
 8001782:	e734      	b.n	80015ee <_printf_float+0xba>
 8001784:	2301      	movs	r3, #1
 8001786:	4652      	mov	r2, sl
 8001788:	4631      	mov	r1, r6
 800178a:	4628      	mov	r0, r5
 800178c:	47b8      	blx	r7
 800178e:	3001      	adds	r0, #1
 8001790:	f43f af2b 	beq.w	80015ea <_printf_float+0xb6>
 8001794:	f109 0901 	add.w	r9, r9, #1
 8001798:	e7e8      	b.n	800176c <_printf_float+0x238>
 800179a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800179c:	2b00      	cmp	r3, #0
 800179e:	dc39      	bgt.n	8001814 <_printf_float+0x2e0>
 80017a0:	4a1b      	ldr	r2, [pc, #108]	@ (8001810 <_printf_float+0x2dc>)
 80017a2:	2301      	movs	r3, #1
 80017a4:	4631      	mov	r1, r6
 80017a6:	4628      	mov	r0, r5
 80017a8:	47b8      	blx	r7
 80017aa:	3001      	adds	r0, #1
 80017ac:	f43f af1d 	beq.w	80015ea <_printf_float+0xb6>
 80017b0:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 80017b4:	ea59 0303 	orrs.w	r3, r9, r3
 80017b8:	d102      	bne.n	80017c0 <_printf_float+0x28c>
 80017ba:	6823      	ldr	r3, [r4, #0]
 80017bc:	07d9      	lsls	r1, r3, #31
 80017be:	d5d7      	bpl.n	8001770 <_printf_float+0x23c>
 80017c0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80017c4:	4631      	mov	r1, r6
 80017c6:	4628      	mov	r0, r5
 80017c8:	47b8      	blx	r7
 80017ca:	3001      	adds	r0, #1
 80017cc:	f43f af0d 	beq.w	80015ea <_printf_float+0xb6>
 80017d0:	f04f 0a00 	mov.w	sl, #0
 80017d4:	f104 0b1a 	add.w	fp, r4, #26
 80017d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80017da:	425b      	negs	r3, r3
 80017dc:	4553      	cmp	r3, sl
 80017de:	dc01      	bgt.n	80017e4 <_printf_float+0x2b0>
 80017e0:	464b      	mov	r3, r9
 80017e2:	e793      	b.n	800170c <_printf_float+0x1d8>
 80017e4:	2301      	movs	r3, #1
 80017e6:	465a      	mov	r2, fp
 80017e8:	4631      	mov	r1, r6
 80017ea:	4628      	mov	r0, r5
 80017ec:	47b8      	blx	r7
 80017ee:	3001      	adds	r0, #1
 80017f0:	f43f aefb 	beq.w	80015ea <_printf_float+0xb6>
 80017f4:	f10a 0a01 	add.w	sl, sl, #1
 80017f8:	e7ee      	b.n	80017d8 <_printf_float+0x2a4>
 80017fa:	bf00      	nop
 80017fc:	7fefffff 	.word	0x7fefffff
 8001800:	080040c7 	.word	0x080040c7
 8001804:	080040c3 	.word	0x080040c3
 8001808:	080040cf 	.word	0x080040cf
 800180c:	080040cb 	.word	0x080040cb
 8001810:	080040d3 	.word	0x080040d3
 8001814:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001816:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800181a:	4553      	cmp	r3, sl
 800181c:	bfa8      	it	ge
 800181e:	4653      	movge	r3, sl
 8001820:	2b00      	cmp	r3, #0
 8001822:	4699      	mov	r9, r3
 8001824:	dc36      	bgt.n	8001894 <_printf_float+0x360>
 8001826:	f04f 0b00 	mov.w	fp, #0
 800182a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800182e:	f104 021a 	add.w	r2, r4, #26
 8001832:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001834:	9306      	str	r3, [sp, #24]
 8001836:	eba3 0309 	sub.w	r3, r3, r9
 800183a:	455b      	cmp	r3, fp
 800183c:	dc31      	bgt.n	80018a2 <_printf_float+0x36e>
 800183e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001840:	459a      	cmp	sl, r3
 8001842:	dc3a      	bgt.n	80018ba <_printf_float+0x386>
 8001844:	6823      	ldr	r3, [r4, #0]
 8001846:	07da      	lsls	r2, r3, #31
 8001848:	d437      	bmi.n	80018ba <_printf_float+0x386>
 800184a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800184c:	ebaa 0903 	sub.w	r9, sl, r3
 8001850:	9b06      	ldr	r3, [sp, #24]
 8001852:	ebaa 0303 	sub.w	r3, sl, r3
 8001856:	4599      	cmp	r9, r3
 8001858:	bfa8      	it	ge
 800185a:	4699      	movge	r9, r3
 800185c:	f1b9 0f00 	cmp.w	r9, #0
 8001860:	dc33      	bgt.n	80018ca <_printf_float+0x396>
 8001862:	f04f 0800 	mov.w	r8, #0
 8001866:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800186a:	f104 0b1a 	add.w	fp, r4, #26
 800186e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001870:	ebaa 0303 	sub.w	r3, sl, r3
 8001874:	eba3 0309 	sub.w	r3, r3, r9
 8001878:	4543      	cmp	r3, r8
 800187a:	f77f af79 	ble.w	8001770 <_printf_float+0x23c>
 800187e:	2301      	movs	r3, #1
 8001880:	465a      	mov	r2, fp
 8001882:	4631      	mov	r1, r6
 8001884:	4628      	mov	r0, r5
 8001886:	47b8      	blx	r7
 8001888:	3001      	adds	r0, #1
 800188a:	f43f aeae 	beq.w	80015ea <_printf_float+0xb6>
 800188e:	f108 0801 	add.w	r8, r8, #1
 8001892:	e7ec      	b.n	800186e <_printf_float+0x33a>
 8001894:	4642      	mov	r2, r8
 8001896:	4631      	mov	r1, r6
 8001898:	4628      	mov	r0, r5
 800189a:	47b8      	blx	r7
 800189c:	3001      	adds	r0, #1
 800189e:	d1c2      	bne.n	8001826 <_printf_float+0x2f2>
 80018a0:	e6a3      	b.n	80015ea <_printf_float+0xb6>
 80018a2:	2301      	movs	r3, #1
 80018a4:	4631      	mov	r1, r6
 80018a6:	4628      	mov	r0, r5
 80018a8:	9206      	str	r2, [sp, #24]
 80018aa:	47b8      	blx	r7
 80018ac:	3001      	adds	r0, #1
 80018ae:	f43f ae9c 	beq.w	80015ea <_printf_float+0xb6>
 80018b2:	9a06      	ldr	r2, [sp, #24]
 80018b4:	f10b 0b01 	add.w	fp, fp, #1
 80018b8:	e7bb      	b.n	8001832 <_printf_float+0x2fe>
 80018ba:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80018be:	4631      	mov	r1, r6
 80018c0:	4628      	mov	r0, r5
 80018c2:	47b8      	blx	r7
 80018c4:	3001      	adds	r0, #1
 80018c6:	d1c0      	bne.n	800184a <_printf_float+0x316>
 80018c8:	e68f      	b.n	80015ea <_printf_float+0xb6>
 80018ca:	9a06      	ldr	r2, [sp, #24]
 80018cc:	464b      	mov	r3, r9
 80018ce:	4442      	add	r2, r8
 80018d0:	4631      	mov	r1, r6
 80018d2:	4628      	mov	r0, r5
 80018d4:	47b8      	blx	r7
 80018d6:	3001      	adds	r0, #1
 80018d8:	d1c3      	bne.n	8001862 <_printf_float+0x32e>
 80018da:	e686      	b.n	80015ea <_printf_float+0xb6>
 80018dc:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 80018e0:	f1ba 0f01 	cmp.w	sl, #1
 80018e4:	dc01      	bgt.n	80018ea <_printf_float+0x3b6>
 80018e6:	07db      	lsls	r3, r3, #31
 80018e8:	d536      	bpl.n	8001958 <_printf_float+0x424>
 80018ea:	2301      	movs	r3, #1
 80018ec:	4642      	mov	r2, r8
 80018ee:	4631      	mov	r1, r6
 80018f0:	4628      	mov	r0, r5
 80018f2:	47b8      	blx	r7
 80018f4:	3001      	adds	r0, #1
 80018f6:	f43f ae78 	beq.w	80015ea <_printf_float+0xb6>
 80018fa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80018fe:	4631      	mov	r1, r6
 8001900:	4628      	mov	r0, r5
 8001902:	47b8      	blx	r7
 8001904:	3001      	adds	r0, #1
 8001906:	f43f ae70 	beq.w	80015ea <_printf_float+0xb6>
 800190a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800190e:	2200      	movs	r2, #0
 8001910:	2300      	movs	r3, #0
 8001912:	f10a 3aff 	add.w	sl, sl, #4294967295
 8001916:	f7ff f8df 	bl	8000ad8 <__aeabi_dcmpeq>
 800191a:	b9c0      	cbnz	r0, 800194e <_printf_float+0x41a>
 800191c:	4653      	mov	r3, sl
 800191e:	f108 0201 	add.w	r2, r8, #1
 8001922:	4631      	mov	r1, r6
 8001924:	4628      	mov	r0, r5
 8001926:	47b8      	blx	r7
 8001928:	3001      	adds	r0, #1
 800192a:	d10c      	bne.n	8001946 <_printf_float+0x412>
 800192c:	e65d      	b.n	80015ea <_printf_float+0xb6>
 800192e:	2301      	movs	r3, #1
 8001930:	465a      	mov	r2, fp
 8001932:	4631      	mov	r1, r6
 8001934:	4628      	mov	r0, r5
 8001936:	47b8      	blx	r7
 8001938:	3001      	adds	r0, #1
 800193a:	f43f ae56 	beq.w	80015ea <_printf_float+0xb6>
 800193e:	f108 0801 	add.w	r8, r8, #1
 8001942:	45d0      	cmp	r8, sl
 8001944:	dbf3      	blt.n	800192e <_printf_float+0x3fa>
 8001946:	464b      	mov	r3, r9
 8001948:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 800194c:	e6df      	b.n	800170e <_printf_float+0x1da>
 800194e:	f04f 0800 	mov.w	r8, #0
 8001952:	f104 0b1a 	add.w	fp, r4, #26
 8001956:	e7f4      	b.n	8001942 <_printf_float+0x40e>
 8001958:	2301      	movs	r3, #1
 800195a:	4642      	mov	r2, r8
 800195c:	e7e1      	b.n	8001922 <_printf_float+0x3ee>
 800195e:	2301      	movs	r3, #1
 8001960:	464a      	mov	r2, r9
 8001962:	4631      	mov	r1, r6
 8001964:	4628      	mov	r0, r5
 8001966:	47b8      	blx	r7
 8001968:	3001      	adds	r0, #1
 800196a:	f43f ae3e 	beq.w	80015ea <_printf_float+0xb6>
 800196e:	f108 0801 	add.w	r8, r8, #1
 8001972:	68e3      	ldr	r3, [r4, #12]
 8001974:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8001976:	1a5b      	subs	r3, r3, r1
 8001978:	4543      	cmp	r3, r8
 800197a:	dcf0      	bgt.n	800195e <_printf_float+0x42a>
 800197c:	e6fc      	b.n	8001778 <_printf_float+0x244>
 800197e:	f04f 0800 	mov.w	r8, #0
 8001982:	f104 0919 	add.w	r9, r4, #25
 8001986:	e7f4      	b.n	8001972 <_printf_float+0x43e>

08001988 <_printf_common>:
 8001988:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800198c:	4616      	mov	r6, r2
 800198e:	4698      	mov	r8, r3
 8001990:	688a      	ldr	r2, [r1, #8]
 8001992:	690b      	ldr	r3, [r1, #16]
 8001994:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001998:	4293      	cmp	r3, r2
 800199a:	bfb8      	it	lt
 800199c:	4613      	movlt	r3, r2
 800199e:	6033      	str	r3, [r6, #0]
 80019a0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80019a4:	4607      	mov	r7, r0
 80019a6:	460c      	mov	r4, r1
 80019a8:	b10a      	cbz	r2, 80019ae <_printf_common+0x26>
 80019aa:	3301      	adds	r3, #1
 80019ac:	6033      	str	r3, [r6, #0]
 80019ae:	6823      	ldr	r3, [r4, #0]
 80019b0:	0699      	lsls	r1, r3, #26
 80019b2:	bf42      	ittt	mi
 80019b4:	6833      	ldrmi	r3, [r6, #0]
 80019b6:	3302      	addmi	r3, #2
 80019b8:	6033      	strmi	r3, [r6, #0]
 80019ba:	6825      	ldr	r5, [r4, #0]
 80019bc:	f015 0506 	ands.w	r5, r5, #6
 80019c0:	d106      	bne.n	80019d0 <_printf_common+0x48>
 80019c2:	f104 0a19 	add.w	sl, r4, #25
 80019c6:	68e3      	ldr	r3, [r4, #12]
 80019c8:	6832      	ldr	r2, [r6, #0]
 80019ca:	1a9b      	subs	r3, r3, r2
 80019cc:	42ab      	cmp	r3, r5
 80019ce:	dc26      	bgt.n	8001a1e <_printf_common+0x96>
 80019d0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80019d4:	6822      	ldr	r2, [r4, #0]
 80019d6:	3b00      	subs	r3, #0
 80019d8:	bf18      	it	ne
 80019da:	2301      	movne	r3, #1
 80019dc:	0692      	lsls	r2, r2, #26
 80019de:	d42b      	bmi.n	8001a38 <_printf_common+0xb0>
 80019e0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80019e4:	4641      	mov	r1, r8
 80019e6:	4638      	mov	r0, r7
 80019e8:	47c8      	blx	r9
 80019ea:	3001      	adds	r0, #1
 80019ec:	d01e      	beq.n	8001a2c <_printf_common+0xa4>
 80019ee:	6823      	ldr	r3, [r4, #0]
 80019f0:	6922      	ldr	r2, [r4, #16]
 80019f2:	f003 0306 	and.w	r3, r3, #6
 80019f6:	2b04      	cmp	r3, #4
 80019f8:	bf02      	ittt	eq
 80019fa:	68e5      	ldreq	r5, [r4, #12]
 80019fc:	6833      	ldreq	r3, [r6, #0]
 80019fe:	1aed      	subeq	r5, r5, r3
 8001a00:	68a3      	ldr	r3, [r4, #8]
 8001a02:	bf0c      	ite	eq
 8001a04:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001a08:	2500      	movne	r5, #0
 8001a0a:	4293      	cmp	r3, r2
 8001a0c:	bfc4      	itt	gt
 8001a0e:	1a9b      	subgt	r3, r3, r2
 8001a10:	18ed      	addgt	r5, r5, r3
 8001a12:	2600      	movs	r6, #0
 8001a14:	341a      	adds	r4, #26
 8001a16:	42b5      	cmp	r5, r6
 8001a18:	d11a      	bne.n	8001a50 <_printf_common+0xc8>
 8001a1a:	2000      	movs	r0, #0
 8001a1c:	e008      	b.n	8001a30 <_printf_common+0xa8>
 8001a1e:	2301      	movs	r3, #1
 8001a20:	4652      	mov	r2, sl
 8001a22:	4641      	mov	r1, r8
 8001a24:	4638      	mov	r0, r7
 8001a26:	47c8      	blx	r9
 8001a28:	3001      	adds	r0, #1
 8001a2a:	d103      	bne.n	8001a34 <_printf_common+0xac>
 8001a2c:	f04f 30ff 	mov.w	r0, #4294967295
 8001a30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001a34:	3501      	adds	r5, #1
 8001a36:	e7c6      	b.n	80019c6 <_printf_common+0x3e>
 8001a38:	18e1      	adds	r1, r4, r3
 8001a3a:	1c5a      	adds	r2, r3, #1
 8001a3c:	2030      	movs	r0, #48	@ 0x30
 8001a3e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001a42:	4422      	add	r2, r4
 8001a44:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001a48:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001a4c:	3302      	adds	r3, #2
 8001a4e:	e7c7      	b.n	80019e0 <_printf_common+0x58>
 8001a50:	2301      	movs	r3, #1
 8001a52:	4622      	mov	r2, r4
 8001a54:	4641      	mov	r1, r8
 8001a56:	4638      	mov	r0, r7
 8001a58:	47c8      	blx	r9
 8001a5a:	3001      	adds	r0, #1
 8001a5c:	d0e6      	beq.n	8001a2c <_printf_common+0xa4>
 8001a5e:	3601      	adds	r6, #1
 8001a60:	e7d9      	b.n	8001a16 <_printf_common+0x8e>
	...

08001a64 <_printf_i>:
 8001a64:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001a68:	7e0f      	ldrb	r7, [r1, #24]
 8001a6a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001a6c:	2f78      	cmp	r7, #120	@ 0x78
 8001a6e:	4691      	mov	r9, r2
 8001a70:	4680      	mov	r8, r0
 8001a72:	460c      	mov	r4, r1
 8001a74:	469a      	mov	sl, r3
 8001a76:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001a7a:	d807      	bhi.n	8001a8c <_printf_i+0x28>
 8001a7c:	2f62      	cmp	r7, #98	@ 0x62
 8001a7e:	d80a      	bhi.n	8001a96 <_printf_i+0x32>
 8001a80:	2f00      	cmp	r7, #0
 8001a82:	f000 80d1 	beq.w	8001c28 <_printf_i+0x1c4>
 8001a86:	2f58      	cmp	r7, #88	@ 0x58
 8001a88:	f000 80b8 	beq.w	8001bfc <_printf_i+0x198>
 8001a8c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001a90:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001a94:	e03a      	b.n	8001b0c <_printf_i+0xa8>
 8001a96:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001a9a:	2b15      	cmp	r3, #21
 8001a9c:	d8f6      	bhi.n	8001a8c <_printf_i+0x28>
 8001a9e:	a101      	add	r1, pc, #4	@ (adr r1, 8001aa4 <_printf_i+0x40>)
 8001aa0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001aa4:	08001afd 	.word	0x08001afd
 8001aa8:	08001b11 	.word	0x08001b11
 8001aac:	08001a8d 	.word	0x08001a8d
 8001ab0:	08001a8d 	.word	0x08001a8d
 8001ab4:	08001a8d 	.word	0x08001a8d
 8001ab8:	08001a8d 	.word	0x08001a8d
 8001abc:	08001b11 	.word	0x08001b11
 8001ac0:	08001a8d 	.word	0x08001a8d
 8001ac4:	08001a8d 	.word	0x08001a8d
 8001ac8:	08001a8d 	.word	0x08001a8d
 8001acc:	08001a8d 	.word	0x08001a8d
 8001ad0:	08001c0f 	.word	0x08001c0f
 8001ad4:	08001b3b 	.word	0x08001b3b
 8001ad8:	08001bc9 	.word	0x08001bc9
 8001adc:	08001a8d 	.word	0x08001a8d
 8001ae0:	08001a8d 	.word	0x08001a8d
 8001ae4:	08001c31 	.word	0x08001c31
 8001ae8:	08001a8d 	.word	0x08001a8d
 8001aec:	08001b3b 	.word	0x08001b3b
 8001af0:	08001a8d 	.word	0x08001a8d
 8001af4:	08001a8d 	.word	0x08001a8d
 8001af8:	08001bd1 	.word	0x08001bd1
 8001afc:	6833      	ldr	r3, [r6, #0]
 8001afe:	1d1a      	adds	r2, r3, #4
 8001b00:	681b      	ldr	r3, [r3, #0]
 8001b02:	6032      	str	r2, [r6, #0]
 8001b04:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001b08:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001b0c:	2301      	movs	r3, #1
 8001b0e:	e09c      	b.n	8001c4a <_printf_i+0x1e6>
 8001b10:	6833      	ldr	r3, [r6, #0]
 8001b12:	6820      	ldr	r0, [r4, #0]
 8001b14:	1d19      	adds	r1, r3, #4
 8001b16:	6031      	str	r1, [r6, #0]
 8001b18:	0606      	lsls	r6, r0, #24
 8001b1a:	d501      	bpl.n	8001b20 <_printf_i+0xbc>
 8001b1c:	681d      	ldr	r5, [r3, #0]
 8001b1e:	e003      	b.n	8001b28 <_printf_i+0xc4>
 8001b20:	0645      	lsls	r5, r0, #25
 8001b22:	d5fb      	bpl.n	8001b1c <_printf_i+0xb8>
 8001b24:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001b28:	2d00      	cmp	r5, #0
 8001b2a:	da03      	bge.n	8001b34 <_printf_i+0xd0>
 8001b2c:	232d      	movs	r3, #45	@ 0x2d
 8001b2e:	426d      	negs	r5, r5
 8001b30:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001b34:	4858      	ldr	r0, [pc, #352]	@ (8001c98 <_printf_i+0x234>)
 8001b36:	230a      	movs	r3, #10
 8001b38:	e011      	b.n	8001b5e <_printf_i+0xfa>
 8001b3a:	6821      	ldr	r1, [r4, #0]
 8001b3c:	6833      	ldr	r3, [r6, #0]
 8001b3e:	0608      	lsls	r0, r1, #24
 8001b40:	f853 5b04 	ldr.w	r5, [r3], #4
 8001b44:	d402      	bmi.n	8001b4c <_printf_i+0xe8>
 8001b46:	0649      	lsls	r1, r1, #25
 8001b48:	bf48      	it	mi
 8001b4a:	b2ad      	uxthmi	r5, r5
 8001b4c:	2f6f      	cmp	r7, #111	@ 0x6f
 8001b4e:	4852      	ldr	r0, [pc, #328]	@ (8001c98 <_printf_i+0x234>)
 8001b50:	6033      	str	r3, [r6, #0]
 8001b52:	bf14      	ite	ne
 8001b54:	230a      	movne	r3, #10
 8001b56:	2308      	moveq	r3, #8
 8001b58:	2100      	movs	r1, #0
 8001b5a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001b5e:	6866      	ldr	r6, [r4, #4]
 8001b60:	60a6      	str	r6, [r4, #8]
 8001b62:	2e00      	cmp	r6, #0
 8001b64:	db05      	blt.n	8001b72 <_printf_i+0x10e>
 8001b66:	6821      	ldr	r1, [r4, #0]
 8001b68:	432e      	orrs	r6, r5
 8001b6a:	f021 0104 	bic.w	r1, r1, #4
 8001b6e:	6021      	str	r1, [r4, #0]
 8001b70:	d04b      	beq.n	8001c0a <_printf_i+0x1a6>
 8001b72:	4616      	mov	r6, r2
 8001b74:	fbb5 f1f3 	udiv	r1, r5, r3
 8001b78:	fb03 5711 	mls	r7, r3, r1, r5
 8001b7c:	5dc7      	ldrb	r7, [r0, r7]
 8001b7e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001b82:	462f      	mov	r7, r5
 8001b84:	42bb      	cmp	r3, r7
 8001b86:	460d      	mov	r5, r1
 8001b88:	d9f4      	bls.n	8001b74 <_printf_i+0x110>
 8001b8a:	2b08      	cmp	r3, #8
 8001b8c:	d10b      	bne.n	8001ba6 <_printf_i+0x142>
 8001b8e:	6823      	ldr	r3, [r4, #0]
 8001b90:	07df      	lsls	r7, r3, #31
 8001b92:	d508      	bpl.n	8001ba6 <_printf_i+0x142>
 8001b94:	6923      	ldr	r3, [r4, #16]
 8001b96:	6861      	ldr	r1, [r4, #4]
 8001b98:	4299      	cmp	r1, r3
 8001b9a:	bfde      	ittt	le
 8001b9c:	2330      	movle	r3, #48	@ 0x30
 8001b9e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001ba2:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001ba6:	1b92      	subs	r2, r2, r6
 8001ba8:	6122      	str	r2, [r4, #16]
 8001baa:	f8cd a000 	str.w	sl, [sp]
 8001bae:	464b      	mov	r3, r9
 8001bb0:	aa03      	add	r2, sp, #12
 8001bb2:	4621      	mov	r1, r4
 8001bb4:	4640      	mov	r0, r8
 8001bb6:	f7ff fee7 	bl	8001988 <_printf_common>
 8001bba:	3001      	adds	r0, #1
 8001bbc:	d14a      	bne.n	8001c54 <_printf_i+0x1f0>
 8001bbe:	f04f 30ff 	mov.w	r0, #4294967295
 8001bc2:	b004      	add	sp, #16
 8001bc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001bc8:	6823      	ldr	r3, [r4, #0]
 8001bca:	f043 0320 	orr.w	r3, r3, #32
 8001bce:	6023      	str	r3, [r4, #0]
 8001bd0:	4832      	ldr	r0, [pc, #200]	@ (8001c9c <_printf_i+0x238>)
 8001bd2:	2778      	movs	r7, #120	@ 0x78
 8001bd4:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001bd8:	6823      	ldr	r3, [r4, #0]
 8001bda:	6831      	ldr	r1, [r6, #0]
 8001bdc:	061f      	lsls	r7, r3, #24
 8001bde:	f851 5b04 	ldr.w	r5, [r1], #4
 8001be2:	d402      	bmi.n	8001bea <_printf_i+0x186>
 8001be4:	065f      	lsls	r7, r3, #25
 8001be6:	bf48      	it	mi
 8001be8:	b2ad      	uxthmi	r5, r5
 8001bea:	6031      	str	r1, [r6, #0]
 8001bec:	07d9      	lsls	r1, r3, #31
 8001bee:	bf44      	itt	mi
 8001bf0:	f043 0320 	orrmi.w	r3, r3, #32
 8001bf4:	6023      	strmi	r3, [r4, #0]
 8001bf6:	b11d      	cbz	r5, 8001c00 <_printf_i+0x19c>
 8001bf8:	2310      	movs	r3, #16
 8001bfa:	e7ad      	b.n	8001b58 <_printf_i+0xf4>
 8001bfc:	4826      	ldr	r0, [pc, #152]	@ (8001c98 <_printf_i+0x234>)
 8001bfe:	e7e9      	b.n	8001bd4 <_printf_i+0x170>
 8001c00:	6823      	ldr	r3, [r4, #0]
 8001c02:	f023 0320 	bic.w	r3, r3, #32
 8001c06:	6023      	str	r3, [r4, #0]
 8001c08:	e7f6      	b.n	8001bf8 <_printf_i+0x194>
 8001c0a:	4616      	mov	r6, r2
 8001c0c:	e7bd      	b.n	8001b8a <_printf_i+0x126>
 8001c0e:	6833      	ldr	r3, [r6, #0]
 8001c10:	6825      	ldr	r5, [r4, #0]
 8001c12:	6961      	ldr	r1, [r4, #20]
 8001c14:	1d18      	adds	r0, r3, #4
 8001c16:	6030      	str	r0, [r6, #0]
 8001c18:	062e      	lsls	r6, r5, #24
 8001c1a:	681b      	ldr	r3, [r3, #0]
 8001c1c:	d501      	bpl.n	8001c22 <_printf_i+0x1be>
 8001c1e:	6019      	str	r1, [r3, #0]
 8001c20:	e002      	b.n	8001c28 <_printf_i+0x1c4>
 8001c22:	0668      	lsls	r0, r5, #25
 8001c24:	d5fb      	bpl.n	8001c1e <_printf_i+0x1ba>
 8001c26:	8019      	strh	r1, [r3, #0]
 8001c28:	2300      	movs	r3, #0
 8001c2a:	6123      	str	r3, [r4, #16]
 8001c2c:	4616      	mov	r6, r2
 8001c2e:	e7bc      	b.n	8001baa <_printf_i+0x146>
 8001c30:	6833      	ldr	r3, [r6, #0]
 8001c32:	1d1a      	adds	r2, r3, #4
 8001c34:	6032      	str	r2, [r6, #0]
 8001c36:	681e      	ldr	r6, [r3, #0]
 8001c38:	6862      	ldr	r2, [r4, #4]
 8001c3a:	2100      	movs	r1, #0
 8001c3c:	4630      	mov	r0, r6
 8001c3e:	f7fe facf 	bl	80001e0 <memchr>
 8001c42:	b108      	cbz	r0, 8001c48 <_printf_i+0x1e4>
 8001c44:	1b80      	subs	r0, r0, r6
 8001c46:	6060      	str	r0, [r4, #4]
 8001c48:	6863      	ldr	r3, [r4, #4]
 8001c4a:	6123      	str	r3, [r4, #16]
 8001c4c:	2300      	movs	r3, #0
 8001c4e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001c52:	e7aa      	b.n	8001baa <_printf_i+0x146>
 8001c54:	6923      	ldr	r3, [r4, #16]
 8001c56:	4632      	mov	r2, r6
 8001c58:	4649      	mov	r1, r9
 8001c5a:	4640      	mov	r0, r8
 8001c5c:	47d0      	blx	sl
 8001c5e:	3001      	adds	r0, #1
 8001c60:	d0ad      	beq.n	8001bbe <_printf_i+0x15a>
 8001c62:	6823      	ldr	r3, [r4, #0]
 8001c64:	079b      	lsls	r3, r3, #30
 8001c66:	d413      	bmi.n	8001c90 <_printf_i+0x22c>
 8001c68:	68e0      	ldr	r0, [r4, #12]
 8001c6a:	9b03      	ldr	r3, [sp, #12]
 8001c6c:	4298      	cmp	r0, r3
 8001c6e:	bfb8      	it	lt
 8001c70:	4618      	movlt	r0, r3
 8001c72:	e7a6      	b.n	8001bc2 <_printf_i+0x15e>
 8001c74:	2301      	movs	r3, #1
 8001c76:	4632      	mov	r2, r6
 8001c78:	4649      	mov	r1, r9
 8001c7a:	4640      	mov	r0, r8
 8001c7c:	47d0      	blx	sl
 8001c7e:	3001      	adds	r0, #1
 8001c80:	d09d      	beq.n	8001bbe <_printf_i+0x15a>
 8001c82:	3501      	adds	r5, #1
 8001c84:	68e3      	ldr	r3, [r4, #12]
 8001c86:	9903      	ldr	r1, [sp, #12]
 8001c88:	1a5b      	subs	r3, r3, r1
 8001c8a:	42ab      	cmp	r3, r5
 8001c8c:	dcf2      	bgt.n	8001c74 <_printf_i+0x210>
 8001c8e:	e7eb      	b.n	8001c68 <_printf_i+0x204>
 8001c90:	2500      	movs	r5, #0
 8001c92:	f104 0619 	add.w	r6, r4, #25
 8001c96:	e7f5      	b.n	8001c84 <_printf_i+0x220>
 8001c98:	080040d5 	.word	0x080040d5
 8001c9c:	080040e6 	.word	0x080040e6

08001ca0 <std>:
 8001ca0:	2300      	movs	r3, #0
 8001ca2:	b510      	push	{r4, lr}
 8001ca4:	4604      	mov	r4, r0
 8001ca6:	e9c0 3300 	strd	r3, r3, [r0]
 8001caa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001cae:	6083      	str	r3, [r0, #8]
 8001cb0:	8181      	strh	r1, [r0, #12]
 8001cb2:	6643      	str	r3, [r0, #100]	@ 0x64
 8001cb4:	81c2      	strh	r2, [r0, #14]
 8001cb6:	6183      	str	r3, [r0, #24]
 8001cb8:	4619      	mov	r1, r3
 8001cba:	2208      	movs	r2, #8
 8001cbc:	305c      	adds	r0, #92	@ 0x5c
 8001cbe:	f000 f915 	bl	8001eec <memset>
 8001cc2:	4b0d      	ldr	r3, [pc, #52]	@ (8001cf8 <std+0x58>)
 8001cc4:	6263      	str	r3, [r4, #36]	@ 0x24
 8001cc6:	4b0d      	ldr	r3, [pc, #52]	@ (8001cfc <std+0x5c>)
 8001cc8:	62a3      	str	r3, [r4, #40]	@ 0x28
 8001cca:	4b0d      	ldr	r3, [pc, #52]	@ (8001d00 <std+0x60>)
 8001ccc:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001cce:	4b0d      	ldr	r3, [pc, #52]	@ (8001d04 <std+0x64>)
 8001cd0:	6323      	str	r3, [r4, #48]	@ 0x30
 8001cd2:	4b0d      	ldr	r3, [pc, #52]	@ (8001d08 <std+0x68>)
 8001cd4:	6224      	str	r4, [r4, #32]
 8001cd6:	429c      	cmp	r4, r3
 8001cd8:	d006      	beq.n	8001ce8 <std+0x48>
 8001cda:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8001cde:	4294      	cmp	r4, r2
 8001ce0:	d002      	beq.n	8001ce8 <std+0x48>
 8001ce2:	33d0      	adds	r3, #208	@ 0xd0
 8001ce4:	429c      	cmp	r4, r3
 8001ce6:	d105      	bne.n	8001cf4 <std+0x54>
 8001ce8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001cec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001cf0:	f000 b978 	b.w	8001fe4 <__retarget_lock_init_recursive>
 8001cf4:	bd10      	pop	{r4, pc}
 8001cf6:	bf00      	nop
 8001cf8:	08001e25 	.word	0x08001e25
 8001cfc:	08001e47 	.word	0x08001e47
 8001d00:	08001e7f 	.word	0x08001e7f
 8001d04:	08001ea3 	.word	0x08001ea3
 8001d08:	2000073c 	.word	0x2000073c

08001d0c <stdio_exit_handler>:
 8001d0c:	4a02      	ldr	r2, [pc, #8]	@ (8001d18 <stdio_exit_handler+0xc>)
 8001d0e:	4903      	ldr	r1, [pc, #12]	@ (8001d1c <stdio_exit_handler+0x10>)
 8001d10:	4803      	ldr	r0, [pc, #12]	@ (8001d20 <stdio_exit_handler+0x14>)
 8001d12:	f000 b869 	b.w	8001de8 <_fwalk_sglue>
 8001d16:	bf00      	nop
 8001d18:	20000004 	.word	0x20000004
 8001d1c:	0800394d 	.word	0x0800394d
 8001d20:	20000014 	.word	0x20000014

08001d24 <cleanup_stdio>:
 8001d24:	6841      	ldr	r1, [r0, #4]
 8001d26:	4b0c      	ldr	r3, [pc, #48]	@ (8001d58 <cleanup_stdio+0x34>)
 8001d28:	4299      	cmp	r1, r3
 8001d2a:	b510      	push	{r4, lr}
 8001d2c:	4604      	mov	r4, r0
 8001d2e:	d001      	beq.n	8001d34 <cleanup_stdio+0x10>
 8001d30:	f001 fe0c 	bl	800394c <_fflush_r>
 8001d34:	68a1      	ldr	r1, [r4, #8]
 8001d36:	4b09      	ldr	r3, [pc, #36]	@ (8001d5c <cleanup_stdio+0x38>)
 8001d38:	4299      	cmp	r1, r3
 8001d3a:	d002      	beq.n	8001d42 <cleanup_stdio+0x1e>
 8001d3c:	4620      	mov	r0, r4
 8001d3e:	f001 fe05 	bl	800394c <_fflush_r>
 8001d42:	68e1      	ldr	r1, [r4, #12]
 8001d44:	4b06      	ldr	r3, [pc, #24]	@ (8001d60 <cleanup_stdio+0x3c>)
 8001d46:	4299      	cmp	r1, r3
 8001d48:	d004      	beq.n	8001d54 <cleanup_stdio+0x30>
 8001d4a:	4620      	mov	r0, r4
 8001d4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d50:	f001 bdfc 	b.w	800394c <_fflush_r>
 8001d54:	bd10      	pop	{r4, pc}
 8001d56:	bf00      	nop
 8001d58:	2000073c 	.word	0x2000073c
 8001d5c:	200007a4 	.word	0x200007a4
 8001d60:	2000080c 	.word	0x2000080c

08001d64 <global_stdio_init.part.0>:
 8001d64:	b510      	push	{r4, lr}
 8001d66:	4b0b      	ldr	r3, [pc, #44]	@ (8001d94 <global_stdio_init.part.0+0x30>)
 8001d68:	4c0b      	ldr	r4, [pc, #44]	@ (8001d98 <global_stdio_init.part.0+0x34>)
 8001d6a:	4a0c      	ldr	r2, [pc, #48]	@ (8001d9c <global_stdio_init.part.0+0x38>)
 8001d6c:	601a      	str	r2, [r3, #0]
 8001d6e:	4620      	mov	r0, r4
 8001d70:	2200      	movs	r2, #0
 8001d72:	2104      	movs	r1, #4
 8001d74:	f7ff ff94 	bl	8001ca0 <std>
 8001d78:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8001d7c:	2201      	movs	r2, #1
 8001d7e:	2109      	movs	r1, #9
 8001d80:	f7ff ff8e 	bl	8001ca0 <std>
 8001d84:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8001d88:	2202      	movs	r2, #2
 8001d8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d8e:	2112      	movs	r1, #18
 8001d90:	f7ff bf86 	b.w	8001ca0 <std>
 8001d94:	20000874 	.word	0x20000874
 8001d98:	2000073c 	.word	0x2000073c
 8001d9c:	08001d0d 	.word	0x08001d0d

08001da0 <__sfp_lock_acquire>:
 8001da0:	4801      	ldr	r0, [pc, #4]	@ (8001da8 <__sfp_lock_acquire+0x8>)
 8001da2:	f000 b920 	b.w	8001fe6 <__retarget_lock_acquire_recursive>
 8001da6:	bf00      	nop
 8001da8:	2000087d 	.word	0x2000087d

08001dac <__sfp_lock_release>:
 8001dac:	4801      	ldr	r0, [pc, #4]	@ (8001db4 <__sfp_lock_release+0x8>)
 8001dae:	f000 b91b 	b.w	8001fe8 <__retarget_lock_release_recursive>
 8001db2:	bf00      	nop
 8001db4:	2000087d 	.word	0x2000087d

08001db8 <__sinit>:
 8001db8:	b510      	push	{r4, lr}
 8001dba:	4604      	mov	r4, r0
 8001dbc:	f7ff fff0 	bl	8001da0 <__sfp_lock_acquire>
 8001dc0:	6a23      	ldr	r3, [r4, #32]
 8001dc2:	b11b      	cbz	r3, 8001dcc <__sinit+0x14>
 8001dc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001dc8:	f7ff bff0 	b.w	8001dac <__sfp_lock_release>
 8001dcc:	4b04      	ldr	r3, [pc, #16]	@ (8001de0 <__sinit+0x28>)
 8001dce:	6223      	str	r3, [r4, #32]
 8001dd0:	4b04      	ldr	r3, [pc, #16]	@ (8001de4 <__sinit+0x2c>)
 8001dd2:	681b      	ldr	r3, [r3, #0]
 8001dd4:	2b00      	cmp	r3, #0
 8001dd6:	d1f5      	bne.n	8001dc4 <__sinit+0xc>
 8001dd8:	f7ff ffc4 	bl	8001d64 <global_stdio_init.part.0>
 8001ddc:	e7f2      	b.n	8001dc4 <__sinit+0xc>
 8001dde:	bf00      	nop
 8001de0:	08001d25 	.word	0x08001d25
 8001de4:	20000874 	.word	0x20000874

08001de8 <_fwalk_sglue>:
 8001de8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001dec:	4607      	mov	r7, r0
 8001dee:	4688      	mov	r8, r1
 8001df0:	4614      	mov	r4, r2
 8001df2:	2600      	movs	r6, #0
 8001df4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001df8:	f1b9 0901 	subs.w	r9, r9, #1
 8001dfc:	d505      	bpl.n	8001e0a <_fwalk_sglue+0x22>
 8001dfe:	6824      	ldr	r4, [r4, #0]
 8001e00:	2c00      	cmp	r4, #0
 8001e02:	d1f7      	bne.n	8001df4 <_fwalk_sglue+0xc>
 8001e04:	4630      	mov	r0, r6
 8001e06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001e0a:	89ab      	ldrh	r3, [r5, #12]
 8001e0c:	2b01      	cmp	r3, #1
 8001e0e:	d907      	bls.n	8001e20 <_fwalk_sglue+0x38>
 8001e10:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001e14:	3301      	adds	r3, #1
 8001e16:	d003      	beq.n	8001e20 <_fwalk_sglue+0x38>
 8001e18:	4629      	mov	r1, r5
 8001e1a:	4638      	mov	r0, r7
 8001e1c:	47c0      	blx	r8
 8001e1e:	4306      	orrs	r6, r0
 8001e20:	3568      	adds	r5, #104	@ 0x68
 8001e22:	e7e9      	b.n	8001df8 <_fwalk_sglue+0x10>

08001e24 <__sread>:
 8001e24:	b510      	push	{r4, lr}
 8001e26:	460c      	mov	r4, r1
 8001e28:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001e2c:	f000 f88c 	bl	8001f48 <_read_r>
 8001e30:	2800      	cmp	r0, #0
 8001e32:	bfab      	itete	ge
 8001e34:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8001e36:	89a3      	ldrhlt	r3, [r4, #12]
 8001e38:	181b      	addge	r3, r3, r0
 8001e3a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8001e3e:	bfac      	ite	ge
 8001e40:	6563      	strge	r3, [r4, #84]	@ 0x54
 8001e42:	81a3      	strhlt	r3, [r4, #12]
 8001e44:	bd10      	pop	{r4, pc}

08001e46 <__swrite>:
 8001e46:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e4a:	461f      	mov	r7, r3
 8001e4c:	898b      	ldrh	r3, [r1, #12]
 8001e4e:	05db      	lsls	r3, r3, #23
 8001e50:	4605      	mov	r5, r0
 8001e52:	460c      	mov	r4, r1
 8001e54:	4616      	mov	r6, r2
 8001e56:	d505      	bpl.n	8001e64 <__swrite+0x1e>
 8001e58:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001e5c:	2302      	movs	r3, #2
 8001e5e:	2200      	movs	r2, #0
 8001e60:	f000 f860 	bl	8001f24 <_lseek_r>
 8001e64:	89a3      	ldrh	r3, [r4, #12]
 8001e66:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001e6a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8001e6e:	81a3      	strh	r3, [r4, #12]
 8001e70:	4632      	mov	r2, r6
 8001e72:	463b      	mov	r3, r7
 8001e74:	4628      	mov	r0, r5
 8001e76:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001e7a:	f000 b877 	b.w	8001f6c <_write_r>

08001e7e <__sseek>:
 8001e7e:	b510      	push	{r4, lr}
 8001e80:	460c      	mov	r4, r1
 8001e82:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001e86:	f000 f84d 	bl	8001f24 <_lseek_r>
 8001e8a:	1c43      	adds	r3, r0, #1
 8001e8c:	89a3      	ldrh	r3, [r4, #12]
 8001e8e:	bf15      	itete	ne
 8001e90:	6560      	strne	r0, [r4, #84]	@ 0x54
 8001e92:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8001e96:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8001e9a:	81a3      	strheq	r3, [r4, #12]
 8001e9c:	bf18      	it	ne
 8001e9e:	81a3      	strhne	r3, [r4, #12]
 8001ea0:	bd10      	pop	{r4, pc}

08001ea2 <__sclose>:
 8001ea2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001ea6:	f000 b82d 	b.w	8001f04 <_close_r>
	...

08001eac <_vsiprintf_r>:
 8001eac:	b510      	push	{r4, lr}
 8001eae:	b09a      	sub	sp, #104	@ 0x68
 8001eb0:	2400      	movs	r4, #0
 8001eb2:	9100      	str	r1, [sp, #0]
 8001eb4:	9104      	str	r1, [sp, #16]
 8001eb6:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8001eba:	9105      	str	r1, [sp, #20]
 8001ebc:	9102      	str	r1, [sp, #8]
 8001ebe:	4905      	ldr	r1, [pc, #20]	@ (8001ed4 <_vsiprintf_r+0x28>)
 8001ec0:	9103      	str	r1, [sp, #12]
 8001ec2:	4669      	mov	r1, sp
 8001ec4:	9419      	str	r4, [sp, #100]	@ 0x64
 8001ec6:	f001 fbc1 	bl	800364c <_svfiprintf_r>
 8001eca:	9b00      	ldr	r3, [sp, #0]
 8001ecc:	701c      	strb	r4, [r3, #0]
 8001ece:	b01a      	add	sp, #104	@ 0x68
 8001ed0:	bd10      	pop	{r4, pc}
 8001ed2:	bf00      	nop
 8001ed4:	ffff0208 	.word	0xffff0208

08001ed8 <vsiprintf>:
 8001ed8:	4613      	mov	r3, r2
 8001eda:	460a      	mov	r2, r1
 8001edc:	4601      	mov	r1, r0
 8001ede:	4802      	ldr	r0, [pc, #8]	@ (8001ee8 <vsiprintf+0x10>)
 8001ee0:	6800      	ldr	r0, [r0, #0]
 8001ee2:	f7ff bfe3 	b.w	8001eac <_vsiprintf_r>
 8001ee6:	bf00      	nop
 8001ee8:	20000010 	.word	0x20000010

08001eec <memset>:
 8001eec:	4402      	add	r2, r0
 8001eee:	4603      	mov	r3, r0
 8001ef0:	4293      	cmp	r3, r2
 8001ef2:	d100      	bne.n	8001ef6 <memset+0xa>
 8001ef4:	4770      	bx	lr
 8001ef6:	f803 1b01 	strb.w	r1, [r3], #1
 8001efa:	e7f9      	b.n	8001ef0 <memset+0x4>

08001efc <_localeconv_r>:
 8001efc:	4800      	ldr	r0, [pc, #0]	@ (8001f00 <_localeconv_r+0x4>)
 8001efe:	4770      	bx	lr
 8001f00:	20000150 	.word	0x20000150

08001f04 <_close_r>:
 8001f04:	b538      	push	{r3, r4, r5, lr}
 8001f06:	4d06      	ldr	r5, [pc, #24]	@ (8001f20 <_close_r+0x1c>)
 8001f08:	2300      	movs	r3, #0
 8001f0a:	4604      	mov	r4, r0
 8001f0c:	4608      	mov	r0, r1
 8001f0e:	602b      	str	r3, [r5, #0]
 8001f10:	f7ff f9b6 	bl	8001280 <_close>
 8001f14:	1c43      	adds	r3, r0, #1
 8001f16:	d102      	bne.n	8001f1e <_close_r+0x1a>
 8001f18:	682b      	ldr	r3, [r5, #0]
 8001f1a:	b103      	cbz	r3, 8001f1e <_close_r+0x1a>
 8001f1c:	6023      	str	r3, [r4, #0]
 8001f1e:	bd38      	pop	{r3, r4, r5, pc}
 8001f20:	20000878 	.word	0x20000878

08001f24 <_lseek_r>:
 8001f24:	b538      	push	{r3, r4, r5, lr}
 8001f26:	4d07      	ldr	r5, [pc, #28]	@ (8001f44 <_lseek_r+0x20>)
 8001f28:	4604      	mov	r4, r0
 8001f2a:	4608      	mov	r0, r1
 8001f2c:	4611      	mov	r1, r2
 8001f2e:	2200      	movs	r2, #0
 8001f30:	602a      	str	r2, [r5, #0]
 8001f32:	461a      	mov	r2, r3
 8001f34:	f7ff f9cb 	bl	80012ce <_lseek>
 8001f38:	1c43      	adds	r3, r0, #1
 8001f3a:	d102      	bne.n	8001f42 <_lseek_r+0x1e>
 8001f3c:	682b      	ldr	r3, [r5, #0]
 8001f3e:	b103      	cbz	r3, 8001f42 <_lseek_r+0x1e>
 8001f40:	6023      	str	r3, [r4, #0]
 8001f42:	bd38      	pop	{r3, r4, r5, pc}
 8001f44:	20000878 	.word	0x20000878

08001f48 <_read_r>:
 8001f48:	b538      	push	{r3, r4, r5, lr}
 8001f4a:	4d07      	ldr	r5, [pc, #28]	@ (8001f68 <_read_r+0x20>)
 8001f4c:	4604      	mov	r4, r0
 8001f4e:	4608      	mov	r0, r1
 8001f50:	4611      	mov	r1, r2
 8001f52:	2200      	movs	r2, #0
 8001f54:	602a      	str	r2, [r5, #0]
 8001f56:	461a      	mov	r2, r3
 8001f58:	f7ff f959 	bl	800120e <_read>
 8001f5c:	1c43      	adds	r3, r0, #1
 8001f5e:	d102      	bne.n	8001f66 <_read_r+0x1e>
 8001f60:	682b      	ldr	r3, [r5, #0]
 8001f62:	b103      	cbz	r3, 8001f66 <_read_r+0x1e>
 8001f64:	6023      	str	r3, [r4, #0]
 8001f66:	bd38      	pop	{r3, r4, r5, pc}
 8001f68:	20000878 	.word	0x20000878

08001f6c <_write_r>:
 8001f6c:	b538      	push	{r3, r4, r5, lr}
 8001f6e:	4d07      	ldr	r5, [pc, #28]	@ (8001f8c <_write_r+0x20>)
 8001f70:	4604      	mov	r4, r0
 8001f72:	4608      	mov	r0, r1
 8001f74:	4611      	mov	r1, r2
 8001f76:	2200      	movs	r2, #0
 8001f78:	602a      	str	r2, [r5, #0]
 8001f7a:	461a      	mov	r2, r3
 8001f7c:	f7ff f964 	bl	8001248 <_write>
 8001f80:	1c43      	adds	r3, r0, #1
 8001f82:	d102      	bne.n	8001f8a <_write_r+0x1e>
 8001f84:	682b      	ldr	r3, [r5, #0]
 8001f86:	b103      	cbz	r3, 8001f8a <_write_r+0x1e>
 8001f88:	6023      	str	r3, [r4, #0]
 8001f8a:	bd38      	pop	{r3, r4, r5, pc}
 8001f8c:	20000878 	.word	0x20000878

08001f90 <__errno>:
 8001f90:	4b01      	ldr	r3, [pc, #4]	@ (8001f98 <__errno+0x8>)
 8001f92:	6818      	ldr	r0, [r3, #0]
 8001f94:	4770      	bx	lr
 8001f96:	bf00      	nop
 8001f98:	20000010 	.word	0x20000010

08001f9c <__libc_init_array>:
 8001f9c:	b570      	push	{r4, r5, r6, lr}
 8001f9e:	4d0d      	ldr	r5, [pc, #52]	@ (8001fd4 <__libc_init_array+0x38>)
 8001fa0:	4c0d      	ldr	r4, [pc, #52]	@ (8001fd8 <__libc_init_array+0x3c>)
 8001fa2:	1b64      	subs	r4, r4, r5
 8001fa4:	10a4      	asrs	r4, r4, #2
 8001fa6:	2600      	movs	r6, #0
 8001fa8:	42a6      	cmp	r6, r4
 8001faa:	d109      	bne.n	8001fc0 <__libc_init_array+0x24>
 8001fac:	4d0b      	ldr	r5, [pc, #44]	@ (8001fdc <__libc_init_array+0x40>)
 8001fae:	4c0c      	ldr	r4, [pc, #48]	@ (8001fe0 <__libc_init_array+0x44>)
 8001fb0:	f002 f86a 	bl	8004088 <_init>
 8001fb4:	1b64      	subs	r4, r4, r5
 8001fb6:	10a4      	asrs	r4, r4, #2
 8001fb8:	2600      	movs	r6, #0
 8001fba:	42a6      	cmp	r6, r4
 8001fbc:	d105      	bne.n	8001fca <__libc_init_array+0x2e>
 8001fbe:	bd70      	pop	{r4, r5, r6, pc}
 8001fc0:	f855 3b04 	ldr.w	r3, [r5], #4
 8001fc4:	4798      	blx	r3
 8001fc6:	3601      	adds	r6, #1
 8001fc8:	e7ee      	b.n	8001fa8 <__libc_init_array+0xc>
 8001fca:	f855 3b04 	ldr.w	r3, [r5], #4
 8001fce:	4798      	blx	r3
 8001fd0:	3601      	adds	r6, #1
 8001fd2:	e7f2      	b.n	8001fba <__libc_init_array+0x1e>
 8001fd4:	0800443c 	.word	0x0800443c
 8001fd8:	0800443c 	.word	0x0800443c
 8001fdc:	0800443c 	.word	0x0800443c
 8001fe0:	08004440 	.word	0x08004440

08001fe4 <__retarget_lock_init_recursive>:
 8001fe4:	4770      	bx	lr

08001fe6 <__retarget_lock_acquire_recursive>:
 8001fe6:	4770      	bx	lr

08001fe8 <__retarget_lock_release_recursive>:
 8001fe8:	4770      	bx	lr

08001fea <quorem>:
 8001fea:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001fee:	6903      	ldr	r3, [r0, #16]
 8001ff0:	690c      	ldr	r4, [r1, #16]
 8001ff2:	42a3      	cmp	r3, r4
 8001ff4:	4607      	mov	r7, r0
 8001ff6:	db7e      	blt.n	80020f6 <quorem+0x10c>
 8001ff8:	3c01      	subs	r4, #1
 8001ffa:	f101 0814 	add.w	r8, r1, #20
 8001ffe:	00a3      	lsls	r3, r4, #2
 8002000:	f100 0514 	add.w	r5, r0, #20
 8002004:	9300      	str	r3, [sp, #0]
 8002006:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800200a:	9301      	str	r3, [sp, #4]
 800200c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002010:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002014:	3301      	adds	r3, #1
 8002016:	429a      	cmp	r2, r3
 8002018:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800201c:	fbb2 f6f3 	udiv	r6, r2, r3
 8002020:	d32e      	bcc.n	8002080 <quorem+0x96>
 8002022:	f04f 0a00 	mov.w	sl, #0
 8002026:	46c4      	mov	ip, r8
 8002028:	46ae      	mov	lr, r5
 800202a:	46d3      	mov	fp, sl
 800202c:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002030:	b298      	uxth	r0, r3
 8002032:	fb06 a000 	mla	r0, r6, r0, sl
 8002036:	0c02      	lsrs	r2, r0, #16
 8002038:	0c1b      	lsrs	r3, r3, #16
 800203a:	fb06 2303 	mla	r3, r6, r3, r2
 800203e:	f8de 2000 	ldr.w	r2, [lr]
 8002042:	b280      	uxth	r0, r0
 8002044:	b292      	uxth	r2, r2
 8002046:	1a12      	subs	r2, r2, r0
 8002048:	445a      	add	r2, fp
 800204a:	f8de 0000 	ldr.w	r0, [lr]
 800204e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002052:	b29b      	uxth	r3, r3
 8002054:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002058:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800205c:	b292      	uxth	r2, r2
 800205e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002062:	45e1      	cmp	r9, ip
 8002064:	f84e 2b04 	str.w	r2, [lr], #4
 8002068:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800206c:	d2de      	bcs.n	800202c <quorem+0x42>
 800206e:	9b00      	ldr	r3, [sp, #0]
 8002070:	58eb      	ldr	r3, [r5, r3]
 8002072:	b92b      	cbnz	r3, 8002080 <quorem+0x96>
 8002074:	9b01      	ldr	r3, [sp, #4]
 8002076:	3b04      	subs	r3, #4
 8002078:	429d      	cmp	r5, r3
 800207a:	461a      	mov	r2, r3
 800207c:	d32f      	bcc.n	80020de <quorem+0xf4>
 800207e:	613c      	str	r4, [r7, #16]
 8002080:	4638      	mov	r0, r7
 8002082:	f001 f97f 	bl	8003384 <__mcmp>
 8002086:	2800      	cmp	r0, #0
 8002088:	db25      	blt.n	80020d6 <quorem+0xec>
 800208a:	4629      	mov	r1, r5
 800208c:	2000      	movs	r0, #0
 800208e:	f858 2b04 	ldr.w	r2, [r8], #4
 8002092:	f8d1 c000 	ldr.w	ip, [r1]
 8002096:	fa1f fe82 	uxth.w	lr, r2
 800209a:	fa1f f38c 	uxth.w	r3, ip
 800209e:	eba3 030e 	sub.w	r3, r3, lr
 80020a2:	4403      	add	r3, r0
 80020a4:	0c12      	lsrs	r2, r2, #16
 80020a6:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80020aa:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80020ae:	b29b      	uxth	r3, r3
 80020b0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80020b4:	45c1      	cmp	r9, r8
 80020b6:	f841 3b04 	str.w	r3, [r1], #4
 80020ba:	ea4f 4022 	mov.w	r0, r2, asr #16
 80020be:	d2e6      	bcs.n	800208e <quorem+0xa4>
 80020c0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80020c4:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80020c8:	b922      	cbnz	r2, 80020d4 <quorem+0xea>
 80020ca:	3b04      	subs	r3, #4
 80020cc:	429d      	cmp	r5, r3
 80020ce:	461a      	mov	r2, r3
 80020d0:	d30b      	bcc.n	80020ea <quorem+0x100>
 80020d2:	613c      	str	r4, [r7, #16]
 80020d4:	3601      	adds	r6, #1
 80020d6:	4630      	mov	r0, r6
 80020d8:	b003      	add	sp, #12
 80020da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80020de:	6812      	ldr	r2, [r2, #0]
 80020e0:	3b04      	subs	r3, #4
 80020e2:	2a00      	cmp	r2, #0
 80020e4:	d1cb      	bne.n	800207e <quorem+0x94>
 80020e6:	3c01      	subs	r4, #1
 80020e8:	e7c6      	b.n	8002078 <quorem+0x8e>
 80020ea:	6812      	ldr	r2, [r2, #0]
 80020ec:	3b04      	subs	r3, #4
 80020ee:	2a00      	cmp	r2, #0
 80020f0:	d1ef      	bne.n	80020d2 <quorem+0xe8>
 80020f2:	3c01      	subs	r4, #1
 80020f4:	e7ea      	b.n	80020cc <quorem+0xe2>
 80020f6:	2000      	movs	r0, #0
 80020f8:	e7ee      	b.n	80020d8 <quorem+0xee>
 80020fa:	0000      	movs	r0, r0
 80020fc:	0000      	movs	r0, r0
	...

08002100 <_dtoa_r>:
 8002100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002104:	69c7      	ldr	r7, [r0, #28]
 8002106:	b097      	sub	sp, #92	@ 0x5c
 8002108:	ed8d 0b04 	vstr	d0, [sp, #16]
 800210c:	ec55 4b10 	vmov	r4, r5, d0
 8002110:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 8002112:	9107      	str	r1, [sp, #28]
 8002114:	4681      	mov	r9, r0
 8002116:	920c      	str	r2, [sp, #48]	@ 0x30
 8002118:	9311      	str	r3, [sp, #68]	@ 0x44
 800211a:	b97f      	cbnz	r7, 800213c <_dtoa_r+0x3c>
 800211c:	2010      	movs	r0, #16
 800211e:	f000 fe09 	bl	8002d34 <malloc>
 8002122:	4602      	mov	r2, r0
 8002124:	f8c9 001c 	str.w	r0, [r9, #28]
 8002128:	b920      	cbnz	r0, 8002134 <_dtoa_r+0x34>
 800212a:	4ba9      	ldr	r3, [pc, #676]	@ (80023d0 <_dtoa_r+0x2d0>)
 800212c:	21ef      	movs	r1, #239	@ 0xef
 800212e:	48a9      	ldr	r0, [pc, #676]	@ (80023d4 <_dtoa_r+0x2d4>)
 8002130:	f001 fc6c 	bl	8003a0c <__assert_func>
 8002134:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002138:	6007      	str	r7, [r0, #0]
 800213a:	60c7      	str	r7, [r0, #12]
 800213c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002140:	6819      	ldr	r1, [r3, #0]
 8002142:	b159      	cbz	r1, 800215c <_dtoa_r+0x5c>
 8002144:	685a      	ldr	r2, [r3, #4]
 8002146:	604a      	str	r2, [r1, #4]
 8002148:	2301      	movs	r3, #1
 800214a:	4093      	lsls	r3, r2
 800214c:	608b      	str	r3, [r1, #8]
 800214e:	4648      	mov	r0, r9
 8002150:	f000 fee6 	bl	8002f20 <_Bfree>
 8002154:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002158:	2200      	movs	r2, #0
 800215a:	601a      	str	r2, [r3, #0]
 800215c:	1e2b      	subs	r3, r5, #0
 800215e:	bfb9      	ittee	lt
 8002160:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8002164:	9305      	strlt	r3, [sp, #20]
 8002166:	2300      	movge	r3, #0
 8002168:	6033      	strge	r3, [r6, #0]
 800216a:	9f05      	ldr	r7, [sp, #20]
 800216c:	4b9a      	ldr	r3, [pc, #616]	@ (80023d8 <_dtoa_r+0x2d8>)
 800216e:	bfbc      	itt	lt
 8002170:	2201      	movlt	r2, #1
 8002172:	6032      	strlt	r2, [r6, #0]
 8002174:	43bb      	bics	r3, r7
 8002176:	d112      	bne.n	800219e <_dtoa_r+0x9e>
 8002178:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800217a:	f242 730f 	movw	r3, #9999	@ 0x270f
 800217e:	6013      	str	r3, [r2, #0]
 8002180:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8002184:	4323      	orrs	r3, r4
 8002186:	f000 855a 	beq.w	8002c3e <_dtoa_r+0xb3e>
 800218a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800218c:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 80023ec <_dtoa_r+0x2ec>
 8002190:	2b00      	cmp	r3, #0
 8002192:	f000 855c 	beq.w	8002c4e <_dtoa_r+0xb4e>
 8002196:	f10a 0303 	add.w	r3, sl, #3
 800219a:	f000 bd56 	b.w	8002c4a <_dtoa_r+0xb4a>
 800219e:	ed9d 7b04 	vldr	d7, [sp, #16]
 80021a2:	2200      	movs	r2, #0
 80021a4:	ec51 0b17 	vmov	r0, r1, d7
 80021a8:	2300      	movs	r3, #0
 80021aa:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 80021ae:	f7fe fc93 	bl	8000ad8 <__aeabi_dcmpeq>
 80021b2:	4680      	mov	r8, r0
 80021b4:	b158      	cbz	r0, 80021ce <_dtoa_r+0xce>
 80021b6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80021b8:	2301      	movs	r3, #1
 80021ba:	6013      	str	r3, [r2, #0]
 80021bc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80021be:	b113      	cbz	r3, 80021c6 <_dtoa_r+0xc6>
 80021c0:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80021c2:	4b86      	ldr	r3, [pc, #536]	@ (80023dc <_dtoa_r+0x2dc>)
 80021c4:	6013      	str	r3, [r2, #0]
 80021c6:	f8df a228 	ldr.w	sl, [pc, #552]	@ 80023f0 <_dtoa_r+0x2f0>
 80021ca:	f000 bd40 	b.w	8002c4e <_dtoa_r+0xb4e>
 80021ce:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 80021d2:	aa14      	add	r2, sp, #80	@ 0x50
 80021d4:	a915      	add	r1, sp, #84	@ 0x54
 80021d6:	4648      	mov	r0, r9
 80021d8:	f001 f984 	bl	80034e4 <__d2b>
 80021dc:	f3c7 560a 	ubfx	r6, r7, #20, #11
 80021e0:	9002      	str	r0, [sp, #8]
 80021e2:	2e00      	cmp	r6, #0
 80021e4:	d078      	beq.n	80022d8 <_dtoa_r+0x1d8>
 80021e6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80021e8:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 80021ec:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80021f0:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80021f4:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80021f8:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80021fc:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002200:	4619      	mov	r1, r3
 8002202:	2200      	movs	r2, #0
 8002204:	4b76      	ldr	r3, [pc, #472]	@ (80023e0 <_dtoa_r+0x2e0>)
 8002206:	f7fe f847 	bl	8000298 <__aeabi_dsub>
 800220a:	a36b      	add	r3, pc, #428	@ (adr r3, 80023b8 <_dtoa_r+0x2b8>)
 800220c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002210:	f7fe f9fa 	bl	8000608 <__aeabi_dmul>
 8002214:	a36a      	add	r3, pc, #424	@ (adr r3, 80023c0 <_dtoa_r+0x2c0>)
 8002216:	e9d3 2300 	ldrd	r2, r3, [r3]
 800221a:	f7fe f83f 	bl	800029c <__adddf3>
 800221e:	4604      	mov	r4, r0
 8002220:	4630      	mov	r0, r6
 8002222:	460d      	mov	r5, r1
 8002224:	f7fe f986 	bl	8000534 <__aeabi_i2d>
 8002228:	a367      	add	r3, pc, #412	@ (adr r3, 80023c8 <_dtoa_r+0x2c8>)
 800222a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800222e:	f7fe f9eb 	bl	8000608 <__aeabi_dmul>
 8002232:	4602      	mov	r2, r0
 8002234:	460b      	mov	r3, r1
 8002236:	4620      	mov	r0, r4
 8002238:	4629      	mov	r1, r5
 800223a:	f7fe f82f 	bl	800029c <__adddf3>
 800223e:	4604      	mov	r4, r0
 8002240:	460d      	mov	r5, r1
 8002242:	f7fe fc91 	bl	8000b68 <__aeabi_d2iz>
 8002246:	2200      	movs	r2, #0
 8002248:	4607      	mov	r7, r0
 800224a:	2300      	movs	r3, #0
 800224c:	4620      	mov	r0, r4
 800224e:	4629      	mov	r1, r5
 8002250:	f7fe fc4c 	bl	8000aec <__aeabi_dcmplt>
 8002254:	b140      	cbz	r0, 8002268 <_dtoa_r+0x168>
 8002256:	4638      	mov	r0, r7
 8002258:	f7fe f96c 	bl	8000534 <__aeabi_i2d>
 800225c:	4622      	mov	r2, r4
 800225e:	462b      	mov	r3, r5
 8002260:	f7fe fc3a 	bl	8000ad8 <__aeabi_dcmpeq>
 8002264:	b900      	cbnz	r0, 8002268 <_dtoa_r+0x168>
 8002266:	3f01      	subs	r7, #1
 8002268:	2f16      	cmp	r7, #22
 800226a:	d852      	bhi.n	8002312 <_dtoa_r+0x212>
 800226c:	4b5d      	ldr	r3, [pc, #372]	@ (80023e4 <_dtoa_r+0x2e4>)
 800226e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002272:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002276:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800227a:	f7fe fc37 	bl	8000aec <__aeabi_dcmplt>
 800227e:	2800      	cmp	r0, #0
 8002280:	d049      	beq.n	8002316 <_dtoa_r+0x216>
 8002282:	3f01      	subs	r7, #1
 8002284:	2300      	movs	r3, #0
 8002286:	9310      	str	r3, [sp, #64]	@ 0x40
 8002288:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800228a:	1b9b      	subs	r3, r3, r6
 800228c:	1e5a      	subs	r2, r3, #1
 800228e:	bf45      	ittet	mi
 8002290:	f1c3 0301 	rsbmi	r3, r3, #1
 8002294:	9300      	strmi	r3, [sp, #0]
 8002296:	2300      	movpl	r3, #0
 8002298:	2300      	movmi	r3, #0
 800229a:	9206      	str	r2, [sp, #24]
 800229c:	bf54      	ite	pl
 800229e:	9300      	strpl	r3, [sp, #0]
 80022a0:	9306      	strmi	r3, [sp, #24]
 80022a2:	2f00      	cmp	r7, #0
 80022a4:	db39      	blt.n	800231a <_dtoa_r+0x21a>
 80022a6:	9b06      	ldr	r3, [sp, #24]
 80022a8:	970d      	str	r7, [sp, #52]	@ 0x34
 80022aa:	443b      	add	r3, r7
 80022ac:	9306      	str	r3, [sp, #24]
 80022ae:	2300      	movs	r3, #0
 80022b0:	9308      	str	r3, [sp, #32]
 80022b2:	9b07      	ldr	r3, [sp, #28]
 80022b4:	2b09      	cmp	r3, #9
 80022b6:	d863      	bhi.n	8002380 <_dtoa_r+0x280>
 80022b8:	2b05      	cmp	r3, #5
 80022ba:	bfc4      	itt	gt
 80022bc:	3b04      	subgt	r3, #4
 80022be:	9307      	strgt	r3, [sp, #28]
 80022c0:	9b07      	ldr	r3, [sp, #28]
 80022c2:	f1a3 0302 	sub.w	r3, r3, #2
 80022c6:	bfcc      	ite	gt
 80022c8:	2400      	movgt	r4, #0
 80022ca:	2401      	movle	r4, #1
 80022cc:	2b03      	cmp	r3, #3
 80022ce:	d863      	bhi.n	8002398 <_dtoa_r+0x298>
 80022d0:	e8df f003 	tbb	[pc, r3]
 80022d4:	2b375452 	.word	0x2b375452
 80022d8:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 80022dc:	441e      	add	r6, r3
 80022de:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80022e2:	2b20      	cmp	r3, #32
 80022e4:	bfc1      	itttt	gt
 80022e6:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 80022ea:	409f      	lslgt	r7, r3
 80022ec:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80022f0:	fa24 f303 	lsrgt.w	r3, r4, r3
 80022f4:	bfd6      	itet	le
 80022f6:	f1c3 0320 	rsble	r3, r3, #32
 80022fa:	ea47 0003 	orrgt.w	r0, r7, r3
 80022fe:	fa04 f003 	lslle.w	r0, r4, r3
 8002302:	f7fe f907 	bl	8000514 <__aeabi_ui2d>
 8002306:	2201      	movs	r2, #1
 8002308:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800230c:	3e01      	subs	r6, #1
 800230e:	9212      	str	r2, [sp, #72]	@ 0x48
 8002310:	e776      	b.n	8002200 <_dtoa_r+0x100>
 8002312:	2301      	movs	r3, #1
 8002314:	e7b7      	b.n	8002286 <_dtoa_r+0x186>
 8002316:	9010      	str	r0, [sp, #64]	@ 0x40
 8002318:	e7b6      	b.n	8002288 <_dtoa_r+0x188>
 800231a:	9b00      	ldr	r3, [sp, #0]
 800231c:	1bdb      	subs	r3, r3, r7
 800231e:	9300      	str	r3, [sp, #0]
 8002320:	427b      	negs	r3, r7
 8002322:	9308      	str	r3, [sp, #32]
 8002324:	2300      	movs	r3, #0
 8002326:	930d      	str	r3, [sp, #52]	@ 0x34
 8002328:	e7c3      	b.n	80022b2 <_dtoa_r+0x1b2>
 800232a:	2301      	movs	r3, #1
 800232c:	9309      	str	r3, [sp, #36]	@ 0x24
 800232e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002330:	eb07 0b03 	add.w	fp, r7, r3
 8002334:	f10b 0301 	add.w	r3, fp, #1
 8002338:	2b01      	cmp	r3, #1
 800233a:	9303      	str	r3, [sp, #12]
 800233c:	bfb8      	it	lt
 800233e:	2301      	movlt	r3, #1
 8002340:	e006      	b.n	8002350 <_dtoa_r+0x250>
 8002342:	2301      	movs	r3, #1
 8002344:	9309      	str	r3, [sp, #36]	@ 0x24
 8002346:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002348:	2b00      	cmp	r3, #0
 800234a:	dd28      	ble.n	800239e <_dtoa_r+0x29e>
 800234c:	469b      	mov	fp, r3
 800234e:	9303      	str	r3, [sp, #12]
 8002350:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8002354:	2100      	movs	r1, #0
 8002356:	2204      	movs	r2, #4
 8002358:	f102 0514 	add.w	r5, r2, #20
 800235c:	429d      	cmp	r5, r3
 800235e:	d926      	bls.n	80023ae <_dtoa_r+0x2ae>
 8002360:	6041      	str	r1, [r0, #4]
 8002362:	4648      	mov	r0, r9
 8002364:	f000 fd9c 	bl	8002ea0 <_Balloc>
 8002368:	4682      	mov	sl, r0
 800236a:	2800      	cmp	r0, #0
 800236c:	d142      	bne.n	80023f4 <_dtoa_r+0x2f4>
 800236e:	4b1e      	ldr	r3, [pc, #120]	@ (80023e8 <_dtoa_r+0x2e8>)
 8002370:	4602      	mov	r2, r0
 8002372:	f240 11af 	movw	r1, #431	@ 0x1af
 8002376:	e6da      	b.n	800212e <_dtoa_r+0x2e>
 8002378:	2300      	movs	r3, #0
 800237a:	e7e3      	b.n	8002344 <_dtoa_r+0x244>
 800237c:	2300      	movs	r3, #0
 800237e:	e7d5      	b.n	800232c <_dtoa_r+0x22c>
 8002380:	2401      	movs	r4, #1
 8002382:	2300      	movs	r3, #0
 8002384:	9307      	str	r3, [sp, #28]
 8002386:	9409      	str	r4, [sp, #36]	@ 0x24
 8002388:	f04f 3bff 	mov.w	fp, #4294967295
 800238c:	2200      	movs	r2, #0
 800238e:	f8cd b00c 	str.w	fp, [sp, #12]
 8002392:	2312      	movs	r3, #18
 8002394:	920c      	str	r2, [sp, #48]	@ 0x30
 8002396:	e7db      	b.n	8002350 <_dtoa_r+0x250>
 8002398:	2301      	movs	r3, #1
 800239a:	9309      	str	r3, [sp, #36]	@ 0x24
 800239c:	e7f4      	b.n	8002388 <_dtoa_r+0x288>
 800239e:	f04f 0b01 	mov.w	fp, #1
 80023a2:	f8cd b00c 	str.w	fp, [sp, #12]
 80023a6:	465b      	mov	r3, fp
 80023a8:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 80023ac:	e7d0      	b.n	8002350 <_dtoa_r+0x250>
 80023ae:	3101      	adds	r1, #1
 80023b0:	0052      	lsls	r2, r2, #1
 80023b2:	e7d1      	b.n	8002358 <_dtoa_r+0x258>
 80023b4:	f3af 8000 	nop.w
 80023b8:	636f4361 	.word	0x636f4361
 80023bc:	3fd287a7 	.word	0x3fd287a7
 80023c0:	8b60c8b3 	.word	0x8b60c8b3
 80023c4:	3fc68a28 	.word	0x3fc68a28
 80023c8:	509f79fb 	.word	0x509f79fb
 80023cc:	3fd34413 	.word	0x3fd34413
 80023d0:	08004104 	.word	0x08004104
 80023d4:	0800411b 	.word	0x0800411b
 80023d8:	7ff00000 	.word	0x7ff00000
 80023dc:	080040d4 	.word	0x080040d4
 80023e0:	3ff80000 	.word	0x3ff80000
 80023e4:	08004268 	.word	0x08004268
 80023e8:	08004173 	.word	0x08004173
 80023ec:	08004100 	.word	0x08004100
 80023f0:	080040d3 	.word	0x080040d3
 80023f4:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80023f8:	6018      	str	r0, [r3, #0]
 80023fa:	9b03      	ldr	r3, [sp, #12]
 80023fc:	2b0e      	cmp	r3, #14
 80023fe:	f200 80a1 	bhi.w	8002544 <_dtoa_r+0x444>
 8002402:	2c00      	cmp	r4, #0
 8002404:	f000 809e 	beq.w	8002544 <_dtoa_r+0x444>
 8002408:	2f00      	cmp	r7, #0
 800240a:	dd33      	ble.n	8002474 <_dtoa_r+0x374>
 800240c:	4b9c      	ldr	r3, [pc, #624]	@ (8002680 <_dtoa_r+0x580>)
 800240e:	f007 020f 	and.w	r2, r7, #15
 8002412:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002416:	ed93 7b00 	vldr	d7, [r3]
 800241a:	05f8      	lsls	r0, r7, #23
 800241c:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 8002420:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002424:	d516      	bpl.n	8002454 <_dtoa_r+0x354>
 8002426:	4b97      	ldr	r3, [pc, #604]	@ (8002684 <_dtoa_r+0x584>)
 8002428:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800242c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002430:	f7fe fa14 	bl	800085c <__aeabi_ddiv>
 8002434:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002438:	f004 040f 	and.w	r4, r4, #15
 800243c:	2603      	movs	r6, #3
 800243e:	4d91      	ldr	r5, [pc, #580]	@ (8002684 <_dtoa_r+0x584>)
 8002440:	b954      	cbnz	r4, 8002458 <_dtoa_r+0x358>
 8002442:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002446:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800244a:	f7fe fa07 	bl	800085c <__aeabi_ddiv>
 800244e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002452:	e028      	b.n	80024a6 <_dtoa_r+0x3a6>
 8002454:	2602      	movs	r6, #2
 8002456:	e7f2      	b.n	800243e <_dtoa_r+0x33e>
 8002458:	07e1      	lsls	r1, r4, #31
 800245a:	d508      	bpl.n	800246e <_dtoa_r+0x36e>
 800245c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8002460:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002464:	f7fe f8d0 	bl	8000608 <__aeabi_dmul>
 8002468:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800246c:	3601      	adds	r6, #1
 800246e:	1064      	asrs	r4, r4, #1
 8002470:	3508      	adds	r5, #8
 8002472:	e7e5      	b.n	8002440 <_dtoa_r+0x340>
 8002474:	f000 80af 	beq.w	80025d6 <_dtoa_r+0x4d6>
 8002478:	427c      	negs	r4, r7
 800247a:	4b81      	ldr	r3, [pc, #516]	@ (8002680 <_dtoa_r+0x580>)
 800247c:	4d81      	ldr	r5, [pc, #516]	@ (8002684 <_dtoa_r+0x584>)
 800247e:	f004 020f 	and.w	r2, r4, #15
 8002482:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002486:	e9d3 2300 	ldrd	r2, r3, [r3]
 800248a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800248e:	f7fe f8bb 	bl	8000608 <__aeabi_dmul>
 8002492:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002496:	1124      	asrs	r4, r4, #4
 8002498:	2300      	movs	r3, #0
 800249a:	2602      	movs	r6, #2
 800249c:	2c00      	cmp	r4, #0
 800249e:	f040 808f 	bne.w	80025c0 <_dtoa_r+0x4c0>
 80024a2:	2b00      	cmp	r3, #0
 80024a4:	d1d3      	bne.n	800244e <_dtoa_r+0x34e>
 80024a6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80024a8:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 80024ac:	2b00      	cmp	r3, #0
 80024ae:	f000 8094 	beq.w	80025da <_dtoa_r+0x4da>
 80024b2:	4b75      	ldr	r3, [pc, #468]	@ (8002688 <_dtoa_r+0x588>)
 80024b4:	2200      	movs	r2, #0
 80024b6:	4620      	mov	r0, r4
 80024b8:	4629      	mov	r1, r5
 80024ba:	f7fe fb17 	bl	8000aec <__aeabi_dcmplt>
 80024be:	2800      	cmp	r0, #0
 80024c0:	f000 808b 	beq.w	80025da <_dtoa_r+0x4da>
 80024c4:	9b03      	ldr	r3, [sp, #12]
 80024c6:	2b00      	cmp	r3, #0
 80024c8:	f000 8087 	beq.w	80025da <_dtoa_r+0x4da>
 80024cc:	f1bb 0f00 	cmp.w	fp, #0
 80024d0:	dd34      	ble.n	800253c <_dtoa_r+0x43c>
 80024d2:	4620      	mov	r0, r4
 80024d4:	4b6d      	ldr	r3, [pc, #436]	@ (800268c <_dtoa_r+0x58c>)
 80024d6:	2200      	movs	r2, #0
 80024d8:	4629      	mov	r1, r5
 80024da:	f7fe f895 	bl	8000608 <__aeabi_dmul>
 80024de:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80024e2:	f107 38ff 	add.w	r8, r7, #4294967295
 80024e6:	3601      	adds	r6, #1
 80024e8:	465c      	mov	r4, fp
 80024ea:	4630      	mov	r0, r6
 80024ec:	f7fe f822 	bl	8000534 <__aeabi_i2d>
 80024f0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80024f4:	f7fe f888 	bl	8000608 <__aeabi_dmul>
 80024f8:	4b65      	ldr	r3, [pc, #404]	@ (8002690 <_dtoa_r+0x590>)
 80024fa:	2200      	movs	r2, #0
 80024fc:	f7fd fece 	bl	800029c <__adddf3>
 8002500:	4605      	mov	r5, r0
 8002502:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002506:	2c00      	cmp	r4, #0
 8002508:	d16a      	bne.n	80025e0 <_dtoa_r+0x4e0>
 800250a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800250e:	4b61      	ldr	r3, [pc, #388]	@ (8002694 <_dtoa_r+0x594>)
 8002510:	2200      	movs	r2, #0
 8002512:	f7fd fec1 	bl	8000298 <__aeabi_dsub>
 8002516:	4602      	mov	r2, r0
 8002518:	460b      	mov	r3, r1
 800251a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800251e:	462a      	mov	r2, r5
 8002520:	4633      	mov	r3, r6
 8002522:	f7fe fb01 	bl	8000b28 <__aeabi_dcmpgt>
 8002526:	2800      	cmp	r0, #0
 8002528:	f040 8298 	bne.w	8002a5c <_dtoa_r+0x95c>
 800252c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002530:	462a      	mov	r2, r5
 8002532:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002536:	f7fe fad9 	bl	8000aec <__aeabi_dcmplt>
 800253a:	bb38      	cbnz	r0, 800258c <_dtoa_r+0x48c>
 800253c:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 8002540:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002544:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002546:	2b00      	cmp	r3, #0
 8002548:	f2c0 8157 	blt.w	80027fa <_dtoa_r+0x6fa>
 800254c:	2f0e      	cmp	r7, #14
 800254e:	f300 8154 	bgt.w	80027fa <_dtoa_r+0x6fa>
 8002552:	4b4b      	ldr	r3, [pc, #300]	@ (8002680 <_dtoa_r+0x580>)
 8002554:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002558:	ed93 7b00 	vldr	d7, [r3]
 800255c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800255e:	2b00      	cmp	r3, #0
 8002560:	ed8d 7b00 	vstr	d7, [sp]
 8002564:	f280 80e5 	bge.w	8002732 <_dtoa_r+0x632>
 8002568:	9b03      	ldr	r3, [sp, #12]
 800256a:	2b00      	cmp	r3, #0
 800256c:	f300 80e1 	bgt.w	8002732 <_dtoa_r+0x632>
 8002570:	d10c      	bne.n	800258c <_dtoa_r+0x48c>
 8002572:	4b48      	ldr	r3, [pc, #288]	@ (8002694 <_dtoa_r+0x594>)
 8002574:	2200      	movs	r2, #0
 8002576:	ec51 0b17 	vmov	r0, r1, d7
 800257a:	f7fe f845 	bl	8000608 <__aeabi_dmul>
 800257e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002582:	f7fe fac7 	bl	8000b14 <__aeabi_dcmpge>
 8002586:	2800      	cmp	r0, #0
 8002588:	f000 8266 	beq.w	8002a58 <_dtoa_r+0x958>
 800258c:	2400      	movs	r4, #0
 800258e:	4625      	mov	r5, r4
 8002590:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002592:	4656      	mov	r6, sl
 8002594:	ea6f 0803 	mvn.w	r8, r3
 8002598:	2700      	movs	r7, #0
 800259a:	4621      	mov	r1, r4
 800259c:	4648      	mov	r0, r9
 800259e:	f000 fcbf 	bl	8002f20 <_Bfree>
 80025a2:	2d00      	cmp	r5, #0
 80025a4:	f000 80bd 	beq.w	8002722 <_dtoa_r+0x622>
 80025a8:	b12f      	cbz	r7, 80025b6 <_dtoa_r+0x4b6>
 80025aa:	42af      	cmp	r7, r5
 80025ac:	d003      	beq.n	80025b6 <_dtoa_r+0x4b6>
 80025ae:	4639      	mov	r1, r7
 80025b0:	4648      	mov	r0, r9
 80025b2:	f000 fcb5 	bl	8002f20 <_Bfree>
 80025b6:	4629      	mov	r1, r5
 80025b8:	4648      	mov	r0, r9
 80025ba:	f000 fcb1 	bl	8002f20 <_Bfree>
 80025be:	e0b0      	b.n	8002722 <_dtoa_r+0x622>
 80025c0:	07e2      	lsls	r2, r4, #31
 80025c2:	d505      	bpl.n	80025d0 <_dtoa_r+0x4d0>
 80025c4:	e9d5 2300 	ldrd	r2, r3, [r5]
 80025c8:	f7fe f81e 	bl	8000608 <__aeabi_dmul>
 80025cc:	3601      	adds	r6, #1
 80025ce:	2301      	movs	r3, #1
 80025d0:	1064      	asrs	r4, r4, #1
 80025d2:	3508      	adds	r5, #8
 80025d4:	e762      	b.n	800249c <_dtoa_r+0x39c>
 80025d6:	2602      	movs	r6, #2
 80025d8:	e765      	b.n	80024a6 <_dtoa_r+0x3a6>
 80025da:	9c03      	ldr	r4, [sp, #12]
 80025dc:	46b8      	mov	r8, r7
 80025de:	e784      	b.n	80024ea <_dtoa_r+0x3ea>
 80025e0:	4b27      	ldr	r3, [pc, #156]	@ (8002680 <_dtoa_r+0x580>)
 80025e2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80025e4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80025e8:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80025ec:	4454      	add	r4, sl
 80025ee:	2900      	cmp	r1, #0
 80025f0:	d054      	beq.n	800269c <_dtoa_r+0x59c>
 80025f2:	4929      	ldr	r1, [pc, #164]	@ (8002698 <_dtoa_r+0x598>)
 80025f4:	2000      	movs	r0, #0
 80025f6:	f7fe f931 	bl	800085c <__aeabi_ddiv>
 80025fa:	4633      	mov	r3, r6
 80025fc:	462a      	mov	r2, r5
 80025fe:	f7fd fe4b 	bl	8000298 <__aeabi_dsub>
 8002602:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002606:	4656      	mov	r6, sl
 8002608:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800260c:	f7fe faac 	bl	8000b68 <__aeabi_d2iz>
 8002610:	4605      	mov	r5, r0
 8002612:	f7fd ff8f 	bl	8000534 <__aeabi_i2d>
 8002616:	4602      	mov	r2, r0
 8002618:	460b      	mov	r3, r1
 800261a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800261e:	f7fd fe3b 	bl	8000298 <__aeabi_dsub>
 8002622:	3530      	adds	r5, #48	@ 0x30
 8002624:	4602      	mov	r2, r0
 8002626:	460b      	mov	r3, r1
 8002628:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800262c:	f806 5b01 	strb.w	r5, [r6], #1
 8002630:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002634:	f7fe fa5a 	bl	8000aec <__aeabi_dcmplt>
 8002638:	2800      	cmp	r0, #0
 800263a:	d172      	bne.n	8002722 <_dtoa_r+0x622>
 800263c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002640:	4911      	ldr	r1, [pc, #68]	@ (8002688 <_dtoa_r+0x588>)
 8002642:	2000      	movs	r0, #0
 8002644:	f7fd fe28 	bl	8000298 <__aeabi_dsub>
 8002648:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 800264c:	f7fe fa4e 	bl	8000aec <__aeabi_dcmplt>
 8002650:	2800      	cmp	r0, #0
 8002652:	f040 80b4 	bne.w	80027be <_dtoa_r+0x6be>
 8002656:	42a6      	cmp	r6, r4
 8002658:	f43f af70 	beq.w	800253c <_dtoa_r+0x43c>
 800265c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8002660:	4b0a      	ldr	r3, [pc, #40]	@ (800268c <_dtoa_r+0x58c>)
 8002662:	2200      	movs	r2, #0
 8002664:	f7fd ffd0 	bl	8000608 <__aeabi_dmul>
 8002668:	4b08      	ldr	r3, [pc, #32]	@ (800268c <_dtoa_r+0x58c>)
 800266a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 800266e:	2200      	movs	r2, #0
 8002670:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002674:	f7fd ffc8 	bl	8000608 <__aeabi_dmul>
 8002678:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800267c:	e7c4      	b.n	8002608 <_dtoa_r+0x508>
 800267e:	bf00      	nop
 8002680:	08004268 	.word	0x08004268
 8002684:	08004240 	.word	0x08004240
 8002688:	3ff00000 	.word	0x3ff00000
 800268c:	40240000 	.word	0x40240000
 8002690:	401c0000 	.word	0x401c0000
 8002694:	40140000 	.word	0x40140000
 8002698:	3fe00000 	.word	0x3fe00000
 800269c:	4631      	mov	r1, r6
 800269e:	4628      	mov	r0, r5
 80026a0:	f7fd ffb2 	bl	8000608 <__aeabi_dmul>
 80026a4:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80026a8:	9413      	str	r4, [sp, #76]	@ 0x4c
 80026aa:	4656      	mov	r6, sl
 80026ac:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80026b0:	f7fe fa5a 	bl	8000b68 <__aeabi_d2iz>
 80026b4:	4605      	mov	r5, r0
 80026b6:	f7fd ff3d 	bl	8000534 <__aeabi_i2d>
 80026ba:	4602      	mov	r2, r0
 80026bc:	460b      	mov	r3, r1
 80026be:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80026c2:	f7fd fde9 	bl	8000298 <__aeabi_dsub>
 80026c6:	3530      	adds	r5, #48	@ 0x30
 80026c8:	f806 5b01 	strb.w	r5, [r6], #1
 80026cc:	4602      	mov	r2, r0
 80026ce:	460b      	mov	r3, r1
 80026d0:	42a6      	cmp	r6, r4
 80026d2:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80026d6:	f04f 0200 	mov.w	r2, #0
 80026da:	d124      	bne.n	8002726 <_dtoa_r+0x626>
 80026dc:	4baf      	ldr	r3, [pc, #700]	@ (800299c <_dtoa_r+0x89c>)
 80026de:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 80026e2:	f7fd fddb 	bl	800029c <__adddf3>
 80026e6:	4602      	mov	r2, r0
 80026e8:	460b      	mov	r3, r1
 80026ea:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80026ee:	f7fe fa1b 	bl	8000b28 <__aeabi_dcmpgt>
 80026f2:	2800      	cmp	r0, #0
 80026f4:	d163      	bne.n	80027be <_dtoa_r+0x6be>
 80026f6:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80026fa:	49a8      	ldr	r1, [pc, #672]	@ (800299c <_dtoa_r+0x89c>)
 80026fc:	2000      	movs	r0, #0
 80026fe:	f7fd fdcb 	bl	8000298 <__aeabi_dsub>
 8002702:	4602      	mov	r2, r0
 8002704:	460b      	mov	r3, r1
 8002706:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800270a:	f7fe f9ef 	bl	8000aec <__aeabi_dcmplt>
 800270e:	2800      	cmp	r0, #0
 8002710:	f43f af14 	beq.w	800253c <_dtoa_r+0x43c>
 8002714:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8002716:	1e73      	subs	r3, r6, #1
 8002718:	9313      	str	r3, [sp, #76]	@ 0x4c
 800271a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800271e:	2b30      	cmp	r3, #48	@ 0x30
 8002720:	d0f8      	beq.n	8002714 <_dtoa_r+0x614>
 8002722:	4647      	mov	r7, r8
 8002724:	e03b      	b.n	800279e <_dtoa_r+0x69e>
 8002726:	4b9e      	ldr	r3, [pc, #632]	@ (80029a0 <_dtoa_r+0x8a0>)
 8002728:	f7fd ff6e 	bl	8000608 <__aeabi_dmul>
 800272c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002730:	e7bc      	b.n	80026ac <_dtoa_r+0x5ac>
 8002732:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8002736:	4656      	mov	r6, sl
 8002738:	e9dd 2300 	ldrd	r2, r3, [sp]
 800273c:	4620      	mov	r0, r4
 800273e:	4629      	mov	r1, r5
 8002740:	f7fe f88c 	bl	800085c <__aeabi_ddiv>
 8002744:	f7fe fa10 	bl	8000b68 <__aeabi_d2iz>
 8002748:	4680      	mov	r8, r0
 800274a:	f7fd fef3 	bl	8000534 <__aeabi_i2d>
 800274e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002752:	f7fd ff59 	bl	8000608 <__aeabi_dmul>
 8002756:	4602      	mov	r2, r0
 8002758:	460b      	mov	r3, r1
 800275a:	4620      	mov	r0, r4
 800275c:	4629      	mov	r1, r5
 800275e:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002762:	f7fd fd99 	bl	8000298 <__aeabi_dsub>
 8002766:	f806 4b01 	strb.w	r4, [r6], #1
 800276a:	9d03      	ldr	r5, [sp, #12]
 800276c:	eba6 040a 	sub.w	r4, r6, sl
 8002770:	42a5      	cmp	r5, r4
 8002772:	4602      	mov	r2, r0
 8002774:	460b      	mov	r3, r1
 8002776:	d133      	bne.n	80027e0 <_dtoa_r+0x6e0>
 8002778:	f7fd fd90 	bl	800029c <__adddf3>
 800277c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002780:	4604      	mov	r4, r0
 8002782:	460d      	mov	r5, r1
 8002784:	f7fe f9d0 	bl	8000b28 <__aeabi_dcmpgt>
 8002788:	b9c0      	cbnz	r0, 80027bc <_dtoa_r+0x6bc>
 800278a:	e9dd 2300 	ldrd	r2, r3, [sp]
 800278e:	4620      	mov	r0, r4
 8002790:	4629      	mov	r1, r5
 8002792:	f7fe f9a1 	bl	8000ad8 <__aeabi_dcmpeq>
 8002796:	b110      	cbz	r0, 800279e <_dtoa_r+0x69e>
 8002798:	f018 0f01 	tst.w	r8, #1
 800279c:	d10e      	bne.n	80027bc <_dtoa_r+0x6bc>
 800279e:	9902      	ldr	r1, [sp, #8]
 80027a0:	4648      	mov	r0, r9
 80027a2:	f000 fbbd 	bl	8002f20 <_Bfree>
 80027a6:	2300      	movs	r3, #0
 80027a8:	7033      	strb	r3, [r6, #0]
 80027aa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80027ac:	3701      	adds	r7, #1
 80027ae:	601f      	str	r7, [r3, #0]
 80027b0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80027b2:	2b00      	cmp	r3, #0
 80027b4:	f000 824b 	beq.w	8002c4e <_dtoa_r+0xb4e>
 80027b8:	601e      	str	r6, [r3, #0]
 80027ba:	e248      	b.n	8002c4e <_dtoa_r+0xb4e>
 80027bc:	46b8      	mov	r8, r7
 80027be:	4633      	mov	r3, r6
 80027c0:	461e      	mov	r6, r3
 80027c2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80027c6:	2a39      	cmp	r2, #57	@ 0x39
 80027c8:	d106      	bne.n	80027d8 <_dtoa_r+0x6d8>
 80027ca:	459a      	cmp	sl, r3
 80027cc:	d1f8      	bne.n	80027c0 <_dtoa_r+0x6c0>
 80027ce:	2230      	movs	r2, #48	@ 0x30
 80027d0:	f108 0801 	add.w	r8, r8, #1
 80027d4:	f88a 2000 	strb.w	r2, [sl]
 80027d8:	781a      	ldrb	r2, [r3, #0]
 80027da:	3201      	adds	r2, #1
 80027dc:	701a      	strb	r2, [r3, #0]
 80027de:	e7a0      	b.n	8002722 <_dtoa_r+0x622>
 80027e0:	4b6f      	ldr	r3, [pc, #444]	@ (80029a0 <_dtoa_r+0x8a0>)
 80027e2:	2200      	movs	r2, #0
 80027e4:	f7fd ff10 	bl	8000608 <__aeabi_dmul>
 80027e8:	2200      	movs	r2, #0
 80027ea:	2300      	movs	r3, #0
 80027ec:	4604      	mov	r4, r0
 80027ee:	460d      	mov	r5, r1
 80027f0:	f7fe f972 	bl	8000ad8 <__aeabi_dcmpeq>
 80027f4:	2800      	cmp	r0, #0
 80027f6:	d09f      	beq.n	8002738 <_dtoa_r+0x638>
 80027f8:	e7d1      	b.n	800279e <_dtoa_r+0x69e>
 80027fa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80027fc:	2a00      	cmp	r2, #0
 80027fe:	f000 80ea 	beq.w	80029d6 <_dtoa_r+0x8d6>
 8002802:	9a07      	ldr	r2, [sp, #28]
 8002804:	2a01      	cmp	r2, #1
 8002806:	f300 80cd 	bgt.w	80029a4 <_dtoa_r+0x8a4>
 800280a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800280c:	2a00      	cmp	r2, #0
 800280e:	f000 80c1 	beq.w	8002994 <_dtoa_r+0x894>
 8002812:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002816:	9c08      	ldr	r4, [sp, #32]
 8002818:	9e00      	ldr	r6, [sp, #0]
 800281a:	9a00      	ldr	r2, [sp, #0]
 800281c:	441a      	add	r2, r3
 800281e:	9200      	str	r2, [sp, #0]
 8002820:	9a06      	ldr	r2, [sp, #24]
 8002822:	2101      	movs	r1, #1
 8002824:	441a      	add	r2, r3
 8002826:	4648      	mov	r0, r9
 8002828:	9206      	str	r2, [sp, #24]
 800282a:	f000 fc2d 	bl	8003088 <__i2b>
 800282e:	4605      	mov	r5, r0
 8002830:	b166      	cbz	r6, 800284c <_dtoa_r+0x74c>
 8002832:	9b06      	ldr	r3, [sp, #24]
 8002834:	2b00      	cmp	r3, #0
 8002836:	dd09      	ble.n	800284c <_dtoa_r+0x74c>
 8002838:	42b3      	cmp	r3, r6
 800283a:	9a00      	ldr	r2, [sp, #0]
 800283c:	bfa8      	it	ge
 800283e:	4633      	movge	r3, r6
 8002840:	1ad2      	subs	r2, r2, r3
 8002842:	9200      	str	r2, [sp, #0]
 8002844:	9a06      	ldr	r2, [sp, #24]
 8002846:	1af6      	subs	r6, r6, r3
 8002848:	1ad3      	subs	r3, r2, r3
 800284a:	9306      	str	r3, [sp, #24]
 800284c:	9b08      	ldr	r3, [sp, #32]
 800284e:	b30b      	cbz	r3, 8002894 <_dtoa_r+0x794>
 8002850:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002852:	2b00      	cmp	r3, #0
 8002854:	f000 80c6 	beq.w	80029e4 <_dtoa_r+0x8e4>
 8002858:	2c00      	cmp	r4, #0
 800285a:	f000 80c0 	beq.w	80029de <_dtoa_r+0x8de>
 800285e:	4629      	mov	r1, r5
 8002860:	4622      	mov	r2, r4
 8002862:	4648      	mov	r0, r9
 8002864:	f000 fcc8 	bl	80031f8 <__pow5mult>
 8002868:	9a02      	ldr	r2, [sp, #8]
 800286a:	4601      	mov	r1, r0
 800286c:	4605      	mov	r5, r0
 800286e:	4648      	mov	r0, r9
 8002870:	f000 fc20 	bl	80030b4 <__multiply>
 8002874:	9902      	ldr	r1, [sp, #8]
 8002876:	4680      	mov	r8, r0
 8002878:	4648      	mov	r0, r9
 800287a:	f000 fb51 	bl	8002f20 <_Bfree>
 800287e:	9b08      	ldr	r3, [sp, #32]
 8002880:	1b1b      	subs	r3, r3, r4
 8002882:	9308      	str	r3, [sp, #32]
 8002884:	f000 80b1 	beq.w	80029ea <_dtoa_r+0x8ea>
 8002888:	9a08      	ldr	r2, [sp, #32]
 800288a:	4641      	mov	r1, r8
 800288c:	4648      	mov	r0, r9
 800288e:	f000 fcb3 	bl	80031f8 <__pow5mult>
 8002892:	9002      	str	r0, [sp, #8]
 8002894:	2101      	movs	r1, #1
 8002896:	4648      	mov	r0, r9
 8002898:	f000 fbf6 	bl	8003088 <__i2b>
 800289c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800289e:	4604      	mov	r4, r0
 80028a0:	2b00      	cmp	r3, #0
 80028a2:	f000 81d8 	beq.w	8002c56 <_dtoa_r+0xb56>
 80028a6:	461a      	mov	r2, r3
 80028a8:	4601      	mov	r1, r0
 80028aa:	4648      	mov	r0, r9
 80028ac:	f000 fca4 	bl	80031f8 <__pow5mult>
 80028b0:	9b07      	ldr	r3, [sp, #28]
 80028b2:	2b01      	cmp	r3, #1
 80028b4:	4604      	mov	r4, r0
 80028b6:	f300 809f 	bgt.w	80029f8 <_dtoa_r+0x8f8>
 80028ba:	9b04      	ldr	r3, [sp, #16]
 80028bc:	2b00      	cmp	r3, #0
 80028be:	f040 8097 	bne.w	80029f0 <_dtoa_r+0x8f0>
 80028c2:	9b05      	ldr	r3, [sp, #20]
 80028c4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80028c8:	2b00      	cmp	r3, #0
 80028ca:	f040 8093 	bne.w	80029f4 <_dtoa_r+0x8f4>
 80028ce:	9b05      	ldr	r3, [sp, #20]
 80028d0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80028d4:	0d1b      	lsrs	r3, r3, #20
 80028d6:	051b      	lsls	r3, r3, #20
 80028d8:	b133      	cbz	r3, 80028e8 <_dtoa_r+0x7e8>
 80028da:	9b00      	ldr	r3, [sp, #0]
 80028dc:	3301      	adds	r3, #1
 80028de:	9300      	str	r3, [sp, #0]
 80028e0:	9b06      	ldr	r3, [sp, #24]
 80028e2:	3301      	adds	r3, #1
 80028e4:	9306      	str	r3, [sp, #24]
 80028e6:	2301      	movs	r3, #1
 80028e8:	9308      	str	r3, [sp, #32]
 80028ea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80028ec:	2b00      	cmp	r3, #0
 80028ee:	f000 81b8 	beq.w	8002c62 <_dtoa_r+0xb62>
 80028f2:	6923      	ldr	r3, [r4, #16]
 80028f4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80028f8:	6918      	ldr	r0, [r3, #16]
 80028fa:	f000 fb79 	bl	8002ff0 <__hi0bits>
 80028fe:	f1c0 0020 	rsb	r0, r0, #32
 8002902:	9b06      	ldr	r3, [sp, #24]
 8002904:	4418      	add	r0, r3
 8002906:	f010 001f 	ands.w	r0, r0, #31
 800290a:	f000 8082 	beq.w	8002a12 <_dtoa_r+0x912>
 800290e:	f1c0 0320 	rsb	r3, r0, #32
 8002912:	2b04      	cmp	r3, #4
 8002914:	dd73      	ble.n	80029fe <_dtoa_r+0x8fe>
 8002916:	9b00      	ldr	r3, [sp, #0]
 8002918:	f1c0 001c 	rsb	r0, r0, #28
 800291c:	4403      	add	r3, r0
 800291e:	9300      	str	r3, [sp, #0]
 8002920:	9b06      	ldr	r3, [sp, #24]
 8002922:	4403      	add	r3, r0
 8002924:	4406      	add	r6, r0
 8002926:	9306      	str	r3, [sp, #24]
 8002928:	9b00      	ldr	r3, [sp, #0]
 800292a:	2b00      	cmp	r3, #0
 800292c:	dd05      	ble.n	800293a <_dtoa_r+0x83a>
 800292e:	9902      	ldr	r1, [sp, #8]
 8002930:	461a      	mov	r2, r3
 8002932:	4648      	mov	r0, r9
 8002934:	f000 fcba 	bl	80032ac <__lshift>
 8002938:	9002      	str	r0, [sp, #8]
 800293a:	9b06      	ldr	r3, [sp, #24]
 800293c:	2b00      	cmp	r3, #0
 800293e:	dd05      	ble.n	800294c <_dtoa_r+0x84c>
 8002940:	4621      	mov	r1, r4
 8002942:	461a      	mov	r2, r3
 8002944:	4648      	mov	r0, r9
 8002946:	f000 fcb1 	bl	80032ac <__lshift>
 800294a:	4604      	mov	r4, r0
 800294c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800294e:	2b00      	cmp	r3, #0
 8002950:	d061      	beq.n	8002a16 <_dtoa_r+0x916>
 8002952:	9802      	ldr	r0, [sp, #8]
 8002954:	4621      	mov	r1, r4
 8002956:	f000 fd15 	bl	8003384 <__mcmp>
 800295a:	2800      	cmp	r0, #0
 800295c:	da5b      	bge.n	8002a16 <_dtoa_r+0x916>
 800295e:	2300      	movs	r3, #0
 8002960:	9902      	ldr	r1, [sp, #8]
 8002962:	220a      	movs	r2, #10
 8002964:	4648      	mov	r0, r9
 8002966:	f000 fafd 	bl	8002f64 <__multadd>
 800296a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800296c:	9002      	str	r0, [sp, #8]
 800296e:	f107 38ff 	add.w	r8, r7, #4294967295
 8002972:	2b00      	cmp	r3, #0
 8002974:	f000 8177 	beq.w	8002c66 <_dtoa_r+0xb66>
 8002978:	4629      	mov	r1, r5
 800297a:	2300      	movs	r3, #0
 800297c:	220a      	movs	r2, #10
 800297e:	4648      	mov	r0, r9
 8002980:	f000 faf0 	bl	8002f64 <__multadd>
 8002984:	f1bb 0f00 	cmp.w	fp, #0
 8002988:	4605      	mov	r5, r0
 800298a:	dc6f      	bgt.n	8002a6c <_dtoa_r+0x96c>
 800298c:	9b07      	ldr	r3, [sp, #28]
 800298e:	2b02      	cmp	r3, #2
 8002990:	dc49      	bgt.n	8002a26 <_dtoa_r+0x926>
 8002992:	e06b      	b.n	8002a6c <_dtoa_r+0x96c>
 8002994:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002996:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 800299a:	e73c      	b.n	8002816 <_dtoa_r+0x716>
 800299c:	3fe00000 	.word	0x3fe00000
 80029a0:	40240000 	.word	0x40240000
 80029a4:	9b03      	ldr	r3, [sp, #12]
 80029a6:	1e5c      	subs	r4, r3, #1
 80029a8:	9b08      	ldr	r3, [sp, #32]
 80029aa:	42a3      	cmp	r3, r4
 80029ac:	db09      	blt.n	80029c2 <_dtoa_r+0x8c2>
 80029ae:	1b1c      	subs	r4, r3, r4
 80029b0:	9b03      	ldr	r3, [sp, #12]
 80029b2:	2b00      	cmp	r3, #0
 80029b4:	f6bf af30 	bge.w	8002818 <_dtoa_r+0x718>
 80029b8:	9b00      	ldr	r3, [sp, #0]
 80029ba:	9a03      	ldr	r2, [sp, #12]
 80029bc:	1a9e      	subs	r6, r3, r2
 80029be:	2300      	movs	r3, #0
 80029c0:	e72b      	b.n	800281a <_dtoa_r+0x71a>
 80029c2:	9b08      	ldr	r3, [sp, #32]
 80029c4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80029c6:	9408      	str	r4, [sp, #32]
 80029c8:	1ae3      	subs	r3, r4, r3
 80029ca:	441a      	add	r2, r3
 80029cc:	9e00      	ldr	r6, [sp, #0]
 80029ce:	9b03      	ldr	r3, [sp, #12]
 80029d0:	920d      	str	r2, [sp, #52]	@ 0x34
 80029d2:	2400      	movs	r4, #0
 80029d4:	e721      	b.n	800281a <_dtoa_r+0x71a>
 80029d6:	9c08      	ldr	r4, [sp, #32]
 80029d8:	9e00      	ldr	r6, [sp, #0]
 80029da:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80029dc:	e728      	b.n	8002830 <_dtoa_r+0x730>
 80029de:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80029e2:	e751      	b.n	8002888 <_dtoa_r+0x788>
 80029e4:	9a08      	ldr	r2, [sp, #32]
 80029e6:	9902      	ldr	r1, [sp, #8]
 80029e8:	e750      	b.n	800288c <_dtoa_r+0x78c>
 80029ea:	f8cd 8008 	str.w	r8, [sp, #8]
 80029ee:	e751      	b.n	8002894 <_dtoa_r+0x794>
 80029f0:	2300      	movs	r3, #0
 80029f2:	e779      	b.n	80028e8 <_dtoa_r+0x7e8>
 80029f4:	9b04      	ldr	r3, [sp, #16]
 80029f6:	e777      	b.n	80028e8 <_dtoa_r+0x7e8>
 80029f8:	2300      	movs	r3, #0
 80029fa:	9308      	str	r3, [sp, #32]
 80029fc:	e779      	b.n	80028f2 <_dtoa_r+0x7f2>
 80029fe:	d093      	beq.n	8002928 <_dtoa_r+0x828>
 8002a00:	9a00      	ldr	r2, [sp, #0]
 8002a02:	331c      	adds	r3, #28
 8002a04:	441a      	add	r2, r3
 8002a06:	9200      	str	r2, [sp, #0]
 8002a08:	9a06      	ldr	r2, [sp, #24]
 8002a0a:	441a      	add	r2, r3
 8002a0c:	441e      	add	r6, r3
 8002a0e:	9206      	str	r2, [sp, #24]
 8002a10:	e78a      	b.n	8002928 <_dtoa_r+0x828>
 8002a12:	4603      	mov	r3, r0
 8002a14:	e7f4      	b.n	8002a00 <_dtoa_r+0x900>
 8002a16:	9b03      	ldr	r3, [sp, #12]
 8002a18:	2b00      	cmp	r3, #0
 8002a1a:	46b8      	mov	r8, r7
 8002a1c:	dc20      	bgt.n	8002a60 <_dtoa_r+0x960>
 8002a1e:	469b      	mov	fp, r3
 8002a20:	9b07      	ldr	r3, [sp, #28]
 8002a22:	2b02      	cmp	r3, #2
 8002a24:	dd1e      	ble.n	8002a64 <_dtoa_r+0x964>
 8002a26:	f1bb 0f00 	cmp.w	fp, #0
 8002a2a:	f47f adb1 	bne.w	8002590 <_dtoa_r+0x490>
 8002a2e:	4621      	mov	r1, r4
 8002a30:	465b      	mov	r3, fp
 8002a32:	2205      	movs	r2, #5
 8002a34:	4648      	mov	r0, r9
 8002a36:	f000 fa95 	bl	8002f64 <__multadd>
 8002a3a:	4601      	mov	r1, r0
 8002a3c:	4604      	mov	r4, r0
 8002a3e:	9802      	ldr	r0, [sp, #8]
 8002a40:	f000 fca0 	bl	8003384 <__mcmp>
 8002a44:	2800      	cmp	r0, #0
 8002a46:	f77f ada3 	ble.w	8002590 <_dtoa_r+0x490>
 8002a4a:	4656      	mov	r6, sl
 8002a4c:	2331      	movs	r3, #49	@ 0x31
 8002a4e:	f806 3b01 	strb.w	r3, [r6], #1
 8002a52:	f108 0801 	add.w	r8, r8, #1
 8002a56:	e59f      	b.n	8002598 <_dtoa_r+0x498>
 8002a58:	9c03      	ldr	r4, [sp, #12]
 8002a5a:	46b8      	mov	r8, r7
 8002a5c:	4625      	mov	r5, r4
 8002a5e:	e7f4      	b.n	8002a4a <_dtoa_r+0x94a>
 8002a60:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8002a64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002a66:	2b00      	cmp	r3, #0
 8002a68:	f000 8101 	beq.w	8002c6e <_dtoa_r+0xb6e>
 8002a6c:	2e00      	cmp	r6, #0
 8002a6e:	dd05      	ble.n	8002a7c <_dtoa_r+0x97c>
 8002a70:	4629      	mov	r1, r5
 8002a72:	4632      	mov	r2, r6
 8002a74:	4648      	mov	r0, r9
 8002a76:	f000 fc19 	bl	80032ac <__lshift>
 8002a7a:	4605      	mov	r5, r0
 8002a7c:	9b08      	ldr	r3, [sp, #32]
 8002a7e:	2b00      	cmp	r3, #0
 8002a80:	d05c      	beq.n	8002b3c <_dtoa_r+0xa3c>
 8002a82:	6869      	ldr	r1, [r5, #4]
 8002a84:	4648      	mov	r0, r9
 8002a86:	f000 fa0b 	bl	8002ea0 <_Balloc>
 8002a8a:	4606      	mov	r6, r0
 8002a8c:	b928      	cbnz	r0, 8002a9a <_dtoa_r+0x99a>
 8002a8e:	4b82      	ldr	r3, [pc, #520]	@ (8002c98 <_dtoa_r+0xb98>)
 8002a90:	4602      	mov	r2, r0
 8002a92:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8002a96:	f7ff bb4a 	b.w	800212e <_dtoa_r+0x2e>
 8002a9a:	692a      	ldr	r2, [r5, #16]
 8002a9c:	3202      	adds	r2, #2
 8002a9e:	0092      	lsls	r2, r2, #2
 8002aa0:	f105 010c 	add.w	r1, r5, #12
 8002aa4:	300c      	adds	r0, #12
 8002aa6:	f000 ffa3 	bl	80039f0 <memcpy>
 8002aaa:	2201      	movs	r2, #1
 8002aac:	4631      	mov	r1, r6
 8002aae:	4648      	mov	r0, r9
 8002ab0:	f000 fbfc 	bl	80032ac <__lshift>
 8002ab4:	f10a 0301 	add.w	r3, sl, #1
 8002ab8:	9300      	str	r3, [sp, #0]
 8002aba:	eb0a 030b 	add.w	r3, sl, fp
 8002abe:	9308      	str	r3, [sp, #32]
 8002ac0:	9b04      	ldr	r3, [sp, #16]
 8002ac2:	f003 0301 	and.w	r3, r3, #1
 8002ac6:	462f      	mov	r7, r5
 8002ac8:	9306      	str	r3, [sp, #24]
 8002aca:	4605      	mov	r5, r0
 8002acc:	9b00      	ldr	r3, [sp, #0]
 8002ace:	9802      	ldr	r0, [sp, #8]
 8002ad0:	4621      	mov	r1, r4
 8002ad2:	f103 3bff 	add.w	fp, r3, #4294967295
 8002ad6:	f7ff fa88 	bl	8001fea <quorem>
 8002ada:	4603      	mov	r3, r0
 8002adc:	3330      	adds	r3, #48	@ 0x30
 8002ade:	9003      	str	r0, [sp, #12]
 8002ae0:	4639      	mov	r1, r7
 8002ae2:	9802      	ldr	r0, [sp, #8]
 8002ae4:	9309      	str	r3, [sp, #36]	@ 0x24
 8002ae6:	f000 fc4d 	bl	8003384 <__mcmp>
 8002aea:	462a      	mov	r2, r5
 8002aec:	9004      	str	r0, [sp, #16]
 8002aee:	4621      	mov	r1, r4
 8002af0:	4648      	mov	r0, r9
 8002af2:	f000 fc63 	bl	80033bc <__mdiff>
 8002af6:	68c2      	ldr	r2, [r0, #12]
 8002af8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002afa:	4606      	mov	r6, r0
 8002afc:	bb02      	cbnz	r2, 8002b40 <_dtoa_r+0xa40>
 8002afe:	4601      	mov	r1, r0
 8002b00:	9802      	ldr	r0, [sp, #8]
 8002b02:	f000 fc3f 	bl	8003384 <__mcmp>
 8002b06:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002b08:	4602      	mov	r2, r0
 8002b0a:	4631      	mov	r1, r6
 8002b0c:	4648      	mov	r0, r9
 8002b0e:	920c      	str	r2, [sp, #48]	@ 0x30
 8002b10:	9309      	str	r3, [sp, #36]	@ 0x24
 8002b12:	f000 fa05 	bl	8002f20 <_Bfree>
 8002b16:	9b07      	ldr	r3, [sp, #28]
 8002b18:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8002b1a:	9e00      	ldr	r6, [sp, #0]
 8002b1c:	ea42 0103 	orr.w	r1, r2, r3
 8002b20:	9b06      	ldr	r3, [sp, #24]
 8002b22:	4319      	orrs	r1, r3
 8002b24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002b26:	d10d      	bne.n	8002b44 <_dtoa_r+0xa44>
 8002b28:	2b39      	cmp	r3, #57	@ 0x39
 8002b2a:	d027      	beq.n	8002b7c <_dtoa_r+0xa7c>
 8002b2c:	9a04      	ldr	r2, [sp, #16]
 8002b2e:	2a00      	cmp	r2, #0
 8002b30:	dd01      	ble.n	8002b36 <_dtoa_r+0xa36>
 8002b32:	9b03      	ldr	r3, [sp, #12]
 8002b34:	3331      	adds	r3, #49	@ 0x31
 8002b36:	f88b 3000 	strb.w	r3, [fp]
 8002b3a:	e52e      	b.n	800259a <_dtoa_r+0x49a>
 8002b3c:	4628      	mov	r0, r5
 8002b3e:	e7b9      	b.n	8002ab4 <_dtoa_r+0x9b4>
 8002b40:	2201      	movs	r2, #1
 8002b42:	e7e2      	b.n	8002b0a <_dtoa_r+0xa0a>
 8002b44:	9904      	ldr	r1, [sp, #16]
 8002b46:	2900      	cmp	r1, #0
 8002b48:	db04      	blt.n	8002b54 <_dtoa_r+0xa54>
 8002b4a:	9807      	ldr	r0, [sp, #28]
 8002b4c:	4301      	orrs	r1, r0
 8002b4e:	9806      	ldr	r0, [sp, #24]
 8002b50:	4301      	orrs	r1, r0
 8002b52:	d120      	bne.n	8002b96 <_dtoa_r+0xa96>
 8002b54:	2a00      	cmp	r2, #0
 8002b56:	ddee      	ble.n	8002b36 <_dtoa_r+0xa36>
 8002b58:	9902      	ldr	r1, [sp, #8]
 8002b5a:	9300      	str	r3, [sp, #0]
 8002b5c:	2201      	movs	r2, #1
 8002b5e:	4648      	mov	r0, r9
 8002b60:	f000 fba4 	bl	80032ac <__lshift>
 8002b64:	4621      	mov	r1, r4
 8002b66:	9002      	str	r0, [sp, #8]
 8002b68:	f000 fc0c 	bl	8003384 <__mcmp>
 8002b6c:	2800      	cmp	r0, #0
 8002b6e:	9b00      	ldr	r3, [sp, #0]
 8002b70:	dc02      	bgt.n	8002b78 <_dtoa_r+0xa78>
 8002b72:	d1e0      	bne.n	8002b36 <_dtoa_r+0xa36>
 8002b74:	07da      	lsls	r2, r3, #31
 8002b76:	d5de      	bpl.n	8002b36 <_dtoa_r+0xa36>
 8002b78:	2b39      	cmp	r3, #57	@ 0x39
 8002b7a:	d1da      	bne.n	8002b32 <_dtoa_r+0xa32>
 8002b7c:	2339      	movs	r3, #57	@ 0x39
 8002b7e:	f88b 3000 	strb.w	r3, [fp]
 8002b82:	4633      	mov	r3, r6
 8002b84:	461e      	mov	r6, r3
 8002b86:	3b01      	subs	r3, #1
 8002b88:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8002b8c:	2a39      	cmp	r2, #57	@ 0x39
 8002b8e:	d04e      	beq.n	8002c2e <_dtoa_r+0xb2e>
 8002b90:	3201      	adds	r2, #1
 8002b92:	701a      	strb	r2, [r3, #0]
 8002b94:	e501      	b.n	800259a <_dtoa_r+0x49a>
 8002b96:	2a00      	cmp	r2, #0
 8002b98:	dd03      	ble.n	8002ba2 <_dtoa_r+0xaa2>
 8002b9a:	2b39      	cmp	r3, #57	@ 0x39
 8002b9c:	d0ee      	beq.n	8002b7c <_dtoa_r+0xa7c>
 8002b9e:	3301      	adds	r3, #1
 8002ba0:	e7c9      	b.n	8002b36 <_dtoa_r+0xa36>
 8002ba2:	9a00      	ldr	r2, [sp, #0]
 8002ba4:	9908      	ldr	r1, [sp, #32]
 8002ba6:	f802 3c01 	strb.w	r3, [r2, #-1]
 8002baa:	428a      	cmp	r2, r1
 8002bac:	d028      	beq.n	8002c00 <_dtoa_r+0xb00>
 8002bae:	9902      	ldr	r1, [sp, #8]
 8002bb0:	2300      	movs	r3, #0
 8002bb2:	220a      	movs	r2, #10
 8002bb4:	4648      	mov	r0, r9
 8002bb6:	f000 f9d5 	bl	8002f64 <__multadd>
 8002bba:	42af      	cmp	r7, r5
 8002bbc:	9002      	str	r0, [sp, #8]
 8002bbe:	f04f 0300 	mov.w	r3, #0
 8002bc2:	f04f 020a 	mov.w	r2, #10
 8002bc6:	4639      	mov	r1, r7
 8002bc8:	4648      	mov	r0, r9
 8002bca:	d107      	bne.n	8002bdc <_dtoa_r+0xadc>
 8002bcc:	f000 f9ca 	bl	8002f64 <__multadd>
 8002bd0:	4607      	mov	r7, r0
 8002bd2:	4605      	mov	r5, r0
 8002bd4:	9b00      	ldr	r3, [sp, #0]
 8002bd6:	3301      	adds	r3, #1
 8002bd8:	9300      	str	r3, [sp, #0]
 8002bda:	e777      	b.n	8002acc <_dtoa_r+0x9cc>
 8002bdc:	f000 f9c2 	bl	8002f64 <__multadd>
 8002be0:	4629      	mov	r1, r5
 8002be2:	4607      	mov	r7, r0
 8002be4:	2300      	movs	r3, #0
 8002be6:	220a      	movs	r2, #10
 8002be8:	4648      	mov	r0, r9
 8002bea:	f000 f9bb 	bl	8002f64 <__multadd>
 8002bee:	4605      	mov	r5, r0
 8002bf0:	e7f0      	b.n	8002bd4 <_dtoa_r+0xad4>
 8002bf2:	f1bb 0f00 	cmp.w	fp, #0
 8002bf6:	bfcc      	ite	gt
 8002bf8:	465e      	movgt	r6, fp
 8002bfa:	2601      	movle	r6, #1
 8002bfc:	4456      	add	r6, sl
 8002bfe:	2700      	movs	r7, #0
 8002c00:	9902      	ldr	r1, [sp, #8]
 8002c02:	9300      	str	r3, [sp, #0]
 8002c04:	2201      	movs	r2, #1
 8002c06:	4648      	mov	r0, r9
 8002c08:	f000 fb50 	bl	80032ac <__lshift>
 8002c0c:	4621      	mov	r1, r4
 8002c0e:	9002      	str	r0, [sp, #8]
 8002c10:	f000 fbb8 	bl	8003384 <__mcmp>
 8002c14:	2800      	cmp	r0, #0
 8002c16:	dcb4      	bgt.n	8002b82 <_dtoa_r+0xa82>
 8002c18:	d102      	bne.n	8002c20 <_dtoa_r+0xb20>
 8002c1a:	9b00      	ldr	r3, [sp, #0]
 8002c1c:	07db      	lsls	r3, r3, #31
 8002c1e:	d4b0      	bmi.n	8002b82 <_dtoa_r+0xa82>
 8002c20:	4633      	mov	r3, r6
 8002c22:	461e      	mov	r6, r3
 8002c24:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002c28:	2a30      	cmp	r2, #48	@ 0x30
 8002c2a:	d0fa      	beq.n	8002c22 <_dtoa_r+0xb22>
 8002c2c:	e4b5      	b.n	800259a <_dtoa_r+0x49a>
 8002c2e:	459a      	cmp	sl, r3
 8002c30:	d1a8      	bne.n	8002b84 <_dtoa_r+0xa84>
 8002c32:	2331      	movs	r3, #49	@ 0x31
 8002c34:	f108 0801 	add.w	r8, r8, #1
 8002c38:	f88a 3000 	strb.w	r3, [sl]
 8002c3c:	e4ad      	b.n	800259a <_dtoa_r+0x49a>
 8002c3e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002c40:	f8df a058 	ldr.w	sl, [pc, #88]	@ 8002c9c <_dtoa_r+0xb9c>
 8002c44:	b11b      	cbz	r3, 8002c4e <_dtoa_r+0xb4e>
 8002c46:	f10a 0308 	add.w	r3, sl, #8
 8002c4a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8002c4c:	6013      	str	r3, [r2, #0]
 8002c4e:	4650      	mov	r0, sl
 8002c50:	b017      	add	sp, #92	@ 0x5c
 8002c52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c56:	9b07      	ldr	r3, [sp, #28]
 8002c58:	2b01      	cmp	r3, #1
 8002c5a:	f77f ae2e 	ble.w	80028ba <_dtoa_r+0x7ba>
 8002c5e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002c60:	9308      	str	r3, [sp, #32]
 8002c62:	2001      	movs	r0, #1
 8002c64:	e64d      	b.n	8002902 <_dtoa_r+0x802>
 8002c66:	f1bb 0f00 	cmp.w	fp, #0
 8002c6a:	f77f aed9 	ble.w	8002a20 <_dtoa_r+0x920>
 8002c6e:	4656      	mov	r6, sl
 8002c70:	9802      	ldr	r0, [sp, #8]
 8002c72:	4621      	mov	r1, r4
 8002c74:	f7ff f9b9 	bl	8001fea <quorem>
 8002c78:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 8002c7c:	f806 3b01 	strb.w	r3, [r6], #1
 8002c80:	eba6 020a 	sub.w	r2, r6, sl
 8002c84:	4593      	cmp	fp, r2
 8002c86:	ddb4      	ble.n	8002bf2 <_dtoa_r+0xaf2>
 8002c88:	9902      	ldr	r1, [sp, #8]
 8002c8a:	2300      	movs	r3, #0
 8002c8c:	220a      	movs	r2, #10
 8002c8e:	4648      	mov	r0, r9
 8002c90:	f000 f968 	bl	8002f64 <__multadd>
 8002c94:	9002      	str	r0, [sp, #8]
 8002c96:	e7eb      	b.n	8002c70 <_dtoa_r+0xb70>
 8002c98:	08004173 	.word	0x08004173
 8002c9c:	080040f7 	.word	0x080040f7

08002ca0 <_free_r>:
 8002ca0:	b538      	push	{r3, r4, r5, lr}
 8002ca2:	4605      	mov	r5, r0
 8002ca4:	2900      	cmp	r1, #0
 8002ca6:	d041      	beq.n	8002d2c <_free_r+0x8c>
 8002ca8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002cac:	1f0c      	subs	r4, r1, #4
 8002cae:	2b00      	cmp	r3, #0
 8002cb0:	bfb8      	it	lt
 8002cb2:	18e4      	addlt	r4, r4, r3
 8002cb4:	f000 f8e8 	bl	8002e88 <__malloc_lock>
 8002cb8:	4a1d      	ldr	r2, [pc, #116]	@ (8002d30 <_free_r+0x90>)
 8002cba:	6813      	ldr	r3, [r2, #0]
 8002cbc:	b933      	cbnz	r3, 8002ccc <_free_r+0x2c>
 8002cbe:	6063      	str	r3, [r4, #4]
 8002cc0:	6014      	str	r4, [r2, #0]
 8002cc2:	4628      	mov	r0, r5
 8002cc4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002cc8:	f000 b8e4 	b.w	8002e94 <__malloc_unlock>
 8002ccc:	42a3      	cmp	r3, r4
 8002cce:	d908      	bls.n	8002ce2 <_free_r+0x42>
 8002cd0:	6820      	ldr	r0, [r4, #0]
 8002cd2:	1821      	adds	r1, r4, r0
 8002cd4:	428b      	cmp	r3, r1
 8002cd6:	bf01      	itttt	eq
 8002cd8:	6819      	ldreq	r1, [r3, #0]
 8002cda:	685b      	ldreq	r3, [r3, #4]
 8002cdc:	1809      	addeq	r1, r1, r0
 8002cde:	6021      	streq	r1, [r4, #0]
 8002ce0:	e7ed      	b.n	8002cbe <_free_r+0x1e>
 8002ce2:	461a      	mov	r2, r3
 8002ce4:	685b      	ldr	r3, [r3, #4]
 8002ce6:	b10b      	cbz	r3, 8002cec <_free_r+0x4c>
 8002ce8:	42a3      	cmp	r3, r4
 8002cea:	d9fa      	bls.n	8002ce2 <_free_r+0x42>
 8002cec:	6811      	ldr	r1, [r2, #0]
 8002cee:	1850      	adds	r0, r2, r1
 8002cf0:	42a0      	cmp	r0, r4
 8002cf2:	d10b      	bne.n	8002d0c <_free_r+0x6c>
 8002cf4:	6820      	ldr	r0, [r4, #0]
 8002cf6:	4401      	add	r1, r0
 8002cf8:	1850      	adds	r0, r2, r1
 8002cfa:	4283      	cmp	r3, r0
 8002cfc:	6011      	str	r1, [r2, #0]
 8002cfe:	d1e0      	bne.n	8002cc2 <_free_r+0x22>
 8002d00:	6818      	ldr	r0, [r3, #0]
 8002d02:	685b      	ldr	r3, [r3, #4]
 8002d04:	6053      	str	r3, [r2, #4]
 8002d06:	4408      	add	r0, r1
 8002d08:	6010      	str	r0, [r2, #0]
 8002d0a:	e7da      	b.n	8002cc2 <_free_r+0x22>
 8002d0c:	d902      	bls.n	8002d14 <_free_r+0x74>
 8002d0e:	230c      	movs	r3, #12
 8002d10:	602b      	str	r3, [r5, #0]
 8002d12:	e7d6      	b.n	8002cc2 <_free_r+0x22>
 8002d14:	6820      	ldr	r0, [r4, #0]
 8002d16:	1821      	adds	r1, r4, r0
 8002d18:	428b      	cmp	r3, r1
 8002d1a:	bf04      	itt	eq
 8002d1c:	6819      	ldreq	r1, [r3, #0]
 8002d1e:	685b      	ldreq	r3, [r3, #4]
 8002d20:	6063      	str	r3, [r4, #4]
 8002d22:	bf04      	itt	eq
 8002d24:	1809      	addeq	r1, r1, r0
 8002d26:	6021      	streq	r1, [r4, #0]
 8002d28:	6054      	str	r4, [r2, #4]
 8002d2a:	e7ca      	b.n	8002cc2 <_free_r+0x22>
 8002d2c:	bd38      	pop	{r3, r4, r5, pc}
 8002d2e:	bf00      	nop
 8002d30:	20000884 	.word	0x20000884

08002d34 <malloc>:
 8002d34:	4b02      	ldr	r3, [pc, #8]	@ (8002d40 <malloc+0xc>)
 8002d36:	4601      	mov	r1, r0
 8002d38:	6818      	ldr	r0, [r3, #0]
 8002d3a:	f000 b825 	b.w	8002d88 <_malloc_r>
 8002d3e:	bf00      	nop
 8002d40:	20000010 	.word	0x20000010

08002d44 <sbrk_aligned>:
 8002d44:	b570      	push	{r4, r5, r6, lr}
 8002d46:	4e0f      	ldr	r6, [pc, #60]	@ (8002d84 <sbrk_aligned+0x40>)
 8002d48:	460c      	mov	r4, r1
 8002d4a:	6831      	ldr	r1, [r6, #0]
 8002d4c:	4605      	mov	r5, r0
 8002d4e:	b911      	cbnz	r1, 8002d56 <sbrk_aligned+0x12>
 8002d50:	f000 fe3e 	bl	80039d0 <_sbrk_r>
 8002d54:	6030      	str	r0, [r6, #0]
 8002d56:	4621      	mov	r1, r4
 8002d58:	4628      	mov	r0, r5
 8002d5a:	f000 fe39 	bl	80039d0 <_sbrk_r>
 8002d5e:	1c43      	adds	r3, r0, #1
 8002d60:	d103      	bne.n	8002d6a <sbrk_aligned+0x26>
 8002d62:	f04f 34ff 	mov.w	r4, #4294967295
 8002d66:	4620      	mov	r0, r4
 8002d68:	bd70      	pop	{r4, r5, r6, pc}
 8002d6a:	1cc4      	adds	r4, r0, #3
 8002d6c:	f024 0403 	bic.w	r4, r4, #3
 8002d70:	42a0      	cmp	r0, r4
 8002d72:	d0f8      	beq.n	8002d66 <sbrk_aligned+0x22>
 8002d74:	1a21      	subs	r1, r4, r0
 8002d76:	4628      	mov	r0, r5
 8002d78:	f000 fe2a 	bl	80039d0 <_sbrk_r>
 8002d7c:	3001      	adds	r0, #1
 8002d7e:	d1f2      	bne.n	8002d66 <sbrk_aligned+0x22>
 8002d80:	e7ef      	b.n	8002d62 <sbrk_aligned+0x1e>
 8002d82:	bf00      	nop
 8002d84:	20000880 	.word	0x20000880

08002d88 <_malloc_r>:
 8002d88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002d8c:	1ccd      	adds	r5, r1, #3
 8002d8e:	f025 0503 	bic.w	r5, r5, #3
 8002d92:	3508      	adds	r5, #8
 8002d94:	2d0c      	cmp	r5, #12
 8002d96:	bf38      	it	cc
 8002d98:	250c      	movcc	r5, #12
 8002d9a:	2d00      	cmp	r5, #0
 8002d9c:	4606      	mov	r6, r0
 8002d9e:	db01      	blt.n	8002da4 <_malloc_r+0x1c>
 8002da0:	42a9      	cmp	r1, r5
 8002da2:	d904      	bls.n	8002dae <_malloc_r+0x26>
 8002da4:	230c      	movs	r3, #12
 8002da6:	6033      	str	r3, [r6, #0]
 8002da8:	2000      	movs	r0, #0
 8002daa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002dae:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8002e84 <_malloc_r+0xfc>
 8002db2:	f000 f869 	bl	8002e88 <__malloc_lock>
 8002db6:	f8d8 3000 	ldr.w	r3, [r8]
 8002dba:	461c      	mov	r4, r3
 8002dbc:	bb44      	cbnz	r4, 8002e10 <_malloc_r+0x88>
 8002dbe:	4629      	mov	r1, r5
 8002dc0:	4630      	mov	r0, r6
 8002dc2:	f7ff ffbf 	bl	8002d44 <sbrk_aligned>
 8002dc6:	1c43      	adds	r3, r0, #1
 8002dc8:	4604      	mov	r4, r0
 8002dca:	d158      	bne.n	8002e7e <_malloc_r+0xf6>
 8002dcc:	f8d8 4000 	ldr.w	r4, [r8]
 8002dd0:	4627      	mov	r7, r4
 8002dd2:	2f00      	cmp	r7, #0
 8002dd4:	d143      	bne.n	8002e5e <_malloc_r+0xd6>
 8002dd6:	2c00      	cmp	r4, #0
 8002dd8:	d04b      	beq.n	8002e72 <_malloc_r+0xea>
 8002dda:	6823      	ldr	r3, [r4, #0]
 8002ddc:	4639      	mov	r1, r7
 8002dde:	4630      	mov	r0, r6
 8002de0:	eb04 0903 	add.w	r9, r4, r3
 8002de4:	f000 fdf4 	bl	80039d0 <_sbrk_r>
 8002de8:	4581      	cmp	r9, r0
 8002dea:	d142      	bne.n	8002e72 <_malloc_r+0xea>
 8002dec:	6821      	ldr	r1, [r4, #0]
 8002dee:	1a6d      	subs	r5, r5, r1
 8002df0:	4629      	mov	r1, r5
 8002df2:	4630      	mov	r0, r6
 8002df4:	f7ff ffa6 	bl	8002d44 <sbrk_aligned>
 8002df8:	3001      	adds	r0, #1
 8002dfa:	d03a      	beq.n	8002e72 <_malloc_r+0xea>
 8002dfc:	6823      	ldr	r3, [r4, #0]
 8002dfe:	442b      	add	r3, r5
 8002e00:	6023      	str	r3, [r4, #0]
 8002e02:	f8d8 3000 	ldr.w	r3, [r8]
 8002e06:	685a      	ldr	r2, [r3, #4]
 8002e08:	bb62      	cbnz	r2, 8002e64 <_malloc_r+0xdc>
 8002e0a:	f8c8 7000 	str.w	r7, [r8]
 8002e0e:	e00f      	b.n	8002e30 <_malloc_r+0xa8>
 8002e10:	6822      	ldr	r2, [r4, #0]
 8002e12:	1b52      	subs	r2, r2, r5
 8002e14:	d420      	bmi.n	8002e58 <_malloc_r+0xd0>
 8002e16:	2a0b      	cmp	r2, #11
 8002e18:	d917      	bls.n	8002e4a <_malloc_r+0xc2>
 8002e1a:	1961      	adds	r1, r4, r5
 8002e1c:	42a3      	cmp	r3, r4
 8002e1e:	6025      	str	r5, [r4, #0]
 8002e20:	bf18      	it	ne
 8002e22:	6059      	strne	r1, [r3, #4]
 8002e24:	6863      	ldr	r3, [r4, #4]
 8002e26:	bf08      	it	eq
 8002e28:	f8c8 1000 	streq.w	r1, [r8]
 8002e2c:	5162      	str	r2, [r4, r5]
 8002e2e:	604b      	str	r3, [r1, #4]
 8002e30:	4630      	mov	r0, r6
 8002e32:	f000 f82f 	bl	8002e94 <__malloc_unlock>
 8002e36:	f104 000b 	add.w	r0, r4, #11
 8002e3a:	1d23      	adds	r3, r4, #4
 8002e3c:	f020 0007 	bic.w	r0, r0, #7
 8002e40:	1ac2      	subs	r2, r0, r3
 8002e42:	bf1c      	itt	ne
 8002e44:	1a1b      	subne	r3, r3, r0
 8002e46:	50a3      	strne	r3, [r4, r2]
 8002e48:	e7af      	b.n	8002daa <_malloc_r+0x22>
 8002e4a:	6862      	ldr	r2, [r4, #4]
 8002e4c:	42a3      	cmp	r3, r4
 8002e4e:	bf0c      	ite	eq
 8002e50:	f8c8 2000 	streq.w	r2, [r8]
 8002e54:	605a      	strne	r2, [r3, #4]
 8002e56:	e7eb      	b.n	8002e30 <_malloc_r+0xa8>
 8002e58:	4623      	mov	r3, r4
 8002e5a:	6864      	ldr	r4, [r4, #4]
 8002e5c:	e7ae      	b.n	8002dbc <_malloc_r+0x34>
 8002e5e:	463c      	mov	r4, r7
 8002e60:	687f      	ldr	r7, [r7, #4]
 8002e62:	e7b6      	b.n	8002dd2 <_malloc_r+0x4a>
 8002e64:	461a      	mov	r2, r3
 8002e66:	685b      	ldr	r3, [r3, #4]
 8002e68:	42a3      	cmp	r3, r4
 8002e6a:	d1fb      	bne.n	8002e64 <_malloc_r+0xdc>
 8002e6c:	2300      	movs	r3, #0
 8002e6e:	6053      	str	r3, [r2, #4]
 8002e70:	e7de      	b.n	8002e30 <_malloc_r+0xa8>
 8002e72:	230c      	movs	r3, #12
 8002e74:	6033      	str	r3, [r6, #0]
 8002e76:	4630      	mov	r0, r6
 8002e78:	f000 f80c 	bl	8002e94 <__malloc_unlock>
 8002e7c:	e794      	b.n	8002da8 <_malloc_r+0x20>
 8002e7e:	6005      	str	r5, [r0, #0]
 8002e80:	e7d6      	b.n	8002e30 <_malloc_r+0xa8>
 8002e82:	bf00      	nop
 8002e84:	20000884 	.word	0x20000884

08002e88 <__malloc_lock>:
 8002e88:	4801      	ldr	r0, [pc, #4]	@ (8002e90 <__malloc_lock+0x8>)
 8002e8a:	f7ff b8ac 	b.w	8001fe6 <__retarget_lock_acquire_recursive>
 8002e8e:	bf00      	nop
 8002e90:	2000087c 	.word	0x2000087c

08002e94 <__malloc_unlock>:
 8002e94:	4801      	ldr	r0, [pc, #4]	@ (8002e9c <__malloc_unlock+0x8>)
 8002e96:	f7ff b8a7 	b.w	8001fe8 <__retarget_lock_release_recursive>
 8002e9a:	bf00      	nop
 8002e9c:	2000087c 	.word	0x2000087c

08002ea0 <_Balloc>:
 8002ea0:	b570      	push	{r4, r5, r6, lr}
 8002ea2:	69c6      	ldr	r6, [r0, #28]
 8002ea4:	4604      	mov	r4, r0
 8002ea6:	460d      	mov	r5, r1
 8002ea8:	b976      	cbnz	r6, 8002ec8 <_Balloc+0x28>
 8002eaa:	2010      	movs	r0, #16
 8002eac:	f7ff ff42 	bl	8002d34 <malloc>
 8002eb0:	4602      	mov	r2, r0
 8002eb2:	61e0      	str	r0, [r4, #28]
 8002eb4:	b920      	cbnz	r0, 8002ec0 <_Balloc+0x20>
 8002eb6:	4b18      	ldr	r3, [pc, #96]	@ (8002f18 <_Balloc+0x78>)
 8002eb8:	4818      	ldr	r0, [pc, #96]	@ (8002f1c <_Balloc+0x7c>)
 8002eba:	216b      	movs	r1, #107	@ 0x6b
 8002ebc:	f000 fda6 	bl	8003a0c <__assert_func>
 8002ec0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8002ec4:	6006      	str	r6, [r0, #0]
 8002ec6:	60c6      	str	r6, [r0, #12]
 8002ec8:	69e6      	ldr	r6, [r4, #28]
 8002eca:	68f3      	ldr	r3, [r6, #12]
 8002ecc:	b183      	cbz	r3, 8002ef0 <_Balloc+0x50>
 8002ece:	69e3      	ldr	r3, [r4, #28]
 8002ed0:	68db      	ldr	r3, [r3, #12]
 8002ed2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8002ed6:	b9b8      	cbnz	r0, 8002f08 <_Balloc+0x68>
 8002ed8:	2101      	movs	r1, #1
 8002eda:	fa01 f605 	lsl.w	r6, r1, r5
 8002ede:	1d72      	adds	r2, r6, #5
 8002ee0:	0092      	lsls	r2, r2, #2
 8002ee2:	4620      	mov	r0, r4
 8002ee4:	f000 fdb0 	bl	8003a48 <_calloc_r>
 8002ee8:	b160      	cbz	r0, 8002f04 <_Balloc+0x64>
 8002eea:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8002eee:	e00e      	b.n	8002f0e <_Balloc+0x6e>
 8002ef0:	2221      	movs	r2, #33	@ 0x21
 8002ef2:	2104      	movs	r1, #4
 8002ef4:	4620      	mov	r0, r4
 8002ef6:	f000 fda7 	bl	8003a48 <_calloc_r>
 8002efa:	69e3      	ldr	r3, [r4, #28]
 8002efc:	60f0      	str	r0, [r6, #12]
 8002efe:	68db      	ldr	r3, [r3, #12]
 8002f00:	2b00      	cmp	r3, #0
 8002f02:	d1e4      	bne.n	8002ece <_Balloc+0x2e>
 8002f04:	2000      	movs	r0, #0
 8002f06:	bd70      	pop	{r4, r5, r6, pc}
 8002f08:	6802      	ldr	r2, [r0, #0]
 8002f0a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8002f0e:	2300      	movs	r3, #0
 8002f10:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8002f14:	e7f7      	b.n	8002f06 <_Balloc+0x66>
 8002f16:	bf00      	nop
 8002f18:	08004104 	.word	0x08004104
 8002f1c:	08004184 	.word	0x08004184

08002f20 <_Bfree>:
 8002f20:	b570      	push	{r4, r5, r6, lr}
 8002f22:	69c6      	ldr	r6, [r0, #28]
 8002f24:	4605      	mov	r5, r0
 8002f26:	460c      	mov	r4, r1
 8002f28:	b976      	cbnz	r6, 8002f48 <_Bfree+0x28>
 8002f2a:	2010      	movs	r0, #16
 8002f2c:	f7ff ff02 	bl	8002d34 <malloc>
 8002f30:	4602      	mov	r2, r0
 8002f32:	61e8      	str	r0, [r5, #28]
 8002f34:	b920      	cbnz	r0, 8002f40 <_Bfree+0x20>
 8002f36:	4b09      	ldr	r3, [pc, #36]	@ (8002f5c <_Bfree+0x3c>)
 8002f38:	4809      	ldr	r0, [pc, #36]	@ (8002f60 <_Bfree+0x40>)
 8002f3a:	218f      	movs	r1, #143	@ 0x8f
 8002f3c:	f000 fd66 	bl	8003a0c <__assert_func>
 8002f40:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8002f44:	6006      	str	r6, [r0, #0]
 8002f46:	60c6      	str	r6, [r0, #12]
 8002f48:	b13c      	cbz	r4, 8002f5a <_Bfree+0x3a>
 8002f4a:	69eb      	ldr	r3, [r5, #28]
 8002f4c:	6862      	ldr	r2, [r4, #4]
 8002f4e:	68db      	ldr	r3, [r3, #12]
 8002f50:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8002f54:	6021      	str	r1, [r4, #0]
 8002f56:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8002f5a:	bd70      	pop	{r4, r5, r6, pc}
 8002f5c:	08004104 	.word	0x08004104
 8002f60:	08004184 	.word	0x08004184

08002f64 <__multadd>:
 8002f64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002f68:	690d      	ldr	r5, [r1, #16]
 8002f6a:	4607      	mov	r7, r0
 8002f6c:	460c      	mov	r4, r1
 8002f6e:	461e      	mov	r6, r3
 8002f70:	f101 0c14 	add.w	ip, r1, #20
 8002f74:	2000      	movs	r0, #0
 8002f76:	f8dc 3000 	ldr.w	r3, [ip]
 8002f7a:	b299      	uxth	r1, r3
 8002f7c:	fb02 6101 	mla	r1, r2, r1, r6
 8002f80:	0c1e      	lsrs	r6, r3, #16
 8002f82:	0c0b      	lsrs	r3, r1, #16
 8002f84:	fb02 3306 	mla	r3, r2, r6, r3
 8002f88:	b289      	uxth	r1, r1
 8002f8a:	3001      	adds	r0, #1
 8002f8c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8002f90:	4285      	cmp	r5, r0
 8002f92:	f84c 1b04 	str.w	r1, [ip], #4
 8002f96:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8002f9a:	dcec      	bgt.n	8002f76 <__multadd+0x12>
 8002f9c:	b30e      	cbz	r6, 8002fe2 <__multadd+0x7e>
 8002f9e:	68a3      	ldr	r3, [r4, #8]
 8002fa0:	42ab      	cmp	r3, r5
 8002fa2:	dc19      	bgt.n	8002fd8 <__multadd+0x74>
 8002fa4:	6861      	ldr	r1, [r4, #4]
 8002fa6:	4638      	mov	r0, r7
 8002fa8:	3101      	adds	r1, #1
 8002faa:	f7ff ff79 	bl	8002ea0 <_Balloc>
 8002fae:	4680      	mov	r8, r0
 8002fb0:	b928      	cbnz	r0, 8002fbe <__multadd+0x5a>
 8002fb2:	4602      	mov	r2, r0
 8002fb4:	4b0c      	ldr	r3, [pc, #48]	@ (8002fe8 <__multadd+0x84>)
 8002fb6:	480d      	ldr	r0, [pc, #52]	@ (8002fec <__multadd+0x88>)
 8002fb8:	21ba      	movs	r1, #186	@ 0xba
 8002fba:	f000 fd27 	bl	8003a0c <__assert_func>
 8002fbe:	6922      	ldr	r2, [r4, #16]
 8002fc0:	3202      	adds	r2, #2
 8002fc2:	f104 010c 	add.w	r1, r4, #12
 8002fc6:	0092      	lsls	r2, r2, #2
 8002fc8:	300c      	adds	r0, #12
 8002fca:	f000 fd11 	bl	80039f0 <memcpy>
 8002fce:	4621      	mov	r1, r4
 8002fd0:	4638      	mov	r0, r7
 8002fd2:	f7ff ffa5 	bl	8002f20 <_Bfree>
 8002fd6:	4644      	mov	r4, r8
 8002fd8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8002fdc:	3501      	adds	r5, #1
 8002fde:	615e      	str	r6, [r3, #20]
 8002fe0:	6125      	str	r5, [r4, #16]
 8002fe2:	4620      	mov	r0, r4
 8002fe4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002fe8:	08004173 	.word	0x08004173
 8002fec:	08004184 	.word	0x08004184

08002ff0 <__hi0bits>:
 8002ff0:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8002ff4:	4603      	mov	r3, r0
 8002ff6:	bf36      	itet	cc
 8002ff8:	0403      	lslcc	r3, r0, #16
 8002ffa:	2000      	movcs	r0, #0
 8002ffc:	2010      	movcc	r0, #16
 8002ffe:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003002:	bf3c      	itt	cc
 8003004:	021b      	lslcc	r3, r3, #8
 8003006:	3008      	addcc	r0, #8
 8003008:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800300c:	bf3c      	itt	cc
 800300e:	011b      	lslcc	r3, r3, #4
 8003010:	3004      	addcc	r0, #4
 8003012:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003016:	bf3c      	itt	cc
 8003018:	009b      	lslcc	r3, r3, #2
 800301a:	3002      	addcc	r0, #2
 800301c:	2b00      	cmp	r3, #0
 800301e:	db05      	blt.n	800302c <__hi0bits+0x3c>
 8003020:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003024:	f100 0001 	add.w	r0, r0, #1
 8003028:	bf08      	it	eq
 800302a:	2020      	moveq	r0, #32
 800302c:	4770      	bx	lr

0800302e <__lo0bits>:
 800302e:	6803      	ldr	r3, [r0, #0]
 8003030:	4602      	mov	r2, r0
 8003032:	f013 0007 	ands.w	r0, r3, #7
 8003036:	d00b      	beq.n	8003050 <__lo0bits+0x22>
 8003038:	07d9      	lsls	r1, r3, #31
 800303a:	d421      	bmi.n	8003080 <__lo0bits+0x52>
 800303c:	0798      	lsls	r0, r3, #30
 800303e:	bf49      	itett	mi
 8003040:	085b      	lsrmi	r3, r3, #1
 8003042:	089b      	lsrpl	r3, r3, #2
 8003044:	2001      	movmi	r0, #1
 8003046:	6013      	strmi	r3, [r2, #0]
 8003048:	bf5c      	itt	pl
 800304a:	6013      	strpl	r3, [r2, #0]
 800304c:	2002      	movpl	r0, #2
 800304e:	4770      	bx	lr
 8003050:	b299      	uxth	r1, r3
 8003052:	b909      	cbnz	r1, 8003058 <__lo0bits+0x2a>
 8003054:	0c1b      	lsrs	r3, r3, #16
 8003056:	2010      	movs	r0, #16
 8003058:	b2d9      	uxtb	r1, r3
 800305a:	b909      	cbnz	r1, 8003060 <__lo0bits+0x32>
 800305c:	3008      	adds	r0, #8
 800305e:	0a1b      	lsrs	r3, r3, #8
 8003060:	0719      	lsls	r1, r3, #28
 8003062:	bf04      	itt	eq
 8003064:	091b      	lsreq	r3, r3, #4
 8003066:	3004      	addeq	r0, #4
 8003068:	0799      	lsls	r1, r3, #30
 800306a:	bf04      	itt	eq
 800306c:	089b      	lsreq	r3, r3, #2
 800306e:	3002      	addeq	r0, #2
 8003070:	07d9      	lsls	r1, r3, #31
 8003072:	d403      	bmi.n	800307c <__lo0bits+0x4e>
 8003074:	085b      	lsrs	r3, r3, #1
 8003076:	f100 0001 	add.w	r0, r0, #1
 800307a:	d003      	beq.n	8003084 <__lo0bits+0x56>
 800307c:	6013      	str	r3, [r2, #0]
 800307e:	4770      	bx	lr
 8003080:	2000      	movs	r0, #0
 8003082:	4770      	bx	lr
 8003084:	2020      	movs	r0, #32
 8003086:	4770      	bx	lr

08003088 <__i2b>:
 8003088:	b510      	push	{r4, lr}
 800308a:	460c      	mov	r4, r1
 800308c:	2101      	movs	r1, #1
 800308e:	f7ff ff07 	bl	8002ea0 <_Balloc>
 8003092:	4602      	mov	r2, r0
 8003094:	b928      	cbnz	r0, 80030a2 <__i2b+0x1a>
 8003096:	4b05      	ldr	r3, [pc, #20]	@ (80030ac <__i2b+0x24>)
 8003098:	4805      	ldr	r0, [pc, #20]	@ (80030b0 <__i2b+0x28>)
 800309a:	f240 1145 	movw	r1, #325	@ 0x145
 800309e:	f000 fcb5 	bl	8003a0c <__assert_func>
 80030a2:	2301      	movs	r3, #1
 80030a4:	6144      	str	r4, [r0, #20]
 80030a6:	6103      	str	r3, [r0, #16]
 80030a8:	bd10      	pop	{r4, pc}
 80030aa:	bf00      	nop
 80030ac:	08004173 	.word	0x08004173
 80030b0:	08004184 	.word	0x08004184

080030b4 <__multiply>:
 80030b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80030b8:	4617      	mov	r7, r2
 80030ba:	690a      	ldr	r2, [r1, #16]
 80030bc:	693b      	ldr	r3, [r7, #16]
 80030be:	429a      	cmp	r2, r3
 80030c0:	bfa8      	it	ge
 80030c2:	463b      	movge	r3, r7
 80030c4:	4689      	mov	r9, r1
 80030c6:	bfa4      	itt	ge
 80030c8:	460f      	movge	r7, r1
 80030ca:	4699      	movge	r9, r3
 80030cc:	693d      	ldr	r5, [r7, #16]
 80030ce:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80030d2:	68bb      	ldr	r3, [r7, #8]
 80030d4:	6879      	ldr	r1, [r7, #4]
 80030d6:	eb05 060a 	add.w	r6, r5, sl
 80030da:	42b3      	cmp	r3, r6
 80030dc:	b085      	sub	sp, #20
 80030de:	bfb8      	it	lt
 80030e0:	3101      	addlt	r1, #1
 80030e2:	f7ff fedd 	bl	8002ea0 <_Balloc>
 80030e6:	b930      	cbnz	r0, 80030f6 <__multiply+0x42>
 80030e8:	4602      	mov	r2, r0
 80030ea:	4b41      	ldr	r3, [pc, #260]	@ (80031f0 <__multiply+0x13c>)
 80030ec:	4841      	ldr	r0, [pc, #260]	@ (80031f4 <__multiply+0x140>)
 80030ee:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80030f2:	f000 fc8b 	bl	8003a0c <__assert_func>
 80030f6:	f100 0414 	add.w	r4, r0, #20
 80030fa:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 80030fe:	4623      	mov	r3, r4
 8003100:	2200      	movs	r2, #0
 8003102:	4573      	cmp	r3, lr
 8003104:	d320      	bcc.n	8003148 <__multiply+0x94>
 8003106:	f107 0814 	add.w	r8, r7, #20
 800310a:	f109 0114 	add.w	r1, r9, #20
 800310e:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8003112:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 8003116:	9302      	str	r3, [sp, #8]
 8003118:	1beb      	subs	r3, r5, r7
 800311a:	3b15      	subs	r3, #21
 800311c:	f023 0303 	bic.w	r3, r3, #3
 8003120:	3304      	adds	r3, #4
 8003122:	3715      	adds	r7, #21
 8003124:	42bd      	cmp	r5, r7
 8003126:	bf38      	it	cc
 8003128:	2304      	movcc	r3, #4
 800312a:	9301      	str	r3, [sp, #4]
 800312c:	9b02      	ldr	r3, [sp, #8]
 800312e:	9103      	str	r1, [sp, #12]
 8003130:	428b      	cmp	r3, r1
 8003132:	d80c      	bhi.n	800314e <__multiply+0x9a>
 8003134:	2e00      	cmp	r6, #0
 8003136:	dd03      	ble.n	8003140 <__multiply+0x8c>
 8003138:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 800313c:	2b00      	cmp	r3, #0
 800313e:	d055      	beq.n	80031ec <__multiply+0x138>
 8003140:	6106      	str	r6, [r0, #16]
 8003142:	b005      	add	sp, #20
 8003144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003148:	f843 2b04 	str.w	r2, [r3], #4
 800314c:	e7d9      	b.n	8003102 <__multiply+0x4e>
 800314e:	f8b1 a000 	ldrh.w	sl, [r1]
 8003152:	f1ba 0f00 	cmp.w	sl, #0
 8003156:	d01f      	beq.n	8003198 <__multiply+0xe4>
 8003158:	46c4      	mov	ip, r8
 800315a:	46a1      	mov	r9, r4
 800315c:	2700      	movs	r7, #0
 800315e:	f85c 2b04 	ldr.w	r2, [ip], #4
 8003162:	f8d9 3000 	ldr.w	r3, [r9]
 8003166:	fa1f fb82 	uxth.w	fp, r2
 800316a:	b29b      	uxth	r3, r3
 800316c:	fb0a 330b 	mla	r3, sl, fp, r3
 8003170:	443b      	add	r3, r7
 8003172:	f8d9 7000 	ldr.w	r7, [r9]
 8003176:	0c12      	lsrs	r2, r2, #16
 8003178:	0c3f      	lsrs	r7, r7, #16
 800317a:	fb0a 7202 	mla	r2, sl, r2, r7
 800317e:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 8003182:	b29b      	uxth	r3, r3
 8003184:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003188:	4565      	cmp	r5, ip
 800318a:	f849 3b04 	str.w	r3, [r9], #4
 800318e:	ea4f 4712 	mov.w	r7, r2, lsr #16
 8003192:	d8e4      	bhi.n	800315e <__multiply+0xaa>
 8003194:	9b01      	ldr	r3, [sp, #4]
 8003196:	50e7      	str	r7, [r4, r3]
 8003198:	9b03      	ldr	r3, [sp, #12]
 800319a:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800319e:	3104      	adds	r1, #4
 80031a0:	f1b9 0f00 	cmp.w	r9, #0
 80031a4:	d020      	beq.n	80031e8 <__multiply+0x134>
 80031a6:	6823      	ldr	r3, [r4, #0]
 80031a8:	4647      	mov	r7, r8
 80031aa:	46a4      	mov	ip, r4
 80031ac:	f04f 0a00 	mov.w	sl, #0
 80031b0:	f8b7 b000 	ldrh.w	fp, [r7]
 80031b4:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 80031b8:	fb09 220b 	mla	r2, r9, fp, r2
 80031bc:	4452      	add	r2, sl
 80031be:	b29b      	uxth	r3, r3
 80031c0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80031c4:	f84c 3b04 	str.w	r3, [ip], #4
 80031c8:	f857 3b04 	ldr.w	r3, [r7], #4
 80031cc:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80031d0:	f8bc 3000 	ldrh.w	r3, [ip]
 80031d4:	fb09 330a 	mla	r3, r9, sl, r3
 80031d8:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 80031dc:	42bd      	cmp	r5, r7
 80031de:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80031e2:	d8e5      	bhi.n	80031b0 <__multiply+0xfc>
 80031e4:	9a01      	ldr	r2, [sp, #4]
 80031e6:	50a3      	str	r3, [r4, r2]
 80031e8:	3404      	adds	r4, #4
 80031ea:	e79f      	b.n	800312c <__multiply+0x78>
 80031ec:	3e01      	subs	r6, #1
 80031ee:	e7a1      	b.n	8003134 <__multiply+0x80>
 80031f0:	08004173 	.word	0x08004173
 80031f4:	08004184 	.word	0x08004184

080031f8 <__pow5mult>:
 80031f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80031fc:	4615      	mov	r5, r2
 80031fe:	f012 0203 	ands.w	r2, r2, #3
 8003202:	4607      	mov	r7, r0
 8003204:	460e      	mov	r6, r1
 8003206:	d007      	beq.n	8003218 <__pow5mult+0x20>
 8003208:	4c25      	ldr	r4, [pc, #148]	@ (80032a0 <__pow5mult+0xa8>)
 800320a:	3a01      	subs	r2, #1
 800320c:	2300      	movs	r3, #0
 800320e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003212:	f7ff fea7 	bl	8002f64 <__multadd>
 8003216:	4606      	mov	r6, r0
 8003218:	10ad      	asrs	r5, r5, #2
 800321a:	d03d      	beq.n	8003298 <__pow5mult+0xa0>
 800321c:	69fc      	ldr	r4, [r7, #28]
 800321e:	b97c      	cbnz	r4, 8003240 <__pow5mult+0x48>
 8003220:	2010      	movs	r0, #16
 8003222:	f7ff fd87 	bl	8002d34 <malloc>
 8003226:	4602      	mov	r2, r0
 8003228:	61f8      	str	r0, [r7, #28]
 800322a:	b928      	cbnz	r0, 8003238 <__pow5mult+0x40>
 800322c:	4b1d      	ldr	r3, [pc, #116]	@ (80032a4 <__pow5mult+0xac>)
 800322e:	481e      	ldr	r0, [pc, #120]	@ (80032a8 <__pow5mult+0xb0>)
 8003230:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003234:	f000 fbea 	bl	8003a0c <__assert_func>
 8003238:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800323c:	6004      	str	r4, [r0, #0]
 800323e:	60c4      	str	r4, [r0, #12]
 8003240:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8003244:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003248:	b94c      	cbnz	r4, 800325e <__pow5mult+0x66>
 800324a:	f240 2171 	movw	r1, #625	@ 0x271
 800324e:	4638      	mov	r0, r7
 8003250:	f7ff ff1a 	bl	8003088 <__i2b>
 8003254:	2300      	movs	r3, #0
 8003256:	f8c8 0008 	str.w	r0, [r8, #8]
 800325a:	4604      	mov	r4, r0
 800325c:	6003      	str	r3, [r0, #0]
 800325e:	f04f 0900 	mov.w	r9, #0
 8003262:	07eb      	lsls	r3, r5, #31
 8003264:	d50a      	bpl.n	800327c <__pow5mult+0x84>
 8003266:	4631      	mov	r1, r6
 8003268:	4622      	mov	r2, r4
 800326a:	4638      	mov	r0, r7
 800326c:	f7ff ff22 	bl	80030b4 <__multiply>
 8003270:	4631      	mov	r1, r6
 8003272:	4680      	mov	r8, r0
 8003274:	4638      	mov	r0, r7
 8003276:	f7ff fe53 	bl	8002f20 <_Bfree>
 800327a:	4646      	mov	r6, r8
 800327c:	106d      	asrs	r5, r5, #1
 800327e:	d00b      	beq.n	8003298 <__pow5mult+0xa0>
 8003280:	6820      	ldr	r0, [r4, #0]
 8003282:	b938      	cbnz	r0, 8003294 <__pow5mult+0x9c>
 8003284:	4622      	mov	r2, r4
 8003286:	4621      	mov	r1, r4
 8003288:	4638      	mov	r0, r7
 800328a:	f7ff ff13 	bl	80030b4 <__multiply>
 800328e:	6020      	str	r0, [r4, #0]
 8003290:	f8c0 9000 	str.w	r9, [r0]
 8003294:	4604      	mov	r4, r0
 8003296:	e7e4      	b.n	8003262 <__pow5mult+0x6a>
 8003298:	4630      	mov	r0, r6
 800329a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800329e:	bf00      	nop
 80032a0:	08004234 	.word	0x08004234
 80032a4:	08004104 	.word	0x08004104
 80032a8:	08004184 	.word	0x08004184

080032ac <__lshift>:
 80032ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80032b0:	460c      	mov	r4, r1
 80032b2:	6849      	ldr	r1, [r1, #4]
 80032b4:	6923      	ldr	r3, [r4, #16]
 80032b6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80032ba:	68a3      	ldr	r3, [r4, #8]
 80032bc:	4607      	mov	r7, r0
 80032be:	4691      	mov	r9, r2
 80032c0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80032c4:	f108 0601 	add.w	r6, r8, #1
 80032c8:	42b3      	cmp	r3, r6
 80032ca:	db0b      	blt.n	80032e4 <__lshift+0x38>
 80032cc:	4638      	mov	r0, r7
 80032ce:	f7ff fde7 	bl	8002ea0 <_Balloc>
 80032d2:	4605      	mov	r5, r0
 80032d4:	b948      	cbnz	r0, 80032ea <__lshift+0x3e>
 80032d6:	4602      	mov	r2, r0
 80032d8:	4b28      	ldr	r3, [pc, #160]	@ (800337c <__lshift+0xd0>)
 80032da:	4829      	ldr	r0, [pc, #164]	@ (8003380 <__lshift+0xd4>)
 80032dc:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80032e0:	f000 fb94 	bl	8003a0c <__assert_func>
 80032e4:	3101      	adds	r1, #1
 80032e6:	005b      	lsls	r3, r3, #1
 80032e8:	e7ee      	b.n	80032c8 <__lshift+0x1c>
 80032ea:	2300      	movs	r3, #0
 80032ec:	f100 0114 	add.w	r1, r0, #20
 80032f0:	f100 0210 	add.w	r2, r0, #16
 80032f4:	4618      	mov	r0, r3
 80032f6:	4553      	cmp	r3, sl
 80032f8:	db33      	blt.n	8003362 <__lshift+0xb6>
 80032fa:	6920      	ldr	r0, [r4, #16]
 80032fc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003300:	f104 0314 	add.w	r3, r4, #20
 8003304:	f019 091f 	ands.w	r9, r9, #31
 8003308:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800330c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003310:	d02b      	beq.n	800336a <__lshift+0xbe>
 8003312:	f1c9 0e20 	rsb	lr, r9, #32
 8003316:	468a      	mov	sl, r1
 8003318:	2200      	movs	r2, #0
 800331a:	6818      	ldr	r0, [r3, #0]
 800331c:	fa00 f009 	lsl.w	r0, r0, r9
 8003320:	4310      	orrs	r0, r2
 8003322:	f84a 0b04 	str.w	r0, [sl], #4
 8003326:	f853 2b04 	ldr.w	r2, [r3], #4
 800332a:	459c      	cmp	ip, r3
 800332c:	fa22 f20e 	lsr.w	r2, r2, lr
 8003330:	d8f3      	bhi.n	800331a <__lshift+0x6e>
 8003332:	ebac 0304 	sub.w	r3, ip, r4
 8003336:	3b15      	subs	r3, #21
 8003338:	f023 0303 	bic.w	r3, r3, #3
 800333c:	3304      	adds	r3, #4
 800333e:	f104 0015 	add.w	r0, r4, #21
 8003342:	4560      	cmp	r0, ip
 8003344:	bf88      	it	hi
 8003346:	2304      	movhi	r3, #4
 8003348:	50ca      	str	r2, [r1, r3]
 800334a:	b10a      	cbz	r2, 8003350 <__lshift+0xa4>
 800334c:	f108 0602 	add.w	r6, r8, #2
 8003350:	3e01      	subs	r6, #1
 8003352:	4638      	mov	r0, r7
 8003354:	612e      	str	r6, [r5, #16]
 8003356:	4621      	mov	r1, r4
 8003358:	f7ff fde2 	bl	8002f20 <_Bfree>
 800335c:	4628      	mov	r0, r5
 800335e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003362:	f842 0f04 	str.w	r0, [r2, #4]!
 8003366:	3301      	adds	r3, #1
 8003368:	e7c5      	b.n	80032f6 <__lshift+0x4a>
 800336a:	3904      	subs	r1, #4
 800336c:	f853 2b04 	ldr.w	r2, [r3], #4
 8003370:	f841 2f04 	str.w	r2, [r1, #4]!
 8003374:	459c      	cmp	ip, r3
 8003376:	d8f9      	bhi.n	800336c <__lshift+0xc0>
 8003378:	e7ea      	b.n	8003350 <__lshift+0xa4>
 800337a:	bf00      	nop
 800337c:	08004173 	.word	0x08004173
 8003380:	08004184 	.word	0x08004184

08003384 <__mcmp>:
 8003384:	690a      	ldr	r2, [r1, #16]
 8003386:	4603      	mov	r3, r0
 8003388:	6900      	ldr	r0, [r0, #16]
 800338a:	1a80      	subs	r0, r0, r2
 800338c:	b530      	push	{r4, r5, lr}
 800338e:	d10e      	bne.n	80033ae <__mcmp+0x2a>
 8003390:	3314      	adds	r3, #20
 8003392:	3114      	adds	r1, #20
 8003394:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003398:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800339c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80033a0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80033a4:	4295      	cmp	r5, r2
 80033a6:	d003      	beq.n	80033b0 <__mcmp+0x2c>
 80033a8:	d205      	bcs.n	80033b6 <__mcmp+0x32>
 80033aa:	f04f 30ff 	mov.w	r0, #4294967295
 80033ae:	bd30      	pop	{r4, r5, pc}
 80033b0:	42a3      	cmp	r3, r4
 80033b2:	d3f3      	bcc.n	800339c <__mcmp+0x18>
 80033b4:	e7fb      	b.n	80033ae <__mcmp+0x2a>
 80033b6:	2001      	movs	r0, #1
 80033b8:	e7f9      	b.n	80033ae <__mcmp+0x2a>
	...

080033bc <__mdiff>:
 80033bc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80033c0:	4689      	mov	r9, r1
 80033c2:	4606      	mov	r6, r0
 80033c4:	4611      	mov	r1, r2
 80033c6:	4648      	mov	r0, r9
 80033c8:	4614      	mov	r4, r2
 80033ca:	f7ff ffdb 	bl	8003384 <__mcmp>
 80033ce:	1e05      	subs	r5, r0, #0
 80033d0:	d112      	bne.n	80033f8 <__mdiff+0x3c>
 80033d2:	4629      	mov	r1, r5
 80033d4:	4630      	mov	r0, r6
 80033d6:	f7ff fd63 	bl	8002ea0 <_Balloc>
 80033da:	4602      	mov	r2, r0
 80033dc:	b928      	cbnz	r0, 80033ea <__mdiff+0x2e>
 80033de:	4b3f      	ldr	r3, [pc, #252]	@ (80034dc <__mdiff+0x120>)
 80033e0:	f240 2137 	movw	r1, #567	@ 0x237
 80033e4:	483e      	ldr	r0, [pc, #248]	@ (80034e0 <__mdiff+0x124>)
 80033e6:	f000 fb11 	bl	8003a0c <__assert_func>
 80033ea:	2301      	movs	r3, #1
 80033ec:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80033f0:	4610      	mov	r0, r2
 80033f2:	b003      	add	sp, #12
 80033f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80033f8:	bfbc      	itt	lt
 80033fa:	464b      	movlt	r3, r9
 80033fc:	46a1      	movlt	r9, r4
 80033fe:	4630      	mov	r0, r6
 8003400:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003404:	bfba      	itte	lt
 8003406:	461c      	movlt	r4, r3
 8003408:	2501      	movlt	r5, #1
 800340a:	2500      	movge	r5, #0
 800340c:	f7ff fd48 	bl	8002ea0 <_Balloc>
 8003410:	4602      	mov	r2, r0
 8003412:	b918      	cbnz	r0, 800341c <__mdiff+0x60>
 8003414:	4b31      	ldr	r3, [pc, #196]	@ (80034dc <__mdiff+0x120>)
 8003416:	f240 2145 	movw	r1, #581	@ 0x245
 800341a:	e7e3      	b.n	80033e4 <__mdiff+0x28>
 800341c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003420:	6926      	ldr	r6, [r4, #16]
 8003422:	60c5      	str	r5, [r0, #12]
 8003424:	f109 0310 	add.w	r3, r9, #16
 8003428:	f109 0514 	add.w	r5, r9, #20
 800342c:	f104 0e14 	add.w	lr, r4, #20
 8003430:	f100 0b14 	add.w	fp, r0, #20
 8003434:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003438:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800343c:	9301      	str	r3, [sp, #4]
 800343e:	46d9      	mov	r9, fp
 8003440:	f04f 0c00 	mov.w	ip, #0
 8003444:	9b01      	ldr	r3, [sp, #4]
 8003446:	f85e 0b04 	ldr.w	r0, [lr], #4
 800344a:	f853 af04 	ldr.w	sl, [r3, #4]!
 800344e:	9301      	str	r3, [sp, #4]
 8003450:	fa1f f38a 	uxth.w	r3, sl
 8003454:	4619      	mov	r1, r3
 8003456:	b283      	uxth	r3, r0
 8003458:	1acb      	subs	r3, r1, r3
 800345a:	0c00      	lsrs	r0, r0, #16
 800345c:	4463      	add	r3, ip
 800345e:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003462:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003466:	b29b      	uxth	r3, r3
 8003468:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800346c:	4576      	cmp	r6, lr
 800346e:	f849 3b04 	str.w	r3, [r9], #4
 8003472:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003476:	d8e5      	bhi.n	8003444 <__mdiff+0x88>
 8003478:	1b33      	subs	r3, r6, r4
 800347a:	3b15      	subs	r3, #21
 800347c:	f023 0303 	bic.w	r3, r3, #3
 8003480:	3415      	adds	r4, #21
 8003482:	3304      	adds	r3, #4
 8003484:	42a6      	cmp	r6, r4
 8003486:	bf38      	it	cc
 8003488:	2304      	movcc	r3, #4
 800348a:	441d      	add	r5, r3
 800348c:	445b      	add	r3, fp
 800348e:	461e      	mov	r6, r3
 8003490:	462c      	mov	r4, r5
 8003492:	4544      	cmp	r4, r8
 8003494:	d30e      	bcc.n	80034b4 <__mdiff+0xf8>
 8003496:	f108 0103 	add.w	r1, r8, #3
 800349a:	1b49      	subs	r1, r1, r5
 800349c:	f021 0103 	bic.w	r1, r1, #3
 80034a0:	3d03      	subs	r5, #3
 80034a2:	45a8      	cmp	r8, r5
 80034a4:	bf38      	it	cc
 80034a6:	2100      	movcc	r1, #0
 80034a8:	440b      	add	r3, r1
 80034aa:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80034ae:	b191      	cbz	r1, 80034d6 <__mdiff+0x11a>
 80034b0:	6117      	str	r7, [r2, #16]
 80034b2:	e79d      	b.n	80033f0 <__mdiff+0x34>
 80034b4:	f854 1b04 	ldr.w	r1, [r4], #4
 80034b8:	46e6      	mov	lr, ip
 80034ba:	0c08      	lsrs	r0, r1, #16
 80034bc:	fa1c fc81 	uxtah	ip, ip, r1
 80034c0:	4471      	add	r1, lr
 80034c2:	eb00 402c 	add.w	r0, r0, ip, asr #16
 80034c6:	b289      	uxth	r1, r1
 80034c8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80034cc:	f846 1b04 	str.w	r1, [r6], #4
 80034d0:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80034d4:	e7dd      	b.n	8003492 <__mdiff+0xd6>
 80034d6:	3f01      	subs	r7, #1
 80034d8:	e7e7      	b.n	80034aa <__mdiff+0xee>
 80034da:	bf00      	nop
 80034dc:	08004173 	.word	0x08004173
 80034e0:	08004184 	.word	0x08004184

080034e4 <__d2b>:
 80034e4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80034e8:	460f      	mov	r7, r1
 80034ea:	2101      	movs	r1, #1
 80034ec:	ec59 8b10 	vmov	r8, r9, d0
 80034f0:	4616      	mov	r6, r2
 80034f2:	f7ff fcd5 	bl	8002ea0 <_Balloc>
 80034f6:	4604      	mov	r4, r0
 80034f8:	b930      	cbnz	r0, 8003508 <__d2b+0x24>
 80034fa:	4602      	mov	r2, r0
 80034fc:	4b23      	ldr	r3, [pc, #140]	@ (800358c <__d2b+0xa8>)
 80034fe:	4824      	ldr	r0, [pc, #144]	@ (8003590 <__d2b+0xac>)
 8003500:	f240 310f 	movw	r1, #783	@ 0x30f
 8003504:	f000 fa82 	bl	8003a0c <__assert_func>
 8003508:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800350c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003510:	b10d      	cbz	r5, 8003516 <__d2b+0x32>
 8003512:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003516:	9301      	str	r3, [sp, #4]
 8003518:	f1b8 0300 	subs.w	r3, r8, #0
 800351c:	d023      	beq.n	8003566 <__d2b+0x82>
 800351e:	4668      	mov	r0, sp
 8003520:	9300      	str	r3, [sp, #0]
 8003522:	f7ff fd84 	bl	800302e <__lo0bits>
 8003526:	e9dd 1200 	ldrd	r1, r2, [sp]
 800352a:	b1d0      	cbz	r0, 8003562 <__d2b+0x7e>
 800352c:	f1c0 0320 	rsb	r3, r0, #32
 8003530:	fa02 f303 	lsl.w	r3, r2, r3
 8003534:	430b      	orrs	r3, r1
 8003536:	40c2      	lsrs	r2, r0
 8003538:	6163      	str	r3, [r4, #20]
 800353a:	9201      	str	r2, [sp, #4]
 800353c:	9b01      	ldr	r3, [sp, #4]
 800353e:	61a3      	str	r3, [r4, #24]
 8003540:	2b00      	cmp	r3, #0
 8003542:	bf0c      	ite	eq
 8003544:	2201      	moveq	r2, #1
 8003546:	2202      	movne	r2, #2
 8003548:	6122      	str	r2, [r4, #16]
 800354a:	b1a5      	cbz	r5, 8003576 <__d2b+0x92>
 800354c:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003550:	4405      	add	r5, r0
 8003552:	603d      	str	r5, [r7, #0]
 8003554:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003558:	6030      	str	r0, [r6, #0]
 800355a:	4620      	mov	r0, r4
 800355c:	b003      	add	sp, #12
 800355e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003562:	6161      	str	r1, [r4, #20]
 8003564:	e7ea      	b.n	800353c <__d2b+0x58>
 8003566:	a801      	add	r0, sp, #4
 8003568:	f7ff fd61 	bl	800302e <__lo0bits>
 800356c:	9b01      	ldr	r3, [sp, #4]
 800356e:	6163      	str	r3, [r4, #20]
 8003570:	3020      	adds	r0, #32
 8003572:	2201      	movs	r2, #1
 8003574:	e7e8      	b.n	8003548 <__d2b+0x64>
 8003576:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800357a:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800357e:	6038      	str	r0, [r7, #0]
 8003580:	6918      	ldr	r0, [r3, #16]
 8003582:	f7ff fd35 	bl	8002ff0 <__hi0bits>
 8003586:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800358a:	e7e5      	b.n	8003558 <__d2b+0x74>
 800358c:	08004173 	.word	0x08004173
 8003590:	08004184 	.word	0x08004184

08003594 <__ssputs_r>:
 8003594:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003598:	688e      	ldr	r6, [r1, #8]
 800359a:	461f      	mov	r7, r3
 800359c:	42be      	cmp	r6, r7
 800359e:	680b      	ldr	r3, [r1, #0]
 80035a0:	4682      	mov	sl, r0
 80035a2:	460c      	mov	r4, r1
 80035a4:	4690      	mov	r8, r2
 80035a6:	d82d      	bhi.n	8003604 <__ssputs_r+0x70>
 80035a8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80035ac:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80035b0:	d026      	beq.n	8003600 <__ssputs_r+0x6c>
 80035b2:	6965      	ldr	r5, [r4, #20]
 80035b4:	6909      	ldr	r1, [r1, #16]
 80035b6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80035ba:	eba3 0901 	sub.w	r9, r3, r1
 80035be:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80035c2:	1c7b      	adds	r3, r7, #1
 80035c4:	444b      	add	r3, r9
 80035c6:	106d      	asrs	r5, r5, #1
 80035c8:	429d      	cmp	r5, r3
 80035ca:	bf38      	it	cc
 80035cc:	461d      	movcc	r5, r3
 80035ce:	0553      	lsls	r3, r2, #21
 80035d0:	d527      	bpl.n	8003622 <__ssputs_r+0x8e>
 80035d2:	4629      	mov	r1, r5
 80035d4:	f7ff fbd8 	bl	8002d88 <_malloc_r>
 80035d8:	4606      	mov	r6, r0
 80035da:	b360      	cbz	r0, 8003636 <__ssputs_r+0xa2>
 80035dc:	6921      	ldr	r1, [r4, #16]
 80035de:	464a      	mov	r2, r9
 80035e0:	f000 fa06 	bl	80039f0 <memcpy>
 80035e4:	89a3      	ldrh	r3, [r4, #12]
 80035e6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80035ea:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80035ee:	81a3      	strh	r3, [r4, #12]
 80035f0:	6126      	str	r6, [r4, #16]
 80035f2:	6165      	str	r5, [r4, #20]
 80035f4:	444e      	add	r6, r9
 80035f6:	eba5 0509 	sub.w	r5, r5, r9
 80035fa:	6026      	str	r6, [r4, #0]
 80035fc:	60a5      	str	r5, [r4, #8]
 80035fe:	463e      	mov	r6, r7
 8003600:	42be      	cmp	r6, r7
 8003602:	d900      	bls.n	8003606 <__ssputs_r+0x72>
 8003604:	463e      	mov	r6, r7
 8003606:	6820      	ldr	r0, [r4, #0]
 8003608:	4632      	mov	r2, r6
 800360a:	4641      	mov	r1, r8
 800360c:	f000 f9c6 	bl	800399c <memmove>
 8003610:	68a3      	ldr	r3, [r4, #8]
 8003612:	1b9b      	subs	r3, r3, r6
 8003614:	60a3      	str	r3, [r4, #8]
 8003616:	6823      	ldr	r3, [r4, #0]
 8003618:	4433      	add	r3, r6
 800361a:	6023      	str	r3, [r4, #0]
 800361c:	2000      	movs	r0, #0
 800361e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003622:	462a      	mov	r2, r5
 8003624:	f000 fa36 	bl	8003a94 <_realloc_r>
 8003628:	4606      	mov	r6, r0
 800362a:	2800      	cmp	r0, #0
 800362c:	d1e0      	bne.n	80035f0 <__ssputs_r+0x5c>
 800362e:	6921      	ldr	r1, [r4, #16]
 8003630:	4650      	mov	r0, sl
 8003632:	f7ff fb35 	bl	8002ca0 <_free_r>
 8003636:	230c      	movs	r3, #12
 8003638:	f8ca 3000 	str.w	r3, [sl]
 800363c:	89a3      	ldrh	r3, [r4, #12]
 800363e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003642:	81a3      	strh	r3, [r4, #12]
 8003644:	f04f 30ff 	mov.w	r0, #4294967295
 8003648:	e7e9      	b.n	800361e <__ssputs_r+0x8a>
	...

0800364c <_svfiprintf_r>:
 800364c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003650:	4698      	mov	r8, r3
 8003652:	898b      	ldrh	r3, [r1, #12]
 8003654:	061b      	lsls	r3, r3, #24
 8003656:	b09d      	sub	sp, #116	@ 0x74
 8003658:	4607      	mov	r7, r0
 800365a:	460d      	mov	r5, r1
 800365c:	4614      	mov	r4, r2
 800365e:	d510      	bpl.n	8003682 <_svfiprintf_r+0x36>
 8003660:	690b      	ldr	r3, [r1, #16]
 8003662:	b973      	cbnz	r3, 8003682 <_svfiprintf_r+0x36>
 8003664:	2140      	movs	r1, #64	@ 0x40
 8003666:	f7ff fb8f 	bl	8002d88 <_malloc_r>
 800366a:	6028      	str	r0, [r5, #0]
 800366c:	6128      	str	r0, [r5, #16]
 800366e:	b930      	cbnz	r0, 800367e <_svfiprintf_r+0x32>
 8003670:	230c      	movs	r3, #12
 8003672:	603b      	str	r3, [r7, #0]
 8003674:	f04f 30ff 	mov.w	r0, #4294967295
 8003678:	b01d      	add	sp, #116	@ 0x74
 800367a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800367e:	2340      	movs	r3, #64	@ 0x40
 8003680:	616b      	str	r3, [r5, #20]
 8003682:	2300      	movs	r3, #0
 8003684:	9309      	str	r3, [sp, #36]	@ 0x24
 8003686:	2320      	movs	r3, #32
 8003688:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800368c:	f8cd 800c 	str.w	r8, [sp, #12]
 8003690:	2330      	movs	r3, #48	@ 0x30
 8003692:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8003830 <_svfiprintf_r+0x1e4>
 8003696:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800369a:	f04f 0901 	mov.w	r9, #1
 800369e:	4623      	mov	r3, r4
 80036a0:	469a      	mov	sl, r3
 80036a2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80036a6:	b10a      	cbz	r2, 80036ac <_svfiprintf_r+0x60>
 80036a8:	2a25      	cmp	r2, #37	@ 0x25
 80036aa:	d1f9      	bne.n	80036a0 <_svfiprintf_r+0x54>
 80036ac:	ebba 0b04 	subs.w	fp, sl, r4
 80036b0:	d00b      	beq.n	80036ca <_svfiprintf_r+0x7e>
 80036b2:	465b      	mov	r3, fp
 80036b4:	4622      	mov	r2, r4
 80036b6:	4629      	mov	r1, r5
 80036b8:	4638      	mov	r0, r7
 80036ba:	f7ff ff6b 	bl	8003594 <__ssputs_r>
 80036be:	3001      	adds	r0, #1
 80036c0:	f000 80a7 	beq.w	8003812 <_svfiprintf_r+0x1c6>
 80036c4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80036c6:	445a      	add	r2, fp
 80036c8:	9209      	str	r2, [sp, #36]	@ 0x24
 80036ca:	f89a 3000 	ldrb.w	r3, [sl]
 80036ce:	2b00      	cmp	r3, #0
 80036d0:	f000 809f 	beq.w	8003812 <_svfiprintf_r+0x1c6>
 80036d4:	2300      	movs	r3, #0
 80036d6:	f04f 32ff 	mov.w	r2, #4294967295
 80036da:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80036de:	f10a 0a01 	add.w	sl, sl, #1
 80036e2:	9304      	str	r3, [sp, #16]
 80036e4:	9307      	str	r3, [sp, #28]
 80036e6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80036ea:	931a      	str	r3, [sp, #104]	@ 0x68
 80036ec:	4654      	mov	r4, sl
 80036ee:	2205      	movs	r2, #5
 80036f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80036f4:	484e      	ldr	r0, [pc, #312]	@ (8003830 <_svfiprintf_r+0x1e4>)
 80036f6:	f7fc fd73 	bl	80001e0 <memchr>
 80036fa:	9a04      	ldr	r2, [sp, #16]
 80036fc:	b9d8      	cbnz	r0, 8003736 <_svfiprintf_r+0xea>
 80036fe:	06d0      	lsls	r0, r2, #27
 8003700:	bf44      	itt	mi
 8003702:	2320      	movmi	r3, #32
 8003704:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003708:	0711      	lsls	r1, r2, #28
 800370a:	bf44      	itt	mi
 800370c:	232b      	movmi	r3, #43	@ 0x2b
 800370e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003712:	f89a 3000 	ldrb.w	r3, [sl]
 8003716:	2b2a      	cmp	r3, #42	@ 0x2a
 8003718:	d015      	beq.n	8003746 <_svfiprintf_r+0xfa>
 800371a:	9a07      	ldr	r2, [sp, #28]
 800371c:	4654      	mov	r4, sl
 800371e:	2000      	movs	r0, #0
 8003720:	f04f 0c0a 	mov.w	ip, #10
 8003724:	4621      	mov	r1, r4
 8003726:	f811 3b01 	ldrb.w	r3, [r1], #1
 800372a:	3b30      	subs	r3, #48	@ 0x30
 800372c:	2b09      	cmp	r3, #9
 800372e:	d94b      	bls.n	80037c8 <_svfiprintf_r+0x17c>
 8003730:	b1b0      	cbz	r0, 8003760 <_svfiprintf_r+0x114>
 8003732:	9207      	str	r2, [sp, #28]
 8003734:	e014      	b.n	8003760 <_svfiprintf_r+0x114>
 8003736:	eba0 0308 	sub.w	r3, r0, r8
 800373a:	fa09 f303 	lsl.w	r3, r9, r3
 800373e:	4313      	orrs	r3, r2
 8003740:	9304      	str	r3, [sp, #16]
 8003742:	46a2      	mov	sl, r4
 8003744:	e7d2      	b.n	80036ec <_svfiprintf_r+0xa0>
 8003746:	9b03      	ldr	r3, [sp, #12]
 8003748:	1d19      	adds	r1, r3, #4
 800374a:	681b      	ldr	r3, [r3, #0]
 800374c:	9103      	str	r1, [sp, #12]
 800374e:	2b00      	cmp	r3, #0
 8003750:	bfbb      	ittet	lt
 8003752:	425b      	neglt	r3, r3
 8003754:	f042 0202 	orrlt.w	r2, r2, #2
 8003758:	9307      	strge	r3, [sp, #28]
 800375a:	9307      	strlt	r3, [sp, #28]
 800375c:	bfb8      	it	lt
 800375e:	9204      	strlt	r2, [sp, #16]
 8003760:	7823      	ldrb	r3, [r4, #0]
 8003762:	2b2e      	cmp	r3, #46	@ 0x2e
 8003764:	d10a      	bne.n	800377c <_svfiprintf_r+0x130>
 8003766:	7863      	ldrb	r3, [r4, #1]
 8003768:	2b2a      	cmp	r3, #42	@ 0x2a
 800376a:	d132      	bne.n	80037d2 <_svfiprintf_r+0x186>
 800376c:	9b03      	ldr	r3, [sp, #12]
 800376e:	1d1a      	adds	r2, r3, #4
 8003770:	681b      	ldr	r3, [r3, #0]
 8003772:	9203      	str	r2, [sp, #12]
 8003774:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003778:	3402      	adds	r4, #2
 800377a:	9305      	str	r3, [sp, #20]
 800377c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8003840 <_svfiprintf_r+0x1f4>
 8003780:	7821      	ldrb	r1, [r4, #0]
 8003782:	2203      	movs	r2, #3
 8003784:	4650      	mov	r0, sl
 8003786:	f7fc fd2b 	bl	80001e0 <memchr>
 800378a:	b138      	cbz	r0, 800379c <_svfiprintf_r+0x150>
 800378c:	9b04      	ldr	r3, [sp, #16]
 800378e:	eba0 000a 	sub.w	r0, r0, sl
 8003792:	2240      	movs	r2, #64	@ 0x40
 8003794:	4082      	lsls	r2, r0
 8003796:	4313      	orrs	r3, r2
 8003798:	3401      	adds	r4, #1
 800379a:	9304      	str	r3, [sp, #16]
 800379c:	f814 1b01 	ldrb.w	r1, [r4], #1
 80037a0:	4824      	ldr	r0, [pc, #144]	@ (8003834 <_svfiprintf_r+0x1e8>)
 80037a2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80037a6:	2206      	movs	r2, #6
 80037a8:	f7fc fd1a 	bl	80001e0 <memchr>
 80037ac:	2800      	cmp	r0, #0
 80037ae:	d036      	beq.n	800381e <_svfiprintf_r+0x1d2>
 80037b0:	4b21      	ldr	r3, [pc, #132]	@ (8003838 <_svfiprintf_r+0x1ec>)
 80037b2:	bb1b      	cbnz	r3, 80037fc <_svfiprintf_r+0x1b0>
 80037b4:	9b03      	ldr	r3, [sp, #12]
 80037b6:	3307      	adds	r3, #7
 80037b8:	f023 0307 	bic.w	r3, r3, #7
 80037bc:	3308      	adds	r3, #8
 80037be:	9303      	str	r3, [sp, #12]
 80037c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80037c2:	4433      	add	r3, r6
 80037c4:	9309      	str	r3, [sp, #36]	@ 0x24
 80037c6:	e76a      	b.n	800369e <_svfiprintf_r+0x52>
 80037c8:	fb0c 3202 	mla	r2, ip, r2, r3
 80037cc:	460c      	mov	r4, r1
 80037ce:	2001      	movs	r0, #1
 80037d0:	e7a8      	b.n	8003724 <_svfiprintf_r+0xd8>
 80037d2:	2300      	movs	r3, #0
 80037d4:	3401      	adds	r4, #1
 80037d6:	9305      	str	r3, [sp, #20]
 80037d8:	4619      	mov	r1, r3
 80037da:	f04f 0c0a 	mov.w	ip, #10
 80037de:	4620      	mov	r0, r4
 80037e0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80037e4:	3a30      	subs	r2, #48	@ 0x30
 80037e6:	2a09      	cmp	r2, #9
 80037e8:	d903      	bls.n	80037f2 <_svfiprintf_r+0x1a6>
 80037ea:	2b00      	cmp	r3, #0
 80037ec:	d0c6      	beq.n	800377c <_svfiprintf_r+0x130>
 80037ee:	9105      	str	r1, [sp, #20]
 80037f0:	e7c4      	b.n	800377c <_svfiprintf_r+0x130>
 80037f2:	fb0c 2101 	mla	r1, ip, r1, r2
 80037f6:	4604      	mov	r4, r0
 80037f8:	2301      	movs	r3, #1
 80037fa:	e7f0      	b.n	80037de <_svfiprintf_r+0x192>
 80037fc:	ab03      	add	r3, sp, #12
 80037fe:	9300      	str	r3, [sp, #0]
 8003800:	462a      	mov	r2, r5
 8003802:	4b0e      	ldr	r3, [pc, #56]	@ (800383c <_svfiprintf_r+0x1f0>)
 8003804:	a904      	add	r1, sp, #16
 8003806:	4638      	mov	r0, r7
 8003808:	f7fd fe94 	bl	8001534 <_printf_float>
 800380c:	1c42      	adds	r2, r0, #1
 800380e:	4606      	mov	r6, r0
 8003810:	d1d6      	bne.n	80037c0 <_svfiprintf_r+0x174>
 8003812:	89ab      	ldrh	r3, [r5, #12]
 8003814:	065b      	lsls	r3, r3, #25
 8003816:	f53f af2d 	bmi.w	8003674 <_svfiprintf_r+0x28>
 800381a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800381c:	e72c      	b.n	8003678 <_svfiprintf_r+0x2c>
 800381e:	ab03      	add	r3, sp, #12
 8003820:	9300      	str	r3, [sp, #0]
 8003822:	462a      	mov	r2, r5
 8003824:	4b05      	ldr	r3, [pc, #20]	@ (800383c <_svfiprintf_r+0x1f0>)
 8003826:	a904      	add	r1, sp, #16
 8003828:	4638      	mov	r0, r7
 800382a:	f7fe f91b 	bl	8001a64 <_printf_i>
 800382e:	e7ed      	b.n	800380c <_svfiprintf_r+0x1c0>
 8003830:	080041dd 	.word	0x080041dd
 8003834:	080041e7 	.word	0x080041e7
 8003838:	08001535 	.word	0x08001535
 800383c:	08003595 	.word	0x08003595
 8003840:	080041e3 	.word	0x080041e3

08003844 <__sflush_r>:
 8003844:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003848:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800384c:	0716      	lsls	r6, r2, #28
 800384e:	4605      	mov	r5, r0
 8003850:	460c      	mov	r4, r1
 8003852:	d454      	bmi.n	80038fe <__sflush_r+0xba>
 8003854:	684b      	ldr	r3, [r1, #4]
 8003856:	2b00      	cmp	r3, #0
 8003858:	dc02      	bgt.n	8003860 <__sflush_r+0x1c>
 800385a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800385c:	2b00      	cmp	r3, #0
 800385e:	dd48      	ble.n	80038f2 <__sflush_r+0xae>
 8003860:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003862:	2e00      	cmp	r6, #0
 8003864:	d045      	beq.n	80038f2 <__sflush_r+0xae>
 8003866:	2300      	movs	r3, #0
 8003868:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800386c:	682f      	ldr	r7, [r5, #0]
 800386e:	6a21      	ldr	r1, [r4, #32]
 8003870:	602b      	str	r3, [r5, #0]
 8003872:	d030      	beq.n	80038d6 <__sflush_r+0x92>
 8003874:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003876:	89a3      	ldrh	r3, [r4, #12]
 8003878:	0759      	lsls	r1, r3, #29
 800387a:	d505      	bpl.n	8003888 <__sflush_r+0x44>
 800387c:	6863      	ldr	r3, [r4, #4]
 800387e:	1ad2      	subs	r2, r2, r3
 8003880:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003882:	b10b      	cbz	r3, 8003888 <__sflush_r+0x44>
 8003884:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003886:	1ad2      	subs	r2, r2, r3
 8003888:	2300      	movs	r3, #0
 800388a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800388c:	6a21      	ldr	r1, [r4, #32]
 800388e:	4628      	mov	r0, r5
 8003890:	47b0      	blx	r6
 8003892:	1c43      	adds	r3, r0, #1
 8003894:	89a3      	ldrh	r3, [r4, #12]
 8003896:	d106      	bne.n	80038a6 <__sflush_r+0x62>
 8003898:	6829      	ldr	r1, [r5, #0]
 800389a:	291d      	cmp	r1, #29
 800389c:	d82b      	bhi.n	80038f6 <__sflush_r+0xb2>
 800389e:	4a2a      	ldr	r2, [pc, #168]	@ (8003948 <__sflush_r+0x104>)
 80038a0:	40ca      	lsrs	r2, r1
 80038a2:	07d6      	lsls	r6, r2, #31
 80038a4:	d527      	bpl.n	80038f6 <__sflush_r+0xb2>
 80038a6:	2200      	movs	r2, #0
 80038a8:	6062      	str	r2, [r4, #4]
 80038aa:	04d9      	lsls	r1, r3, #19
 80038ac:	6922      	ldr	r2, [r4, #16]
 80038ae:	6022      	str	r2, [r4, #0]
 80038b0:	d504      	bpl.n	80038bc <__sflush_r+0x78>
 80038b2:	1c42      	adds	r2, r0, #1
 80038b4:	d101      	bne.n	80038ba <__sflush_r+0x76>
 80038b6:	682b      	ldr	r3, [r5, #0]
 80038b8:	b903      	cbnz	r3, 80038bc <__sflush_r+0x78>
 80038ba:	6560      	str	r0, [r4, #84]	@ 0x54
 80038bc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80038be:	602f      	str	r7, [r5, #0]
 80038c0:	b1b9      	cbz	r1, 80038f2 <__sflush_r+0xae>
 80038c2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80038c6:	4299      	cmp	r1, r3
 80038c8:	d002      	beq.n	80038d0 <__sflush_r+0x8c>
 80038ca:	4628      	mov	r0, r5
 80038cc:	f7ff f9e8 	bl	8002ca0 <_free_r>
 80038d0:	2300      	movs	r3, #0
 80038d2:	6363      	str	r3, [r4, #52]	@ 0x34
 80038d4:	e00d      	b.n	80038f2 <__sflush_r+0xae>
 80038d6:	2301      	movs	r3, #1
 80038d8:	4628      	mov	r0, r5
 80038da:	47b0      	blx	r6
 80038dc:	4602      	mov	r2, r0
 80038de:	1c50      	adds	r0, r2, #1
 80038e0:	d1c9      	bne.n	8003876 <__sflush_r+0x32>
 80038e2:	682b      	ldr	r3, [r5, #0]
 80038e4:	2b00      	cmp	r3, #0
 80038e6:	d0c6      	beq.n	8003876 <__sflush_r+0x32>
 80038e8:	2b1d      	cmp	r3, #29
 80038ea:	d001      	beq.n	80038f0 <__sflush_r+0xac>
 80038ec:	2b16      	cmp	r3, #22
 80038ee:	d11e      	bne.n	800392e <__sflush_r+0xea>
 80038f0:	602f      	str	r7, [r5, #0]
 80038f2:	2000      	movs	r0, #0
 80038f4:	e022      	b.n	800393c <__sflush_r+0xf8>
 80038f6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80038fa:	b21b      	sxth	r3, r3
 80038fc:	e01b      	b.n	8003936 <__sflush_r+0xf2>
 80038fe:	690f      	ldr	r7, [r1, #16]
 8003900:	2f00      	cmp	r7, #0
 8003902:	d0f6      	beq.n	80038f2 <__sflush_r+0xae>
 8003904:	0793      	lsls	r3, r2, #30
 8003906:	680e      	ldr	r6, [r1, #0]
 8003908:	bf08      	it	eq
 800390a:	694b      	ldreq	r3, [r1, #20]
 800390c:	600f      	str	r7, [r1, #0]
 800390e:	bf18      	it	ne
 8003910:	2300      	movne	r3, #0
 8003912:	eba6 0807 	sub.w	r8, r6, r7
 8003916:	608b      	str	r3, [r1, #8]
 8003918:	f1b8 0f00 	cmp.w	r8, #0
 800391c:	dde9      	ble.n	80038f2 <__sflush_r+0xae>
 800391e:	6a21      	ldr	r1, [r4, #32]
 8003920:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8003922:	4643      	mov	r3, r8
 8003924:	463a      	mov	r2, r7
 8003926:	4628      	mov	r0, r5
 8003928:	47b0      	blx	r6
 800392a:	2800      	cmp	r0, #0
 800392c:	dc08      	bgt.n	8003940 <__sflush_r+0xfc>
 800392e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003932:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003936:	81a3      	strh	r3, [r4, #12]
 8003938:	f04f 30ff 	mov.w	r0, #4294967295
 800393c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003940:	4407      	add	r7, r0
 8003942:	eba8 0800 	sub.w	r8, r8, r0
 8003946:	e7e7      	b.n	8003918 <__sflush_r+0xd4>
 8003948:	20400001 	.word	0x20400001

0800394c <_fflush_r>:
 800394c:	b538      	push	{r3, r4, r5, lr}
 800394e:	690b      	ldr	r3, [r1, #16]
 8003950:	4605      	mov	r5, r0
 8003952:	460c      	mov	r4, r1
 8003954:	b913      	cbnz	r3, 800395c <_fflush_r+0x10>
 8003956:	2500      	movs	r5, #0
 8003958:	4628      	mov	r0, r5
 800395a:	bd38      	pop	{r3, r4, r5, pc}
 800395c:	b118      	cbz	r0, 8003966 <_fflush_r+0x1a>
 800395e:	6a03      	ldr	r3, [r0, #32]
 8003960:	b90b      	cbnz	r3, 8003966 <_fflush_r+0x1a>
 8003962:	f7fe fa29 	bl	8001db8 <__sinit>
 8003966:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800396a:	2b00      	cmp	r3, #0
 800396c:	d0f3      	beq.n	8003956 <_fflush_r+0xa>
 800396e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003970:	07d0      	lsls	r0, r2, #31
 8003972:	d404      	bmi.n	800397e <_fflush_r+0x32>
 8003974:	0599      	lsls	r1, r3, #22
 8003976:	d402      	bmi.n	800397e <_fflush_r+0x32>
 8003978:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800397a:	f7fe fb34 	bl	8001fe6 <__retarget_lock_acquire_recursive>
 800397e:	4628      	mov	r0, r5
 8003980:	4621      	mov	r1, r4
 8003982:	f7ff ff5f 	bl	8003844 <__sflush_r>
 8003986:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003988:	07da      	lsls	r2, r3, #31
 800398a:	4605      	mov	r5, r0
 800398c:	d4e4      	bmi.n	8003958 <_fflush_r+0xc>
 800398e:	89a3      	ldrh	r3, [r4, #12]
 8003990:	059b      	lsls	r3, r3, #22
 8003992:	d4e1      	bmi.n	8003958 <_fflush_r+0xc>
 8003994:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003996:	f7fe fb27 	bl	8001fe8 <__retarget_lock_release_recursive>
 800399a:	e7dd      	b.n	8003958 <_fflush_r+0xc>

0800399c <memmove>:
 800399c:	4288      	cmp	r0, r1
 800399e:	b510      	push	{r4, lr}
 80039a0:	eb01 0402 	add.w	r4, r1, r2
 80039a4:	d902      	bls.n	80039ac <memmove+0x10>
 80039a6:	4284      	cmp	r4, r0
 80039a8:	4623      	mov	r3, r4
 80039aa:	d807      	bhi.n	80039bc <memmove+0x20>
 80039ac:	1e43      	subs	r3, r0, #1
 80039ae:	42a1      	cmp	r1, r4
 80039b0:	d008      	beq.n	80039c4 <memmove+0x28>
 80039b2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80039b6:	f803 2f01 	strb.w	r2, [r3, #1]!
 80039ba:	e7f8      	b.n	80039ae <memmove+0x12>
 80039bc:	4402      	add	r2, r0
 80039be:	4601      	mov	r1, r0
 80039c0:	428a      	cmp	r2, r1
 80039c2:	d100      	bne.n	80039c6 <memmove+0x2a>
 80039c4:	bd10      	pop	{r4, pc}
 80039c6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80039ca:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80039ce:	e7f7      	b.n	80039c0 <memmove+0x24>

080039d0 <_sbrk_r>:
 80039d0:	b538      	push	{r3, r4, r5, lr}
 80039d2:	4d06      	ldr	r5, [pc, #24]	@ (80039ec <_sbrk_r+0x1c>)
 80039d4:	2300      	movs	r3, #0
 80039d6:	4604      	mov	r4, r0
 80039d8:	4608      	mov	r0, r1
 80039da:	602b      	str	r3, [r5, #0]
 80039dc:	f7fd fc84 	bl	80012e8 <_sbrk>
 80039e0:	1c43      	adds	r3, r0, #1
 80039e2:	d102      	bne.n	80039ea <_sbrk_r+0x1a>
 80039e4:	682b      	ldr	r3, [r5, #0]
 80039e6:	b103      	cbz	r3, 80039ea <_sbrk_r+0x1a>
 80039e8:	6023      	str	r3, [r4, #0]
 80039ea:	bd38      	pop	{r3, r4, r5, pc}
 80039ec:	20000878 	.word	0x20000878

080039f0 <memcpy>:
 80039f0:	440a      	add	r2, r1
 80039f2:	4291      	cmp	r1, r2
 80039f4:	f100 33ff 	add.w	r3, r0, #4294967295
 80039f8:	d100      	bne.n	80039fc <memcpy+0xc>
 80039fa:	4770      	bx	lr
 80039fc:	b510      	push	{r4, lr}
 80039fe:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003a02:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003a06:	4291      	cmp	r1, r2
 8003a08:	d1f9      	bne.n	80039fe <memcpy+0xe>
 8003a0a:	bd10      	pop	{r4, pc}

08003a0c <__assert_func>:
 8003a0c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003a0e:	4614      	mov	r4, r2
 8003a10:	461a      	mov	r2, r3
 8003a12:	4b09      	ldr	r3, [pc, #36]	@ (8003a38 <__assert_func+0x2c>)
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	4605      	mov	r5, r0
 8003a18:	68d8      	ldr	r0, [r3, #12]
 8003a1a:	b14c      	cbz	r4, 8003a30 <__assert_func+0x24>
 8003a1c:	4b07      	ldr	r3, [pc, #28]	@ (8003a3c <__assert_func+0x30>)
 8003a1e:	9100      	str	r1, [sp, #0]
 8003a20:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003a24:	4906      	ldr	r1, [pc, #24]	@ (8003a40 <__assert_func+0x34>)
 8003a26:	462b      	mov	r3, r5
 8003a28:	f000 f870 	bl	8003b0c <fiprintf>
 8003a2c:	f000 f880 	bl	8003b30 <abort>
 8003a30:	4b04      	ldr	r3, [pc, #16]	@ (8003a44 <__assert_func+0x38>)
 8003a32:	461c      	mov	r4, r3
 8003a34:	e7f3      	b.n	8003a1e <__assert_func+0x12>
 8003a36:	bf00      	nop
 8003a38:	20000010 	.word	0x20000010
 8003a3c:	080041f8 	.word	0x080041f8
 8003a40:	08004205 	.word	0x08004205
 8003a44:	08004233 	.word	0x08004233

08003a48 <_calloc_r>:
 8003a48:	b570      	push	{r4, r5, r6, lr}
 8003a4a:	fba1 5402 	umull	r5, r4, r1, r2
 8003a4e:	b934      	cbnz	r4, 8003a5e <_calloc_r+0x16>
 8003a50:	4629      	mov	r1, r5
 8003a52:	f7ff f999 	bl	8002d88 <_malloc_r>
 8003a56:	4606      	mov	r6, r0
 8003a58:	b928      	cbnz	r0, 8003a66 <_calloc_r+0x1e>
 8003a5a:	4630      	mov	r0, r6
 8003a5c:	bd70      	pop	{r4, r5, r6, pc}
 8003a5e:	220c      	movs	r2, #12
 8003a60:	6002      	str	r2, [r0, #0]
 8003a62:	2600      	movs	r6, #0
 8003a64:	e7f9      	b.n	8003a5a <_calloc_r+0x12>
 8003a66:	462a      	mov	r2, r5
 8003a68:	4621      	mov	r1, r4
 8003a6a:	f7fe fa3f 	bl	8001eec <memset>
 8003a6e:	e7f4      	b.n	8003a5a <_calloc_r+0x12>

08003a70 <__ascii_mbtowc>:
 8003a70:	b082      	sub	sp, #8
 8003a72:	b901      	cbnz	r1, 8003a76 <__ascii_mbtowc+0x6>
 8003a74:	a901      	add	r1, sp, #4
 8003a76:	b142      	cbz	r2, 8003a8a <__ascii_mbtowc+0x1a>
 8003a78:	b14b      	cbz	r3, 8003a8e <__ascii_mbtowc+0x1e>
 8003a7a:	7813      	ldrb	r3, [r2, #0]
 8003a7c:	600b      	str	r3, [r1, #0]
 8003a7e:	7812      	ldrb	r2, [r2, #0]
 8003a80:	1e10      	subs	r0, r2, #0
 8003a82:	bf18      	it	ne
 8003a84:	2001      	movne	r0, #1
 8003a86:	b002      	add	sp, #8
 8003a88:	4770      	bx	lr
 8003a8a:	4610      	mov	r0, r2
 8003a8c:	e7fb      	b.n	8003a86 <__ascii_mbtowc+0x16>
 8003a8e:	f06f 0001 	mvn.w	r0, #1
 8003a92:	e7f8      	b.n	8003a86 <__ascii_mbtowc+0x16>

08003a94 <_realloc_r>:
 8003a94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003a98:	4607      	mov	r7, r0
 8003a9a:	4614      	mov	r4, r2
 8003a9c:	460d      	mov	r5, r1
 8003a9e:	b921      	cbnz	r1, 8003aaa <_realloc_r+0x16>
 8003aa0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003aa4:	4611      	mov	r1, r2
 8003aa6:	f7ff b96f 	b.w	8002d88 <_malloc_r>
 8003aaa:	b92a      	cbnz	r2, 8003ab8 <_realloc_r+0x24>
 8003aac:	f7ff f8f8 	bl	8002ca0 <_free_r>
 8003ab0:	4625      	mov	r5, r4
 8003ab2:	4628      	mov	r0, r5
 8003ab4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003ab8:	f000 f841 	bl	8003b3e <_malloc_usable_size_r>
 8003abc:	4284      	cmp	r4, r0
 8003abe:	4606      	mov	r6, r0
 8003ac0:	d802      	bhi.n	8003ac8 <_realloc_r+0x34>
 8003ac2:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8003ac6:	d8f4      	bhi.n	8003ab2 <_realloc_r+0x1e>
 8003ac8:	4621      	mov	r1, r4
 8003aca:	4638      	mov	r0, r7
 8003acc:	f7ff f95c 	bl	8002d88 <_malloc_r>
 8003ad0:	4680      	mov	r8, r0
 8003ad2:	b908      	cbnz	r0, 8003ad8 <_realloc_r+0x44>
 8003ad4:	4645      	mov	r5, r8
 8003ad6:	e7ec      	b.n	8003ab2 <_realloc_r+0x1e>
 8003ad8:	42b4      	cmp	r4, r6
 8003ada:	4622      	mov	r2, r4
 8003adc:	4629      	mov	r1, r5
 8003ade:	bf28      	it	cs
 8003ae0:	4632      	movcs	r2, r6
 8003ae2:	f7ff ff85 	bl	80039f0 <memcpy>
 8003ae6:	4629      	mov	r1, r5
 8003ae8:	4638      	mov	r0, r7
 8003aea:	f7ff f8d9 	bl	8002ca0 <_free_r>
 8003aee:	e7f1      	b.n	8003ad4 <_realloc_r+0x40>

08003af0 <__ascii_wctomb>:
 8003af0:	4603      	mov	r3, r0
 8003af2:	4608      	mov	r0, r1
 8003af4:	b141      	cbz	r1, 8003b08 <__ascii_wctomb+0x18>
 8003af6:	2aff      	cmp	r2, #255	@ 0xff
 8003af8:	d904      	bls.n	8003b04 <__ascii_wctomb+0x14>
 8003afa:	228a      	movs	r2, #138	@ 0x8a
 8003afc:	601a      	str	r2, [r3, #0]
 8003afe:	f04f 30ff 	mov.w	r0, #4294967295
 8003b02:	4770      	bx	lr
 8003b04:	700a      	strb	r2, [r1, #0]
 8003b06:	2001      	movs	r0, #1
 8003b08:	4770      	bx	lr
	...

08003b0c <fiprintf>:
 8003b0c:	b40e      	push	{r1, r2, r3}
 8003b0e:	b503      	push	{r0, r1, lr}
 8003b10:	4601      	mov	r1, r0
 8003b12:	ab03      	add	r3, sp, #12
 8003b14:	4805      	ldr	r0, [pc, #20]	@ (8003b2c <fiprintf+0x20>)
 8003b16:	f853 2b04 	ldr.w	r2, [r3], #4
 8003b1a:	6800      	ldr	r0, [r0, #0]
 8003b1c:	9301      	str	r3, [sp, #4]
 8003b1e:	f000 f83f 	bl	8003ba0 <_vfiprintf_r>
 8003b22:	b002      	add	sp, #8
 8003b24:	f85d eb04 	ldr.w	lr, [sp], #4
 8003b28:	b003      	add	sp, #12
 8003b2a:	4770      	bx	lr
 8003b2c:	20000010 	.word	0x20000010

08003b30 <abort>:
 8003b30:	b508      	push	{r3, lr}
 8003b32:	2006      	movs	r0, #6
 8003b34:	f000 fa08 	bl	8003f48 <raise>
 8003b38:	2001      	movs	r0, #1
 8003b3a:	f7fd fb5d 	bl	80011f8 <_exit>

08003b3e <_malloc_usable_size_r>:
 8003b3e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003b42:	1f18      	subs	r0, r3, #4
 8003b44:	2b00      	cmp	r3, #0
 8003b46:	bfbc      	itt	lt
 8003b48:	580b      	ldrlt	r3, [r1, r0]
 8003b4a:	18c0      	addlt	r0, r0, r3
 8003b4c:	4770      	bx	lr

08003b4e <__sfputc_r>:
 8003b4e:	6893      	ldr	r3, [r2, #8]
 8003b50:	3b01      	subs	r3, #1
 8003b52:	2b00      	cmp	r3, #0
 8003b54:	b410      	push	{r4}
 8003b56:	6093      	str	r3, [r2, #8]
 8003b58:	da08      	bge.n	8003b6c <__sfputc_r+0x1e>
 8003b5a:	6994      	ldr	r4, [r2, #24]
 8003b5c:	42a3      	cmp	r3, r4
 8003b5e:	db01      	blt.n	8003b64 <__sfputc_r+0x16>
 8003b60:	290a      	cmp	r1, #10
 8003b62:	d103      	bne.n	8003b6c <__sfputc_r+0x1e>
 8003b64:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003b68:	f000 b932 	b.w	8003dd0 <__swbuf_r>
 8003b6c:	6813      	ldr	r3, [r2, #0]
 8003b6e:	1c58      	adds	r0, r3, #1
 8003b70:	6010      	str	r0, [r2, #0]
 8003b72:	7019      	strb	r1, [r3, #0]
 8003b74:	4608      	mov	r0, r1
 8003b76:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003b7a:	4770      	bx	lr

08003b7c <__sfputs_r>:
 8003b7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b7e:	4606      	mov	r6, r0
 8003b80:	460f      	mov	r7, r1
 8003b82:	4614      	mov	r4, r2
 8003b84:	18d5      	adds	r5, r2, r3
 8003b86:	42ac      	cmp	r4, r5
 8003b88:	d101      	bne.n	8003b8e <__sfputs_r+0x12>
 8003b8a:	2000      	movs	r0, #0
 8003b8c:	e007      	b.n	8003b9e <__sfputs_r+0x22>
 8003b8e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003b92:	463a      	mov	r2, r7
 8003b94:	4630      	mov	r0, r6
 8003b96:	f7ff ffda 	bl	8003b4e <__sfputc_r>
 8003b9a:	1c43      	adds	r3, r0, #1
 8003b9c:	d1f3      	bne.n	8003b86 <__sfputs_r+0xa>
 8003b9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08003ba0 <_vfiprintf_r>:
 8003ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ba4:	460d      	mov	r5, r1
 8003ba6:	b09d      	sub	sp, #116	@ 0x74
 8003ba8:	4614      	mov	r4, r2
 8003baa:	4698      	mov	r8, r3
 8003bac:	4606      	mov	r6, r0
 8003bae:	b118      	cbz	r0, 8003bb8 <_vfiprintf_r+0x18>
 8003bb0:	6a03      	ldr	r3, [r0, #32]
 8003bb2:	b90b      	cbnz	r3, 8003bb8 <_vfiprintf_r+0x18>
 8003bb4:	f7fe f900 	bl	8001db8 <__sinit>
 8003bb8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003bba:	07d9      	lsls	r1, r3, #31
 8003bbc:	d405      	bmi.n	8003bca <_vfiprintf_r+0x2a>
 8003bbe:	89ab      	ldrh	r3, [r5, #12]
 8003bc0:	059a      	lsls	r2, r3, #22
 8003bc2:	d402      	bmi.n	8003bca <_vfiprintf_r+0x2a>
 8003bc4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003bc6:	f7fe fa0e 	bl	8001fe6 <__retarget_lock_acquire_recursive>
 8003bca:	89ab      	ldrh	r3, [r5, #12]
 8003bcc:	071b      	lsls	r3, r3, #28
 8003bce:	d501      	bpl.n	8003bd4 <_vfiprintf_r+0x34>
 8003bd0:	692b      	ldr	r3, [r5, #16]
 8003bd2:	b99b      	cbnz	r3, 8003bfc <_vfiprintf_r+0x5c>
 8003bd4:	4629      	mov	r1, r5
 8003bd6:	4630      	mov	r0, r6
 8003bd8:	f000 f938 	bl	8003e4c <__swsetup_r>
 8003bdc:	b170      	cbz	r0, 8003bfc <_vfiprintf_r+0x5c>
 8003bde:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003be0:	07dc      	lsls	r4, r3, #31
 8003be2:	d504      	bpl.n	8003bee <_vfiprintf_r+0x4e>
 8003be4:	f04f 30ff 	mov.w	r0, #4294967295
 8003be8:	b01d      	add	sp, #116	@ 0x74
 8003bea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003bee:	89ab      	ldrh	r3, [r5, #12]
 8003bf0:	0598      	lsls	r0, r3, #22
 8003bf2:	d4f7      	bmi.n	8003be4 <_vfiprintf_r+0x44>
 8003bf4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003bf6:	f7fe f9f7 	bl	8001fe8 <__retarget_lock_release_recursive>
 8003bfa:	e7f3      	b.n	8003be4 <_vfiprintf_r+0x44>
 8003bfc:	2300      	movs	r3, #0
 8003bfe:	9309      	str	r3, [sp, #36]	@ 0x24
 8003c00:	2320      	movs	r3, #32
 8003c02:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003c06:	f8cd 800c 	str.w	r8, [sp, #12]
 8003c0a:	2330      	movs	r3, #48	@ 0x30
 8003c0c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8003dbc <_vfiprintf_r+0x21c>
 8003c10:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003c14:	f04f 0901 	mov.w	r9, #1
 8003c18:	4623      	mov	r3, r4
 8003c1a:	469a      	mov	sl, r3
 8003c1c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003c20:	b10a      	cbz	r2, 8003c26 <_vfiprintf_r+0x86>
 8003c22:	2a25      	cmp	r2, #37	@ 0x25
 8003c24:	d1f9      	bne.n	8003c1a <_vfiprintf_r+0x7a>
 8003c26:	ebba 0b04 	subs.w	fp, sl, r4
 8003c2a:	d00b      	beq.n	8003c44 <_vfiprintf_r+0xa4>
 8003c2c:	465b      	mov	r3, fp
 8003c2e:	4622      	mov	r2, r4
 8003c30:	4629      	mov	r1, r5
 8003c32:	4630      	mov	r0, r6
 8003c34:	f7ff ffa2 	bl	8003b7c <__sfputs_r>
 8003c38:	3001      	adds	r0, #1
 8003c3a:	f000 80a7 	beq.w	8003d8c <_vfiprintf_r+0x1ec>
 8003c3e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003c40:	445a      	add	r2, fp
 8003c42:	9209      	str	r2, [sp, #36]	@ 0x24
 8003c44:	f89a 3000 	ldrb.w	r3, [sl]
 8003c48:	2b00      	cmp	r3, #0
 8003c4a:	f000 809f 	beq.w	8003d8c <_vfiprintf_r+0x1ec>
 8003c4e:	2300      	movs	r3, #0
 8003c50:	f04f 32ff 	mov.w	r2, #4294967295
 8003c54:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003c58:	f10a 0a01 	add.w	sl, sl, #1
 8003c5c:	9304      	str	r3, [sp, #16]
 8003c5e:	9307      	str	r3, [sp, #28]
 8003c60:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003c64:	931a      	str	r3, [sp, #104]	@ 0x68
 8003c66:	4654      	mov	r4, sl
 8003c68:	2205      	movs	r2, #5
 8003c6a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003c6e:	4853      	ldr	r0, [pc, #332]	@ (8003dbc <_vfiprintf_r+0x21c>)
 8003c70:	f7fc fab6 	bl	80001e0 <memchr>
 8003c74:	9a04      	ldr	r2, [sp, #16]
 8003c76:	b9d8      	cbnz	r0, 8003cb0 <_vfiprintf_r+0x110>
 8003c78:	06d1      	lsls	r1, r2, #27
 8003c7a:	bf44      	itt	mi
 8003c7c:	2320      	movmi	r3, #32
 8003c7e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003c82:	0713      	lsls	r3, r2, #28
 8003c84:	bf44      	itt	mi
 8003c86:	232b      	movmi	r3, #43	@ 0x2b
 8003c88:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003c8c:	f89a 3000 	ldrb.w	r3, [sl]
 8003c90:	2b2a      	cmp	r3, #42	@ 0x2a
 8003c92:	d015      	beq.n	8003cc0 <_vfiprintf_r+0x120>
 8003c94:	9a07      	ldr	r2, [sp, #28]
 8003c96:	4654      	mov	r4, sl
 8003c98:	2000      	movs	r0, #0
 8003c9a:	f04f 0c0a 	mov.w	ip, #10
 8003c9e:	4621      	mov	r1, r4
 8003ca0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003ca4:	3b30      	subs	r3, #48	@ 0x30
 8003ca6:	2b09      	cmp	r3, #9
 8003ca8:	d94b      	bls.n	8003d42 <_vfiprintf_r+0x1a2>
 8003caa:	b1b0      	cbz	r0, 8003cda <_vfiprintf_r+0x13a>
 8003cac:	9207      	str	r2, [sp, #28]
 8003cae:	e014      	b.n	8003cda <_vfiprintf_r+0x13a>
 8003cb0:	eba0 0308 	sub.w	r3, r0, r8
 8003cb4:	fa09 f303 	lsl.w	r3, r9, r3
 8003cb8:	4313      	orrs	r3, r2
 8003cba:	9304      	str	r3, [sp, #16]
 8003cbc:	46a2      	mov	sl, r4
 8003cbe:	e7d2      	b.n	8003c66 <_vfiprintf_r+0xc6>
 8003cc0:	9b03      	ldr	r3, [sp, #12]
 8003cc2:	1d19      	adds	r1, r3, #4
 8003cc4:	681b      	ldr	r3, [r3, #0]
 8003cc6:	9103      	str	r1, [sp, #12]
 8003cc8:	2b00      	cmp	r3, #0
 8003cca:	bfbb      	ittet	lt
 8003ccc:	425b      	neglt	r3, r3
 8003cce:	f042 0202 	orrlt.w	r2, r2, #2
 8003cd2:	9307      	strge	r3, [sp, #28]
 8003cd4:	9307      	strlt	r3, [sp, #28]
 8003cd6:	bfb8      	it	lt
 8003cd8:	9204      	strlt	r2, [sp, #16]
 8003cda:	7823      	ldrb	r3, [r4, #0]
 8003cdc:	2b2e      	cmp	r3, #46	@ 0x2e
 8003cde:	d10a      	bne.n	8003cf6 <_vfiprintf_r+0x156>
 8003ce0:	7863      	ldrb	r3, [r4, #1]
 8003ce2:	2b2a      	cmp	r3, #42	@ 0x2a
 8003ce4:	d132      	bne.n	8003d4c <_vfiprintf_r+0x1ac>
 8003ce6:	9b03      	ldr	r3, [sp, #12]
 8003ce8:	1d1a      	adds	r2, r3, #4
 8003cea:	681b      	ldr	r3, [r3, #0]
 8003cec:	9203      	str	r2, [sp, #12]
 8003cee:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003cf2:	3402      	adds	r4, #2
 8003cf4:	9305      	str	r3, [sp, #20]
 8003cf6:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8003dcc <_vfiprintf_r+0x22c>
 8003cfa:	7821      	ldrb	r1, [r4, #0]
 8003cfc:	2203      	movs	r2, #3
 8003cfe:	4650      	mov	r0, sl
 8003d00:	f7fc fa6e 	bl	80001e0 <memchr>
 8003d04:	b138      	cbz	r0, 8003d16 <_vfiprintf_r+0x176>
 8003d06:	9b04      	ldr	r3, [sp, #16]
 8003d08:	eba0 000a 	sub.w	r0, r0, sl
 8003d0c:	2240      	movs	r2, #64	@ 0x40
 8003d0e:	4082      	lsls	r2, r0
 8003d10:	4313      	orrs	r3, r2
 8003d12:	3401      	adds	r4, #1
 8003d14:	9304      	str	r3, [sp, #16]
 8003d16:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d1a:	4829      	ldr	r0, [pc, #164]	@ (8003dc0 <_vfiprintf_r+0x220>)
 8003d1c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003d20:	2206      	movs	r2, #6
 8003d22:	f7fc fa5d 	bl	80001e0 <memchr>
 8003d26:	2800      	cmp	r0, #0
 8003d28:	d03f      	beq.n	8003daa <_vfiprintf_r+0x20a>
 8003d2a:	4b26      	ldr	r3, [pc, #152]	@ (8003dc4 <_vfiprintf_r+0x224>)
 8003d2c:	bb1b      	cbnz	r3, 8003d76 <_vfiprintf_r+0x1d6>
 8003d2e:	9b03      	ldr	r3, [sp, #12]
 8003d30:	3307      	adds	r3, #7
 8003d32:	f023 0307 	bic.w	r3, r3, #7
 8003d36:	3308      	adds	r3, #8
 8003d38:	9303      	str	r3, [sp, #12]
 8003d3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003d3c:	443b      	add	r3, r7
 8003d3e:	9309      	str	r3, [sp, #36]	@ 0x24
 8003d40:	e76a      	b.n	8003c18 <_vfiprintf_r+0x78>
 8003d42:	fb0c 3202 	mla	r2, ip, r2, r3
 8003d46:	460c      	mov	r4, r1
 8003d48:	2001      	movs	r0, #1
 8003d4a:	e7a8      	b.n	8003c9e <_vfiprintf_r+0xfe>
 8003d4c:	2300      	movs	r3, #0
 8003d4e:	3401      	adds	r4, #1
 8003d50:	9305      	str	r3, [sp, #20]
 8003d52:	4619      	mov	r1, r3
 8003d54:	f04f 0c0a 	mov.w	ip, #10
 8003d58:	4620      	mov	r0, r4
 8003d5a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003d5e:	3a30      	subs	r2, #48	@ 0x30
 8003d60:	2a09      	cmp	r2, #9
 8003d62:	d903      	bls.n	8003d6c <_vfiprintf_r+0x1cc>
 8003d64:	2b00      	cmp	r3, #0
 8003d66:	d0c6      	beq.n	8003cf6 <_vfiprintf_r+0x156>
 8003d68:	9105      	str	r1, [sp, #20]
 8003d6a:	e7c4      	b.n	8003cf6 <_vfiprintf_r+0x156>
 8003d6c:	fb0c 2101 	mla	r1, ip, r1, r2
 8003d70:	4604      	mov	r4, r0
 8003d72:	2301      	movs	r3, #1
 8003d74:	e7f0      	b.n	8003d58 <_vfiprintf_r+0x1b8>
 8003d76:	ab03      	add	r3, sp, #12
 8003d78:	9300      	str	r3, [sp, #0]
 8003d7a:	462a      	mov	r2, r5
 8003d7c:	4b12      	ldr	r3, [pc, #72]	@ (8003dc8 <_vfiprintf_r+0x228>)
 8003d7e:	a904      	add	r1, sp, #16
 8003d80:	4630      	mov	r0, r6
 8003d82:	f7fd fbd7 	bl	8001534 <_printf_float>
 8003d86:	4607      	mov	r7, r0
 8003d88:	1c78      	adds	r0, r7, #1
 8003d8a:	d1d6      	bne.n	8003d3a <_vfiprintf_r+0x19a>
 8003d8c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003d8e:	07d9      	lsls	r1, r3, #31
 8003d90:	d405      	bmi.n	8003d9e <_vfiprintf_r+0x1fe>
 8003d92:	89ab      	ldrh	r3, [r5, #12]
 8003d94:	059a      	lsls	r2, r3, #22
 8003d96:	d402      	bmi.n	8003d9e <_vfiprintf_r+0x1fe>
 8003d98:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003d9a:	f7fe f925 	bl	8001fe8 <__retarget_lock_release_recursive>
 8003d9e:	89ab      	ldrh	r3, [r5, #12]
 8003da0:	065b      	lsls	r3, r3, #25
 8003da2:	f53f af1f 	bmi.w	8003be4 <_vfiprintf_r+0x44>
 8003da6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003da8:	e71e      	b.n	8003be8 <_vfiprintf_r+0x48>
 8003daa:	ab03      	add	r3, sp, #12
 8003dac:	9300      	str	r3, [sp, #0]
 8003dae:	462a      	mov	r2, r5
 8003db0:	4b05      	ldr	r3, [pc, #20]	@ (8003dc8 <_vfiprintf_r+0x228>)
 8003db2:	a904      	add	r1, sp, #16
 8003db4:	4630      	mov	r0, r6
 8003db6:	f7fd fe55 	bl	8001a64 <_printf_i>
 8003dba:	e7e4      	b.n	8003d86 <_vfiprintf_r+0x1e6>
 8003dbc:	080041dd 	.word	0x080041dd
 8003dc0:	080041e7 	.word	0x080041e7
 8003dc4:	08001535 	.word	0x08001535
 8003dc8:	08003b7d 	.word	0x08003b7d
 8003dcc:	080041e3 	.word	0x080041e3

08003dd0 <__swbuf_r>:
 8003dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003dd2:	460e      	mov	r6, r1
 8003dd4:	4614      	mov	r4, r2
 8003dd6:	4605      	mov	r5, r0
 8003dd8:	b118      	cbz	r0, 8003de2 <__swbuf_r+0x12>
 8003dda:	6a03      	ldr	r3, [r0, #32]
 8003ddc:	b90b      	cbnz	r3, 8003de2 <__swbuf_r+0x12>
 8003dde:	f7fd ffeb 	bl	8001db8 <__sinit>
 8003de2:	69a3      	ldr	r3, [r4, #24]
 8003de4:	60a3      	str	r3, [r4, #8]
 8003de6:	89a3      	ldrh	r3, [r4, #12]
 8003de8:	071a      	lsls	r2, r3, #28
 8003dea:	d501      	bpl.n	8003df0 <__swbuf_r+0x20>
 8003dec:	6923      	ldr	r3, [r4, #16]
 8003dee:	b943      	cbnz	r3, 8003e02 <__swbuf_r+0x32>
 8003df0:	4621      	mov	r1, r4
 8003df2:	4628      	mov	r0, r5
 8003df4:	f000 f82a 	bl	8003e4c <__swsetup_r>
 8003df8:	b118      	cbz	r0, 8003e02 <__swbuf_r+0x32>
 8003dfa:	f04f 37ff 	mov.w	r7, #4294967295
 8003dfe:	4638      	mov	r0, r7
 8003e00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003e02:	6823      	ldr	r3, [r4, #0]
 8003e04:	6922      	ldr	r2, [r4, #16]
 8003e06:	1a98      	subs	r0, r3, r2
 8003e08:	6963      	ldr	r3, [r4, #20]
 8003e0a:	b2f6      	uxtb	r6, r6
 8003e0c:	4283      	cmp	r3, r0
 8003e0e:	4637      	mov	r7, r6
 8003e10:	dc05      	bgt.n	8003e1e <__swbuf_r+0x4e>
 8003e12:	4621      	mov	r1, r4
 8003e14:	4628      	mov	r0, r5
 8003e16:	f7ff fd99 	bl	800394c <_fflush_r>
 8003e1a:	2800      	cmp	r0, #0
 8003e1c:	d1ed      	bne.n	8003dfa <__swbuf_r+0x2a>
 8003e1e:	68a3      	ldr	r3, [r4, #8]
 8003e20:	3b01      	subs	r3, #1
 8003e22:	60a3      	str	r3, [r4, #8]
 8003e24:	6823      	ldr	r3, [r4, #0]
 8003e26:	1c5a      	adds	r2, r3, #1
 8003e28:	6022      	str	r2, [r4, #0]
 8003e2a:	701e      	strb	r6, [r3, #0]
 8003e2c:	6962      	ldr	r2, [r4, #20]
 8003e2e:	1c43      	adds	r3, r0, #1
 8003e30:	429a      	cmp	r2, r3
 8003e32:	d004      	beq.n	8003e3e <__swbuf_r+0x6e>
 8003e34:	89a3      	ldrh	r3, [r4, #12]
 8003e36:	07db      	lsls	r3, r3, #31
 8003e38:	d5e1      	bpl.n	8003dfe <__swbuf_r+0x2e>
 8003e3a:	2e0a      	cmp	r6, #10
 8003e3c:	d1df      	bne.n	8003dfe <__swbuf_r+0x2e>
 8003e3e:	4621      	mov	r1, r4
 8003e40:	4628      	mov	r0, r5
 8003e42:	f7ff fd83 	bl	800394c <_fflush_r>
 8003e46:	2800      	cmp	r0, #0
 8003e48:	d0d9      	beq.n	8003dfe <__swbuf_r+0x2e>
 8003e4a:	e7d6      	b.n	8003dfa <__swbuf_r+0x2a>

08003e4c <__swsetup_r>:
 8003e4c:	b538      	push	{r3, r4, r5, lr}
 8003e4e:	4b29      	ldr	r3, [pc, #164]	@ (8003ef4 <__swsetup_r+0xa8>)
 8003e50:	4605      	mov	r5, r0
 8003e52:	6818      	ldr	r0, [r3, #0]
 8003e54:	460c      	mov	r4, r1
 8003e56:	b118      	cbz	r0, 8003e60 <__swsetup_r+0x14>
 8003e58:	6a03      	ldr	r3, [r0, #32]
 8003e5a:	b90b      	cbnz	r3, 8003e60 <__swsetup_r+0x14>
 8003e5c:	f7fd ffac 	bl	8001db8 <__sinit>
 8003e60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003e64:	0719      	lsls	r1, r3, #28
 8003e66:	d422      	bmi.n	8003eae <__swsetup_r+0x62>
 8003e68:	06da      	lsls	r2, r3, #27
 8003e6a:	d407      	bmi.n	8003e7c <__swsetup_r+0x30>
 8003e6c:	2209      	movs	r2, #9
 8003e6e:	602a      	str	r2, [r5, #0]
 8003e70:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003e74:	81a3      	strh	r3, [r4, #12]
 8003e76:	f04f 30ff 	mov.w	r0, #4294967295
 8003e7a:	e033      	b.n	8003ee4 <__swsetup_r+0x98>
 8003e7c:	0758      	lsls	r0, r3, #29
 8003e7e:	d512      	bpl.n	8003ea6 <__swsetup_r+0x5a>
 8003e80:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003e82:	b141      	cbz	r1, 8003e96 <__swsetup_r+0x4a>
 8003e84:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003e88:	4299      	cmp	r1, r3
 8003e8a:	d002      	beq.n	8003e92 <__swsetup_r+0x46>
 8003e8c:	4628      	mov	r0, r5
 8003e8e:	f7fe ff07 	bl	8002ca0 <_free_r>
 8003e92:	2300      	movs	r3, #0
 8003e94:	6363      	str	r3, [r4, #52]	@ 0x34
 8003e96:	89a3      	ldrh	r3, [r4, #12]
 8003e98:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8003e9c:	81a3      	strh	r3, [r4, #12]
 8003e9e:	2300      	movs	r3, #0
 8003ea0:	6063      	str	r3, [r4, #4]
 8003ea2:	6923      	ldr	r3, [r4, #16]
 8003ea4:	6023      	str	r3, [r4, #0]
 8003ea6:	89a3      	ldrh	r3, [r4, #12]
 8003ea8:	f043 0308 	orr.w	r3, r3, #8
 8003eac:	81a3      	strh	r3, [r4, #12]
 8003eae:	6923      	ldr	r3, [r4, #16]
 8003eb0:	b94b      	cbnz	r3, 8003ec6 <__swsetup_r+0x7a>
 8003eb2:	89a3      	ldrh	r3, [r4, #12]
 8003eb4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8003eb8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003ebc:	d003      	beq.n	8003ec6 <__swsetup_r+0x7a>
 8003ebe:	4621      	mov	r1, r4
 8003ec0:	4628      	mov	r0, r5
 8003ec2:	f000 f883 	bl	8003fcc <__smakebuf_r>
 8003ec6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003eca:	f013 0201 	ands.w	r2, r3, #1
 8003ece:	d00a      	beq.n	8003ee6 <__swsetup_r+0x9a>
 8003ed0:	2200      	movs	r2, #0
 8003ed2:	60a2      	str	r2, [r4, #8]
 8003ed4:	6962      	ldr	r2, [r4, #20]
 8003ed6:	4252      	negs	r2, r2
 8003ed8:	61a2      	str	r2, [r4, #24]
 8003eda:	6922      	ldr	r2, [r4, #16]
 8003edc:	b942      	cbnz	r2, 8003ef0 <__swsetup_r+0xa4>
 8003ede:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8003ee2:	d1c5      	bne.n	8003e70 <__swsetup_r+0x24>
 8003ee4:	bd38      	pop	{r3, r4, r5, pc}
 8003ee6:	0799      	lsls	r1, r3, #30
 8003ee8:	bf58      	it	pl
 8003eea:	6962      	ldrpl	r2, [r4, #20]
 8003eec:	60a2      	str	r2, [r4, #8]
 8003eee:	e7f4      	b.n	8003eda <__swsetup_r+0x8e>
 8003ef0:	2000      	movs	r0, #0
 8003ef2:	e7f7      	b.n	8003ee4 <__swsetup_r+0x98>
 8003ef4:	20000010 	.word	0x20000010

08003ef8 <_raise_r>:
 8003ef8:	291f      	cmp	r1, #31
 8003efa:	b538      	push	{r3, r4, r5, lr}
 8003efc:	4605      	mov	r5, r0
 8003efe:	460c      	mov	r4, r1
 8003f00:	d904      	bls.n	8003f0c <_raise_r+0x14>
 8003f02:	2316      	movs	r3, #22
 8003f04:	6003      	str	r3, [r0, #0]
 8003f06:	f04f 30ff 	mov.w	r0, #4294967295
 8003f0a:	bd38      	pop	{r3, r4, r5, pc}
 8003f0c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8003f0e:	b112      	cbz	r2, 8003f16 <_raise_r+0x1e>
 8003f10:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8003f14:	b94b      	cbnz	r3, 8003f2a <_raise_r+0x32>
 8003f16:	4628      	mov	r0, r5
 8003f18:	f000 f830 	bl	8003f7c <_getpid_r>
 8003f1c:	4622      	mov	r2, r4
 8003f1e:	4601      	mov	r1, r0
 8003f20:	4628      	mov	r0, r5
 8003f22:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003f26:	f000 b817 	b.w	8003f58 <_kill_r>
 8003f2a:	2b01      	cmp	r3, #1
 8003f2c:	d00a      	beq.n	8003f44 <_raise_r+0x4c>
 8003f2e:	1c59      	adds	r1, r3, #1
 8003f30:	d103      	bne.n	8003f3a <_raise_r+0x42>
 8003f32:	2316      	movs	r3, #22
 8003f34:	6003      	str	r3, [r0, #0]
 8003f36:	2001      	movs	r0, #1
 8003f38:	e7e7      	b.n	8003f0a <_raise_r+0x12>
 8003f3a:	2100      	movs	r1, #0
 8003f3c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8003f40:	4620      	mov	r0, r4
 8003f42:	4798      	blx	r3
 8003f44:	2000      	movs	r0, #0
 8003f46:	e7e0      	b.n	8003f0a <_raise_r+0x12>

08003f48 <raise>:
 8003f48:	4b02      	ldr	r3, [pc, #8]	@ (8003f54 <raise+0xc>)
 8003f4a:	4601      	mov	r1, r0
 8003f4c:	6818      	ldr	r0, [r3, #0]
 8003f4e:	f7ff bfd3 	b.w	8003ef8 <_raise_r>
 8003f52:	bf00      	nop
 8003f54:	20000010 	.word	0x20000010

08003f58 <_kill_r>:
 8003f58:	b538      	push	{r3, r4, r5, lr}
 8003f5a:	4d07      	ldr	r5, [pc, #28]	@ (8003f78 <_kill_r+0x20>)
 8003f5c:	2300      	movs	r3, #0
 8003f5e:	4604      	mov	r4, r0
 8003f60:	4608      	mov	r0, r1
 8003f62:	4611      	mov	r1, r2
 8003f64:	602b      	str	r3, [r5, #0]
 8003f66:	f7fd f937 	bl	80011d8 <_kill>
 8003f6a:	1c43      	adds	r3, r0, #1
 8003f6c:	d102      	bne.n	8003f74 <_kill_r+0x1c>
 8003f6e:	682b      	ldr	r3, [r5, #0]
 8003f70:	b103      	cbz	r3, 8003f74 <_kill_r+0x1c>
 8003f72:	6023      	str	r3, [r4, #0]
 8003f74:	bd38      	pop	{r3, r4, r5, pc}
 8003f76:	bf00      	nop
 8003f78:	20000878 	.word	0x20000878

08003f7c <_getpid_r>:
 8003f7c:	f7fd b924 	b.w	80011c8 <_getpid>

08003f80 <__swhatbuf_r>:
 8003f80:	b570      	push	{r4, r5, r6, lr}
 8003f82:	460c      	mov	r4, r1
 8003f84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003f88:	2900      	cmp	r1, #0
 8003f8a:	b096      	sub	sp, #88	@ 0x58
 8003f8c:	4615      	mov	r5, r2
 8003f8e:	461e      	mov	r6, r3
 8003f90:	da0d      	bge.n	8003fae <__swhatbuf_r+0x2e>
 8003f92:	89a3      	ldrh	r3, [r4, #12]
 8003f94:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8003f98:	f04f 0100 	mov.w	r1, #0
 8003f9c:	bf14      	ite	ne
 8003f9e:	2340      	movne	r3, #64	@ 0x40
 8003fa0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8003fa4:	2000      	movs	r0, #0
 8003fa6:	6031      	str	r1, [r6, #0]
 8003fa8:	602b      	str	r3, [r5, #0]
 8003faa:	b016      	add	sp, #88	@ 0x58
 8003fac:	bd70      	pop	{r4, r5, r6, pc}
 8003fae:	466a      	mov	r2, sp
 8003fb0:	f000 f848 	bl	8004044 <_fstat_r>
 8003fb4:	2800      	cmp	r0, #0
 8003fb6:	dbec      	blt.n	8003f92 <__swhatbuf_r+0x12>
 8003fb8:	9901      	ldr	r1, [sp, #4]
 8003fba:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8003fbe:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8003fc2:	4259      	negs	r1, r3
 8003fc4:	4159      	adcs	r1, r3
 8003fc6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8003fca:	e7eb      	b.n	8003fa4 <__swhatbuf_r+0x24>

08003fcc <__smakebuf_r>:
 8003fcc:	898b      	ldrh	r3, [r1, #12]
 8003fce:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003fd0:	079d      	lsls	r5, r3, #30
 8003fd2:	4606      	mov	r6, r0
 8003fd4:	460c      	mov	r4, r1
 8003fd6:	d507      	bpl.n	8003fe8 <__smakebuf_r+0x1c>
 8003fd8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8003fdc:	6023      	str	r3, [r4, #0]
 8003fde:	6123      	str	r3, [r4, #16]
 8003fe0:	2301      	movs	r3, #1
 8003fe2:	6163      	str	r3, [r4, #20]
 8003fe4:	b003      	add	sp, #12
 8003fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003fe8:	ab01      	add	r3, sp, #4
 8003fea:	466a      	mov	r2, sp
 8003fec:	f7ff ffc8 	bl	8003f80 <__swhatbuf_r>
 8003ff0:	9f00      	ldr	r7, [sp, #0]
 8003ff2:	4605      	mov	r5, r0
 8003ff4:	4639      	mov	r1, r7
 8003ff6:	4630      	mov	r0, r6
 8003ff8:	f7fe fec6 	bl	8002d88 <_malloc_r>
 8003ffc:	b948      	cbnz	r0, 8004012 <__smakebuf_r+0x46>
 8003ffe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004002:	059a      	lsls	r2, r3, #22
 8004004:	d4ee      	bmi.n	8003fe4 <__smakebuf_r+0x18>
 8004006:	f023 0303 	bic.w	r3, r3, #3
 800400a:	f043 0302 	orr.w	r3, r3, #2
 800400e:	81a3      	strh	r3, [r4, #12]
 8004010:	e7e2      	b.n	8003fd8 <__smakebuf_r+0xc>
 8004012:	89a3      	ldrh	r3, [r4, #12]
 8004014:	6020      	str	r0, [r4, #0]
 8004016:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800401a:	81a3      	strh	r3, [r4, #12]
 800401c:	9b01      	ldr	r3, [sp, #4]
 800401e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8004022:	b15b      	cbz	r3, 800403c <__smakebuf_r+0x70>
 8004024:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004028:	4630      	mov	r0, r6
 800402a:	f000 f81d 	bl	8004068 <_isatty_r>
 800402e:	b128      	cbz	r0, 800403c <__smakebuf_r+0x70>
 8004030:	89a3      	ldrh	r3, [r4, #12]
 8004032:	f023 0303 	bic.w	r3, r3, #3
 8004036:	f043 0301 	orr.w	r3, r3, #1
 800403a:	81a3      	strh	r3, [r4, #12]
 800403c:	89a3      	ldrh	r3, [r4, #12]
 800403e:	431d      	orrs	r5, r3
 8004040:	81a5      	strh	r5, [r4, #12]
 8004042:	e7cf      	b.n	8003fe4 <__smakebuf_r+0x18>

08004044 <_fstat_r>:
 8004044:	b538      	push	{r3, r4, r5, lr}
 8004046:	4d07      	ldr	r5, [pc, #28]	@ (8004064 <_fstat_r+0x20>)
 8004048:	2300      	movs	r3, #0
 800404a:	4604      	mov	r4, r0
 800404c:	4608      	mov	r0, r1
 800404e:	4611      	mov	r1, r2
 8004050:	602b      	str	r3, [r5, #0]
 8004052:	f7fd f921 	bl	8001298 <_fstat>
 8004056:	1c43      	adds	r3, r0, #1
 8004058:	d102      	bne.n	8004060 <_fstat_r+0x1c>
 800405a:	682b      	ldr	r3, [r5, #0]
 800405c:	b103      	cbz	r3, 8004060 <_fstat_r+0x1c>
 800405e:	6023      	str	r3, [r4, #0]
 8004060:	bd38      	pop	{r3, r4, r5, pc}
 8004062:	bf00      	nop
 8004064:	20000878 	.word	0x20000878

08004068 <_isatty_r>:
 8004068:	b538      	push	{r3, r4, r5, lr}
 800406a:	4d06      	ldr	r5, [pc, #24]	@ (8004084 <_isatty_r+0x1c>)
 800406c:	2300      	movs	r3, #0
 800406e:	4604      	mov	r4, r0
 8004070:	4608      	mov	r0, r1
 8004072:	602b      	str	r3, [r5, #0]
 8004074:	f7fd f920 	bl	80012b8 <_isatty>
 8004078:	1c43      	adds	r3, r0, #1
 800407a:	d102      	bne.n	8004082 <_isatty_r+0x1a>
 800407c:	682b      	ldr	r3, [r5, #0]
 800407e:	b103      	cbz	r3, 8004082 <_isatty_r+0x1a>
 8004080:	6023      	str	r3, [r4, #0]
 8004082:	bd38      	pop	{r3, r4, r5, pc}
 8004084:	20000878 	.word	0x20000878

08004088 <_init>:
 8004088:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800408a:	bf00      	nop
 800408c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800408e:	bc08      	pop	{r3}
 8004090:	469e      	mov	lr, r3
 8004092:	4770      	bx	lr

08004094 <_fini>:
 8004094:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004096:	bf00      	nop
 8004098:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800409a:	bc08      	pop	{r3}
 800409c:	469e      	mov	lr, r3
 800409e:	4770      	bx	lr

080040a0 <__update_veneer>:
 80040a0:	f85f f000 	ldr.w	pc, [pc]	@ 80040a4 <__update_veneer+0x4>
 80040a4:	200002e5 	.word	0x200002e5

Disassembly of section .data:

20000000 <uwTickFreq>:
20000000:	00000001                                ....

20000004 <__sglue>:
20000004:	00000000 00000003 2000073c              ........<.. 

20000010 <_impure_ptr>:
20000010:	20000014                                ... 

20000014 <_impure_data>:
20000014:	00000000 2000073c 200007a4 2000080c     ....<.. ... ... 
	...

20000060 <__global_locale>:
20000060:	00000043 00000000 00000000 00000000     C...............
	...
20000080:	00000043 00000000 00000000 00000000     C...............
	...
200000a0:	00000043 00000000 00000000 00000000     C...............
	...
200000c0:	00000043 00000000 00000000 00000000     C...............
	...
200000e0:	00000043 00000000 00000000 00000000     C...............
	...
20000100:	00000043 00000000 00000000 00000000     C...............
	...
20000120:	00000043 00000000 00000000 00000000     C...............
	...
20000140:	08003af1 08003a71 00000000 08004330     .:..q:......0C..
20000150:	080041f6 08004233 08004233 08004233     .A..3B..3B..3B..
20000160:	08004233 08004233 08004233 08004233     3B..3B..3B..3B..
20000170:	08004233 08004233 ffffffff ffffffff     3B..3B..........
20000180:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
200001a8:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

200001cc <FLASH_Erase>:
	while (((*UART1_SR >> 5) & 1) == 0);
	char data = *UART1_DR;
	return data;
}

__attribute__((section(".RamFunc"))) void FLASH_Erase(uint8_t sector) {
200001cc:	b480      	push	{r7}
200001ce:	b087      	sub	sp, #28
200001d0:	af00      	add	r7, sp, #0
200001d2:	4603      	mov	r3, r0
200001d4:	71fb      	strb	r3, [r7, #7]
	uint32_t* flash_CR = (uint32_t*)(FLASH_BASE + FLASH_CR);
200001d6:	4b1b      	ldr	r3, [pc, #108]	@ (20000244 <FLASH_Erase+0x78>)
200001d8:	617b      	str	r3, [r7, #20]
	uint32_t* flash_SR = (uint32_t*)(FLASH_BASE + FLASH_SR);
200001da:	4b1b      	ldr	r3, [pc, #108]	@ (20000248 <FLASH_Erase+0x7c>)
200001dc:	613b      	str	r3, [r7, #16]
	uint32_t* flash_Keyr = (uint32_t*)(FLASH_BASE + FLASH_KEYR);
200001de:	4b1b      	ldr	r3, [pc, #108]	@ (2000024c <FLASH_Erase+0x80>)
200001e0:	60fb      	str	r3, [r7, #12]
	if (((*flash_SR >> 16) & 1) == 0) {
200001e2:	693b      	ldr	r3, [r7, #16]
200001e4:	681b      	ldr	r3, [r3, #0]
200001e6:	0c1b      	lsrs	r3, r3, #16
200001e8:	f003 0301 	and.w	r3, r3, #1
200001ec:	2b00      	cmp	r3, #0
200001ee:	d123      	bne.n	20000238 <FLASH_Erase+0x6c>
		if (((*flash_CR >> 31) & 1) == 1) {
200001f0:	697b      	ldr	r3, [r7, #20]
200001f2:	681b      	ldr	r3, [r3, #0]
200001f4:	0fdb      	lsrs	r3, r3, #31
200001f6:	2b01      	cmp	r3, #1
200001f8:	d105      	bne.n	20000206 <FLASH_Erase+0x3a>
			*flash_Keyr = 0x45670123;
200001fa:	68fb      	ldr	r3, [r7, #12]
200001fc:	4a14      	ldr	r2, [pc, #80]	@ (20000250 <FLASH_Erase+0x84>)
200001fe:	601a      	str	r2, [r3, #0]
			*flash_Keyr = 0xCDEF89AB;
20000200:	68fb      	ldr	r3, [r7, #12]
20000202:	4a14      	ldr	r2, [pc, #80]	@ (20000254 <FLASH_Erase+0x88>)
20000204:	601a      	str	r2, [r3, #0]
		}
		*flash_CR &= ~(0x0F << 3);
20000206:	697b      	ldr	r3, [r7, #20]
20000208:	681b      	ldr	r3, [r3, #0]
2000020a:	f023 0278 	bic.w	r2, r3, #120	@ 0x78
2000020e:	697b      	ldr	r3, [r7, #20]
20000210:	601a      	str	r2, [r3, #0]
		*flash_CR |= (0b01 << 1) | (0b01 << 16) | (sector << 3);
20000212:	697b      	ldr	r3, [r7, #20]
20000214:	681a      	ldr	r2, [r3, #0]
20000216:	79fb      	ldrb	r3, [r7, #7]
20000218:	00db      	lsls	r3, r3, #3
2000021a:	4313      	orrs	r3, r2
2000021c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
20000220:	f043 0302 	orr.w	r3, r3, #2
20000224:	697a      	ldr	r2, [r7, #20]
20000226:	6013      	str	r3, [r2, #0]
		while (((*flash_SR >> 16) & 1) == 1);
20000228:	bf00      	nop
2000022a:	693b      	ldr	r3, [r7, #16]
2000022c:	681b      	ldr	r3, [r3, #0]
2000022e:	0c1b      	lsrs	r3, r3, #16
20000230:	f003 0301 	and.w	r3, r3, #1
20000234:	2b00      	cmp	r3, #0
20000236:	d1f8      	bne.n	2000022a <FLASH_Erase+0x5e>
	}
}
20000238:	bf00      	nop
2000023a:	371c      	adds	r7, #28
2000023c:	46bd      	mov	sp, r7
2000023e:	f85d 7b04 	ldr.w	r7, [sp], #4
20000242:	4770      	bx	lr
20000244:	40023c10 	.word	0x40023c10
20000248:	40023c0c 	.word	0x40023c0c
2000024c:	40023c04 	.word	0x40023c04
20000250:	45670123 	.word	0x45670123
20000254:	cdef89ab 	.word	0xcdef89ab

20000258 <FLASH_Write>:

__attribute__((section(".RamFunc"))) void FLASH_Write(uint8_t* addr, uint8_t data) {
20000258:	b480      	push	{r7}
2000025a:	b087      	sub	sp, #28
2000025c:	af00      	add	r7, sp, #0
2000025e:	6078      	str	r0, [r7, #4]
20000260:	460b      	mov	r3, r1
20000262:	70fb      	strb	r3, [r7, #3]
	uint32_t* flash_CR = (uint32_t*)(FLASH_BASE + FLASH_CR);
20000264:	4b1a      	ldr	r3, [pc, #104]	@ (200002d0 <FLASH_Write+0x78>)
20000266:	617b      	str	r3, [r7, #20]
	uint32_t* flash_SR = (uint32_t*)(FLASH_BASE + FLASH_SR);
20000268:	4b1a      	ldr	r3, [pc, #104]	@ (200002d4 <FLASH_Write+0x7c>)
2000026a:	613b      	str	r3, [r7, #16]
	uint32_t* flash_Keyr = (uint32_t*)(FLASH_BASE + FLASH_KEYR);
2000026c:	4b1a      	ldr	r3, [pc, #104]	@ (200002d8 <FLASH_Write+0x80>)
2000026e:	60fb      	str	r3, [r7, #12]
	if (((*flash_SR >> 16) & 1) == 0) {
20000270:	693b      	ldr	r3, [r7, #16]
20000272:	681b      	ldr	r3, [r3, #0]
20000274:	0c1b      	lsrs	r3, r3, #16
20000276:	f003 0301 	and.w	r3, r3, #1
2000027a:	2b00      	cmp	r3, #0
2000027c:	d121      	bne.n	200002c2 <FLASH_Write+0x6a>
		if (((*flash_CR >> 31) & 1) == 1) {
2000027e:	697b      	ldr	r3, [r7, #20]
20000280:	681b      	ldr	r3, [r3, #0]
20000282:	0fdb      	lsrs	r3, r3, #31
20000284:	2b01      	cmp	r3, #1
20000286:	d105      	bne.n	20000294 <FLASH_Write+0x3c>
			*flash_Keyr = 0x45670123;
20000288:	68fb      	ldr	r3, [r7, #12]
2000028a:	4a14      	ldr	r2, [pc, #80]	@ (200002dc <FLASH_Write+0x84>)
2000028c:	601a      	str	r2, [r3, #0]
			*flash_Keyr = 0xCDEF89AB;
2000028e:	68fb      	ldr	r3, [r7, #12]
20000290:	4a13      	ldr	r2, [pc, #76]	@ (200002e0 <FLASH_Write+0x88>)
20000292:	601a      	str	r2, [r3, #0]
		}
		*flash_CR |= (0b01 << 0);
20000294:	697b      	ldr	r3, [r7, #20]
20000296:	681b      	ldr	r3, [r3, #0]
20000298:	f043 0201 	orr.w	r2, r3, #1
2000029c:	697b      	ldr	r3, [r7, #20]
2000029e:	601a      	str	r2, [r3, #0]
		*flash_CR &= ~(0b11 << 8);
200002a0:	697b      	ldr	r3, [r7, #20]
200002a2:	681b      	ldr	r3, [r3, #0]
200002a4:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
200002a8:	697b      	ldr	r3, [r7, #20]
200002aa:	601a      	str	r2, [r3, #0]
		*addr = data;
200002ac:	687b      	ldr	r3, [r7, #4]
200002ae:	78fa      	ldrb	r2, [r7, #3]
200002b0:	701a      	strb	r2, [r3, #0]
		while (((*flash_SR >> 16) & 1) == 1);
200002b2:	bf00      	nop
200002b4:	693b      	ldr	r3, [r7, #16]
200002b6:	681b      	ldr	r3, [r3, #0]
200002b8:	0c1b      	lsrs	r3, r3, #16
200002ba:	f003 0301 	and.w	r3, r3, #1
200002be:	2b00      	cmp	r3, #0
200002c0:	d1f8      	bne.n	200002b4 <FLASH_Write+0x5c>
	}
}
200002c2:	bf00      	nop
200002c4:	371c      	adds	r7, #28
200002c6:	46bd      	mov	sp, r7
200002c8:	f85d 7b04 	ldr.w	r7, [sp], #4
200002cc:	4770      	bx	lr
200002ce:	bf00      	nop
200002d0:	40023c10 	.word	0x40023c10
200002d4:	40023c0c 	.word	0x40023c0c
200002d8:	40023c04 	.word	0x40023c04
200002dc:	45670123 	.word	0x45670123
200002e0:	cdef89ab 	.word	0xcdef89ab

200002e4 <update>:

__attribute__((section(".RamFunc"))) void update() {
200002e4:	b580      	push	{r7, lr}
200002e6:	b082      	sub	sp, #8
200002e8:	af00      	add	r7, sp, #0
	FLASH_Erase(0);
200002ea:	2000      	movs	r0, #0
200002ec:	f7ff ff6e 	bl	200001cc <FLASH_Erase>
	for (int i = 0; i < sizeof(rxbuff); i++) {
200002f0:	2300      	movs	r3, #0
200002f2:	607b      	str	r3, [r7, #4]
200002f4:	e00d      	b.n	20000312 <update+0x2e>
		FLASH_Write(0x08000000 + i, rxbuff[i]);
200002f6:	687b      	ldr	r3, [r7, #4]
200002f8:	f103 6300 	add.w	r3, r3, #134217728	@ 0x8000000
200002fc:	4618      	mov	r0, r3
200002fe:	4a09      	ldr	r2, [pc, #36]	@ (20000324 <update+0x40>)
20000300:	687b      	ldr	r3, [r7, #4]
20000302:	4413      	add	r3, r2
20000304:	781b      	ldrb	r3, [r3, #0]
20000306:	4619      	mov	r1, r3
20000308:	f7ff ffa6 	bl	20000258 <FLASH_Write>
	for (int i = 0; i < sizeof(rxbuff); i++) {
2000030c:	687b      	ldr	r3, [r7, #4]
2000030e:	3301      	adds	r3, #1
20000310:	607b      	str	r3, [r7, #4]
20000312:	687b      	ldr	r3, [r7, #4]
20000314:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
20000318:	d3ed      	bcc.n	200002f6 <update+0x12>
	}
}
2000031a:	bf00      	nop
2000031c:	bf00      	nop
2000031e:	3708      	adds	r7, #8
20000320:	46bd      	mov	sp, r7
20000322:	bd80      	pop	{r7, pc}
20000324:	2000034c 	.word	0x2000034c
